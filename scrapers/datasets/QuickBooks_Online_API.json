{
  "apiName": "QuickBooks Online API",
  "url": "https://developer.intuit.com/app/developer/qbo/docs/api/accounting/overview",
  "title": "Intuit Developer",
  "content": "const theme=__shellInternal&&__shellInternal.appExperience&&__shellInternal.appExperience.appTheme?__shellInternal.appExperience.appTheme:\"intuit\";__shellInternal&&__shellInternal.nonce&&(window.__webpack_nonce__=__shellInternal.nonce),document.querySelectorAll(\".IndeterminateShort-circularSpinnerCircle\").forEach((e=>{e.classList.add(`IndeterminateShort-${theme}`)}));const requirePromise=e=>new Promise(((r,n)=>{if(!window.require)return n(new Error(\"window.require is not defined\"));require(e,r,(e=>{e instanceof Error&&(e.internalMessage=\"Shell - failed to fetch shell module\"),n(e)}))})),bootPromise=getShellExperiments(\"enable-pre-boot-hook\")&&window.__middlewareConfig&&\"function\"==typeof window.__middlewareConfig.preBoot?window.__middlewareConfig.preBoot():Promise.resolve();bootPromise.then((()=>{return e=[\"web-shell\"],new Promise(((r,n)=>{if(!window.require)return n(new Error(\"window.require is not defined\"));require(e,r,(e=>{e instanceof Error&&(e.internalMessage=\"Shell - failed to fetch shell module\"),n(e)}))}));var e}),(e=>{throw e instanceof Error&&(e.internalMessage=\"Shell - failed to execute preBoot middleware\"),e})).then((({default:e})=>e)).then((({default:e})=>e())).catch((e=>{window.__shellInternal.logger.error(e&&e.internalMessage||\"Shell - failed to start shell\",{},e)}))"
}