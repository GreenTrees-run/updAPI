{
  "apiName": "Telegram Bot API",
  "url": "https://core.telegram.org/bots/api",
  "title": "Telegram Bot API",
  "content": "Twitter\n            \n              Home\nFAQ\nApps\nAPI\nProtocol\nSchema\n            \n          \n        \n      \n      \n        \n          \n  Telegram BotsTelegram Bot API\n  Telegram Bot API\n  \n  \n\n\nThe Bot API is an HTTP-based interface created for developers keen on building bots for Telegram.To learn how to create and set up a bot, please consult our Introduction to Bots and Bot FAQ.\n\nRecent changes\n\nSubscribe to @BotNews to be the first to know about the latest updates and join the discussion in @BotTalk\n\nJanuary 1, 2025\nBot API 8.2\n\nAdded the methods verifyUser, verifyChat, removeUserVerification and removeChatVerification, allowing bots to manage verifications on behalf of an organization.\nAdded the field upgrade_star_count to the class Gift.\nAdded the parameter pay_for_upgrade to the method sendGift.\nRemoved the field hide_url from the class InlineQueryResultArticle. Pass an empty string as url instead.\n\nDecember 4, 2024\nBot API 8.1\n\nAdded the field nanostar_amount to the class StarTransaction.\nAdded the class TransactionPartnerAffiliateProgram for transactions pertaining to incoming affiliate commissions.\nAdded the class AffiliateInfo and the field affiliate to the class TransactionPartnerUser, allowing bots to identify the relevant affiliate in transactions with an affiliate commission.\n\nNovember 17, 2024\nBot API 8.0\n\nBot API 8.0 introduces 10 powerful new features for Mini Apps - including the ability to enter full-screen mode, launch from home screen shortcuts, offer subscription plans and more. Check out all the details in our dedicated blog and Mini App documentation.\n\nStar Subscriptions\n\nBots now support paid subscriptions powered by Telegram Stars - monetizing their efforts with multiple tiers of content and features.\nAdded the parameter subscription_period to the method createInvoiceLink to support the creation of links that are billed periodically.\nAdded the parameter business_connection_id to the method createInvoiceLink to support the creation of invoice links on behalf of business accounts.\nAdded the fields subscription_expiration_date, is_recurring and is_first_recurring to the class SuccessfulPayment.\nAdded the method editUserStarSubscription.\nAdded the field subscription_period to the class TransactionPartnerUser.\n\nFull-screen Mode\n\nMini Apps are now able to become full-screen in both portrait and landscape mode - allowing them to host more games, play widescreen media and support immersive user experiences.\nAdded the methods requestFullscreen and exitFullscreen to the class WebApp to toggle full-screen mode.\nAdded the fields safeAreaInset and contentSafeAreaInset to the class WebApp, allowing Mini Apps to ensure that their content properly respects the device's safe area margins.\nFurther added the fields isActive and isFullscreen to the class WebApp.\nAdded the events activated, deactivated, safeAreaChanged, contentSafeAreaChanged, fullscreenChanged and fullscreenFailed for Mini Apps.\n\nHomescreen Shortcuts\n\nMini Apps can now be accessed via direct shortcuts added to the home screen of mobile devices.\nAdded the method addToHomeScreen to the class WebApp to create a shortcut for users to add to their home screens.\nAdded the method checkHomeScreenStatus to the class WebApp to determine the status and support of the home screen shortcut for the Mini App on the current device.\nAdded the events homeScreenAdded and homeScreenChecked for Mini Apps.\n\nEmoji Status\n\nMini Apps can now prompt users to set their emoji status - or request access to later sync it automatically with in-game badges, third-party APIs and more.\nAdded the method setUserEmojiStatus. The user must allow the bot to manage their emoji status.\nAdded the method setEmojiStatus to the class WebApp to let users manually confirm a custom emoji as their new status via a native dialog.\nAdded the method requestEmojiStatusAccess to the class WebApp for obtaining permission to later update a user's emoji status via the Bot API method setUserEmojiStatus.\nAdded the events emojiStatusSet, emojiStatusFailed and emojiStatusAccessRequested for Mini Apps.\n\nMedia Sharing and File Downloads\n\nUsers can now share media directly from Mini Apps - sending referral codes, custom memes, artwork and more to any chat or posting them as a story.\nAdded the class PreparedInlineMessage and the method savePreparedInlineMessage, allowing bots to suggest users to send a specific message from a Mini App via the method shareMessage.\nAdded the method shareMessage to the class WebApp to share media from Mini Apps to Telegram chats.\nAdded the method downloadFile to the class WebApp, introducing support for a native popup that prompts users to download files from the Mini App.\nAdded the events shareMessageSent, shareMessageFailed and fileDownloadRequested for Mini Apps.\n\nGeolocation Access\n\nMini Apps can now request geolocation access to users, allowing them to build virtually any location-based service, from games with dynamic points of interest to interactive maps for events.\nAdded the field LocationManager to the class WebApp.\nAdded the events locationManagerUpdated and locationRequested for Mini Apps.\n\nDevice Motion Tracking\n\nMini Apps can now track detailed device motion data, allowing them to implement better productivity tools, immersive VR experiences and more.\nAdded the fields isOrientationLocked, Accelerometer, DeviceOrientation and Gyroscope to the class WebApp.\nAdded the methods lockOrientation and unlockOrientation to the class WebApp to control the screen orientation.\nAdded the events accelerometerStarted, accelerometerStopped, accelerometerChanged, accelerometerFailed, deviceOrientationStarted, deviceOrientationStopped, deviceOrientationChanged, deviceOrientationFailed, gyroscopeStarted, gyroscopeStopped, gyroscopeChanged, gyroscopeFailed for Mini Apps.\n\nGifts\n\nBots can now send Paid Gifts to users in exchange for Telegram Stars.\nAdded the classes Gift and Gifts and the method getAvailableGifts, allowing bots to get all gifts available for sending.\nAdded the method sendGift, allowing bots to send gifts to users.\nAdded the field gift to the class TransactionPartnerUser.\n\nLoading Screen Customization\n\nMini Apps can customize their loading screen, adding their own icon and specific colors for light and dark themes.\nYou can access these customization settings in @BotFather via /mybots > Select Bot > Bot Settings > Configure Mini App > Enable Mini App\n\nHardware-specific Optimizations\n\nMini Apps running on Android can now receive basic information about a device's processing hardware, allowing them to optimize user experience based on the device's capabilities.\nThis information includes the OS, App and SDK's respective versions as well as the device's model and performance class.\n\n General \n\nAdded the field photo_url to the class WebAppUser for all bots, allowing Mini Apps to access a user's profile photo if their privacy settings allow for it.\nThird parties (e.g., Mini App builders) that receive or process data on behalf of Mini Apps are now able to validate it without knowing the App's bot token.\nDebugging options have been expanded to include full support for iOS devices. You can use these tools to find app-specific issues in your Mini App.\n\n\n\n WARNING! Starting December 1, 2024 messages with video that are sent, copied or forwarded to groups and channels with a sufficiently large audience can be automatically scheduled by the server until the respective video is reencoded. Such messages will have 0 as their message identifier and can't be used before they are actually sent.\n\nOctober 31, 2024\nBot API 7.11\n\nAdded the class CopyTextButton and the field copy_text in the class InlineKeyboardButton allowing bots to send and receive inline buttons that copy arbitrary text.\nAdded the parameter allow_paid_broadcast to the methods sendMessage, sendPhoto, sendVideo, sendAnimation, sendAudio, sendDocument, sendPaidMedia, sendSticker, sendVideoNote, sendVoice, sendLocation, sendVenue, sendContact, sendPoll, sendDice, sendInvoice, sendGame, sendMediaGroup and copyMessage.\nAdded the class TransactionPartnerTelegramApi for transactions related to paid broadcasted messages.\nIntroduced the ability to add media to existing text messages using the method editMessageMedia.\nAdded support for hashtag and cashtag entities with a specified chat username that opens a search for the relevant tag within the specified chat.\n\n\n\n WARNING! Starting December 1, 2024 messages with video that are sent, copied or forwarded to groups and channels with a sufficiently large audience can be automatically scheduled by the server until the respective video is reencoded. Such messages will have 0 as their message identifier and can't be used before they are actually sent.\n\nSee earlier changes Â»\nAuthorizing your bot\nEach bot is given a unique authentication token when it is created. The token looks something like 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11, but we'll use simply <token> in this document instead. You can learn about obtaining tokens and generating new ones in this document.\nMaking requests\nAll queries to the Telegram Bot API must be served over HTTPS and need to be presented in this form: https://api.telegram.org/bot<token>/METHOD_NAME. Like this for example:\nhttps://api.telegram.org/bot123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11/getMe\nWe support GET and POST HTTP methods. We support four ways of passing parameters in Bot API requests:\n\nURL query string\napplication/x-www-form-urlencoded\napplication/json (except for uploading files)\nmultipart/form-data (use to upload files)\n\nThe response contains a JSON object, which always has a Boolean field 'ok' and may have an optional String field 'description' with a human-readable description of the result. If 'ok' equals True, the request was successful and the result of the query can be found in the 'result' field. In case of an unsuccessful request, 'ok' equals false and the error is explained in the 'description'. An Integer 'error_code' field is also returned, but its contents are subject to change in the future. Some errors may also have an optional field 'parameters' of the type ResponseParameters, which can help to automatically handle the error.\n\nAll methods in the Bot API are case-insensitive.\nAll queries must be made using UTF-8.\n\nMaking requests when getting updates\nIf you're using webhooks, you can perform a request to the Bot API while sending an answer to the webhook. Use either application/json or application/x-www-form-urlencoded or multipart/form-data response content type for passing parameters. Specify the method to be invoked in the method parameter of the request. It's not possible to know that such a request was successful or get its result.\n\nPlease see our FAQ for examples.\n\nUsing a Local Bot API Server\nThe Bot API server source code is available at telegram-bot-api. You can run it locally and send the requests to your own server instead of https://api.telegram.org. If you switch to a local Bot API server, your bot will be able to:\n\nDownload files without a size limit.\nUpload files up to 2000 MB.\nUpload files using their local path and the file URI scheme.\nUse an HTTP URL for the webhook.\nUse any local IP address for the webhook.\nUse any port for the webhook.\nSet max_webhook_connections up to 100000.\nReceive the absolute local path as a value of the file_path field without the need to download the file after a getFile request.\n\nDo I need a Local Bot API Server\nThe majority of bots will be OK with the default configuration, running on our servers. But if you feel that you need one of these features, you're welcome to switch to your own at any time.\nGetting updates\nThere are two mutually exclusive ways of receiving updates for your bot - the getUpdates method on one hand and webhooks on the other. Incoming updates are stored on the server until the bot receives them either way, but they will not be kept longer than 24 hours.\nRegardless of which option you choose, you will receive JSON-serialized Update objects as a result.\nUpdate\nThis object represents an incoming update.At most one of the optional parameters can be present in any given update.\n\n\n\nField\nType\nDescription\n\n\n\n\nupdate_id\nInteger\nThe update's unique identifier. Update identifiers start from a certain positive number and increase sequentially. This identifier becomes especially handy if you're using webhooks, since it allows you to ignore repeated updates or to restore the correct update sequence, should they get out of order. If there are no new updates for at least a week, then identifier of the next update will be chosen randomly instead of sequentially.\n\n\nmessage\nMessage\nOptional. New incoming message of any kind - text, photo, sticker, etc.\n\n\nedited_message\nMessage\nOptional. New version of a message that is known to the bot and was edited. This update may at times be triggered by changes to message fields that are either unavailable or not actively used by your bot.\n\n\nchannel_post\nMessage\nOptional. New incoming channel post of any kind - text, photo, sticker, etc.\n\n\nedited_channel_post\nMessage\nOptional. New version of a channel post that is known to the bot and was edited. This update may at times be triggered by changes to message fields that are either unavailable or not actively used by your bot.\n\n\nbusiness_connection\nBusinessConnection\nOptional. The bot was connected to or disconnected from a business account, or a user edited an existing connection with the bot\n\n\nbusiness_message\nMessage\nOptional. New message from a connected business account\n\n\nedited_business_message\nMessage\nOptional. New version of a message from a connected business account\n\n\ndeleted_business_messages\nBusinessMessagesDeleted\nOptional. Messages were deleted from a connected business account\n\n\nmessage_reaction\nMessageReactionUpdated\nOptional. A reaction to a message was changed by a user. The bot must be an administrator in the chat and must explicitly specify \"message_reaction\" in the list of allowed_updates to receive these updates. The update isn't received for reactions set by bots.\n\n\nmessage_reaction_count\nMessageReactionCountUpdated\nOptional. Reactions to a message with anonymous reactions were changed. The bot must be an administrator in the chat and must explicitly specify \"message_reaction_count\" in the list of allowed_updates to receive these updates. The updates are grouped and can be sent with delay up to a few minutes.\n\n\ninline_query\nInlineQuery\nOptional. New incoming inline query\n\n\nchosen_inline_result\nChosenInlineResult\nOptional. The result of an inline query that was chosen by a user and sent to their chat partner. Please see our documentation on the feedback collecting for details on how to enable these updates for your bot.\n\n\ncallback_query\nCallbackQuery\nOptional. New incoming callback query\n\n\nshipping_query\nShippingQuery\nOptional. New incoming shipping query. Only for invoices with flexible price\n\n\npre_checkout_query\nPreCheckoutQuery\nOptional. New incoming pre-checkout query. Contains full information about checkout\n\n\npurchased_paid_media\nPaidMediaPurchased\nOptional. A user purchased paid media with a non-empty payload sent by the bot in a non-channel chat\n\n\npoll\nPoll\nOptional. New poll state. Bots receive only updates about manually stopped polls and polls, which are sent by the bot\n\n\npoll_answer\nPollAnswer\nOptional. A user changed their answer in a non-anonymous poll. Bots receive new votes only in polls that were sent by the bot itself.\n\n\nmy_chat_member\nChatMemberUpdated\nOptional. The bot's chat member status was updated in a chat. For private chats, this update is received only when the bot is blocked or unblocked by the user.\n\n\nchat_member\nChatMemberUpdated\nOptional. A chat member's status was updated in a chat. The bot must be an administrator in the chat and must explicitly specify \"chat_member\" in the list of allowed_updates to receive these updates.\n\n\nchat_join_request\nChatJoinRequest\nOptional. A request to join the chat has been sent. The bot must have the can_invite_users administrator right in the chat to receive these updates.\n\n\nchat_boost\nChatBoostUpdated\nOptional. A chat boost was added or changed. The bot must be an administrator in the chat to receive these updates.\n\n\nremoved_chat_boost\nChatBoostRemoved\nOptional. A boost was removed from a chat. The bot must be an administrator in the chat to receive these updates.\n\n\n\ngetUpdates\nUse this method to receive incoming updates using long polling (wiki). Returns an Array of Update objects.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\noffset\nInteger\nOptional\nIdentifier of the first update to be returned. Must be greater by one than the highest among the identifiers of previously received updates. By default, updates starting with the earliest unconfirmed update are returned. An update is considered confirmed as soon as getUpdates is called with an offset higher than its update_id. The negative offset can be specified to retrieve updates starting from -offset update from the end of the updates queue. All previous updates will be forgotten.\n\n\nlimit\nInteger\nOptional\nLimits the number of updates to be retrieved. Values between 1-100 are accepted. Defaults to 100.\n\n\ntimeout\nInteger\nOptional\nTimeout in seconds for long polling. Defaults to 0, i.e. usual short polling. Should be positive, short polling should be used for testing purposes only.\n\n\nallowed_updates\nArray of String\nOptional\nA JSON-serialized list of the update types you want your bot to receive. For example, specify [\"message\", \"edited_channel_post\", \"callback_query\"] to only receive updates of these types. See Update for a complete list of available update types. Specify an empty list to receive all update types except chat_member, message_reaction, and message_reaction_count (default). If not specified, the previous setting will be used.Please note that this parameter doesn't affect updates created before the call to getUpdates, so unwanted updates may be received for a short period of time.\n\n\n\n\nNotes1. This method will not work if an outgoing webhook is set up.2. In order to avoid getting duplicate updates, recalculate offset after each server response.\n\nsetWebhook\nUse this method to specify a URL and receive incoming updates via an outgoing webhook. Whenever there is an update for the bot, we will send an HTTPS POST request to the specified URL, containing a JSON-serialized Update. In case of an unsuccessful request (a request with response HTTP status code different from 2XY), we will repeat the request and give up after a reasonable amount of attempts. Returns True on success.\nIf you'd like to make sure that the webhook was set by you, you can specify secret data in the parameter secret_token. If specified, the request will contain a header âX-Telegram-Bot-Api-Secret-Tokenâ with the secret token as content.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nurl\nString\nYes\nHTTPS URL to send updates to. Use an empty string to remove webhook integration\n\n\ncertificate\nInputFile\nOptional\nUpload your public key certificate so that the root certificate in use can be checked. See our self-signed guide for details.\n\n\nip_address\nString\nOptional\nThe fixed IP address which will be used to send webhook requests instead of the IP address resolved through DNS\n\n\nmax_connections\nInteger\nOptional\nThe maximum allowed number of simultaneous HTTPS connections to the webhook for update delivery, 1-100. Defaults to 40. Use lower values to limit the load on your bot's server, and higher values to increase your bot's throughput.\n\n\nallowed_updates\nArray of String\nOptional\nA JSON-serialized list of the update types you want your bot to receive. For example, specify [\"message\", \"edited_channel_post\", \"callback_query\"] to only receive updates of these types. See Update for a complete list of available update types. Specify an empty list to receive all update types except chat_member, message_reaction, and message_reaction_count (default). If not specified, the previous setting will be used.Please note that this parameter doesn't affect updates created before the call to the setWebhook, so unwanted updates may be received for a short period of time.\n\n\ndrop_pending_updates\nBoolean\nOptional\nPass True to drop all pending updates\n\n\nsecret_token\nString\nOptional\nA secret token to be sent in a header âX-Telegram-Bot-Api-Secret-Tokenâ in every webhook request, 1-256 characters. Only characters A-Z, a-z, 0-9, _ and - are allowed. The header is useful to ensure that the request comes from a webhook set by you.\n\n\n\n\nNotes1. You will not be able to receive updates using getUpdates for as long as an outgoing webhook is set up.2. To use a self-signed certificate, you need to upload your public key certificate using certificate parameter. Please upload as InputFile, sending a String will not work.3. Ports currently supported for webhooks: 443, 80, 88, 8443.\nIf you're having any trouble setting up webhooks, please check out this amazing guide to webhooks.\n\ndeleteWebhook\nUse this method to remove webhook integration if you decide to switch back to getUpdates. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\ndrop_pending_updates\nBoolean\nOptional\nPass True to drop all pending updates\n\n\n\ngetWebhookInfo\nUse this method to get current webhook status. Requires no parameters. On success, returns a WebhookInfo object. If the bot is using getUpdates, will return an object with the url field empty.\nWebhookInfo\nDescribes the current status of a webhook.\n\n\n\nField\nType\nDescription\n\n\n\n\nurl\nString\nWebhook URL, may be empty if webhook is not set up\n\n\nhas_custom_certificate\nBoolean\nTrue, if a custom certificate was provided for webhook certificate checks\n\n\npending_update_count\nInteger\nNumber of updates awaiting delivery\n\n\nip_address\nString\nOptional. Currently used webhook IP address\n\n\nlast_error_date\nInteger\nOptional. Unix time for the most recent error that happened when trying to deliver an update via webhook\n\n\nlast_error_message\nString\nOptional. Error message in human-readable format for the most recent error that happened when trying to deliver an update via webhook\n\n\nlast_synchronization_error_date\nInteger\nOptional. Unix time of the most recent error that happened when trying to synchronize available updates with Telegram datacenters\n\n\nmax_connections\nInteger\nOptional. The maximum allowed number of simultaneous HTTPS connections to the webhook for update delivery\n\n\nallowed_updates\nArray of String\nOptional. A list of update types the bot is subscribed to. Defaults to all update types except chat_member\n\n\n\nAvailable types\nAll types used in the Bot API responses are represented as JSON-objects.\nIt is safe to use 32-bit signed integers for storing all Integer fields unless otherwise noted.\n\nOptional fields may be not returned when irrelevant.\n\nUser\nThis object represents a Telegram user or bot.\n\n\n\nField\nType\nDescription\n\n\n\n\nid\nInteger\nUnique identifier for this user or bot. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.\n\n\nis_bot\nBoolean\nTrue, if this user is a bot\n\n\nfirst_name\nString\nUser's or bot's first name\n\n\nlast_name\nString\nOptional. User's or bot's last name\n\n\nusername\nString\nOptional. User's or bot's username\n\n\nlanguage_code\nString\nOptional. IETF language tag of the user's language\n\n\nis_premium\nTrue\nOptional. True, if this user is a Telegram Premium user\n\n\nadded_to_attachment_menu\nTrue\nOptional. True, if this user added the bot to the attachment menu\n\n\ncan_join_groups\nBoolean\nOptional. True, if the bot can be invited to groups. Returned only in getMe.\n\n\ncan_read_all_group_messages\nBoolean\nOptional. True, if privacy mode is disabled for the bot. Returned only in getMe.\n\n\nsupports_inline_queries\nBoolean\nOptional. True, if the bot supports inline queries. Returned only in getMe.\n\n\ncan_connect_to_business\nBoolean\nOptional. True, if the bot can be connected to a Telegram Business account to receive its messages. Returned only in getMe.\n\n\nhas_main_web_app\nBoolean\nOptional. True, if the bot has a main Web App. Returned only in getMe.\n\n\n\nChat\nThis object represents a chat.\n\n\n\nField\nType\nDescription\n\n\n\n\nid\nInteger\nUnique identifier for this chat. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.\n\n\ntype\nString\nType of the chat, can be either âprivateâ, âgroupâ, âsupergroupâ or âchannelâ\n\n\ntitle\nString\nOptional. Title, for supergroups, channels and group chats\n\n\nusername\nString\nOptional. Username, for private chats, supergroups and channels if available\n\n\nfirst_name\nString\nOptional. First name of the other party in a private chat\n\n\nlast_name\nString\nOptional. Last name of the other party in a private chat\n\n\nis_forum\nTrue\nOptional. True, if the supergroup chat is a forum (has topics enabled)\n\n\n\nChatFullInfo\nThis object contains full information about a chat.\n\n\n\nField\nType\nDescription\n\n\n\n\nid\nInteger\nUnique identifier for this chat. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.\n\n\ntype\nString\nType of the chat, can be either âprivateâ, âgroupâ, âsupergroupâ or âchannelâ\n\n\ntitle\nString\nOptional. Title, for supergroups, channels and group chats\n\n\nusername\nString\nOptional. Username, for private chats, supergroups and channels if available\n\n\nfirst_name\nString\nOptional. First name of the other party in a private chat\n\n\nlast_name\nString\nOptional. Last name of the other party in a private chat\n\n\nis_forum\nTrue\nOptional. True, if the supergroup chat is a forum (has topics enabled)\n\n\naccent_color_id\nInteger\nIdentifier of the accent color for the chat name and backgrounds of the chat photo, reply header, and link preview. See accent colors for more details.\n\n\nmax_reaction_count\nInteger\nThe maximum number of reactions that can be set on a message in the chat\n\n\nphoto\nChatPhoto\nOptional. Chat photo\n\n\nactive_usernames\nArray of String\nOptional. If non-empty, the list of all active chat usernames; for private chats, supergroups and channels\n\n\nbirthdate\nBirthdate\nOptional. For private chats, the date of birth of the user\n\n\nbusiness_intro\nBusinessIntro\nOptional. For private chats with business accounts, the intro of the business\n\n\nbusiness_location\nBusinessLocation\nOptional. For private chats with business accounts, the location of the business\n\n\nbusiness_opening_hours\nBusinessOpeningHours\nOptional. For private chats with business accounts, the opening hours of the business\n\n\npersonal_chat\nChat\nOptional. For private chats, the personal channel of the user\n\n\navailable_reactions\nArray of ReactionType\nOptional. List of available reactions allowed in the chat. If omitted, then all emoji reactions are allowed.\n\n\nbackground_custom_emoji_id\nString\nOptional. Custom emoji identifier of the emoji chosen by the chat for the reply header and link preview background\n\n\nprofile_accent_color_id\nInteger\nOptional. Identifier of the accent color for the chat's profile background. See profile accent colors for more details.\n\n\nprofile_background_custom_emoji_id\nString\nOptional. Custom emoji identifier of the emoji chosen by the chat for its profile background\n\n\nemoji_status_custom_emoji_id\nString\nOptional. Custom emoji identifier of the emoji status of the chat or the other party in a private chat\n\n\nemoji_status_expiration_date\nInteger\nOptional. Expiration date of the emoji status of the chat or the other party in a private chat, in Unix time, if any\n\n\nbio\nString\nOptional. Bio of the other party in a private chat\n\n\nhas_private_forwards\nTrue\nOptional. True, if privacy settings of the other party in the private chat allows to use tg://user?id=<user_id> links only in chats with the user\n\n\nhas_restricted_voice_and_video_messages\nTrue\nOptional. True, if the privacy settings of the other party restrict sending voice and video note messages in the private chat\n\n\njoin_to_send_messages\nTrue\nOptional. True, if users need to join the supergroup before they can send messages\n\n\njoin_by_request\nTrue\nOptional. True, if all users directly joining the supergroup without using an invite link need to be approved by supergroup administrators\n\n\ndescription\nString\nOptional. Description, for groups, supergroups and channel chats\n\n\ninvite_link\nString\nOptional. Primary invite link, for groups, supergroups and channel chats\n\n\npinned_message\nMessage\nOptional. The most recent pinned message (by sending date)\n\n\npermissions\nChatPermissions\nOptional. Default chat member permissions, for groups and supergroups\n\n\ncan_send_paid_media\nTrue\nOptional. True, if paid media messages can be sent or forwarded to the channel chat. The field is available only for channel chats.\n\n\nslow_mode_delay\nInteger\nOptional. For supergroups, the minimum allowed delay between consecutive messages sent by each unprivileged user; in seconds\n\n\nunrestrict_boost_count\nInteger\nOptional. For supergroups, the minimum number of boosts that a non-administrator user needs to add in order to ignore slow mode and chat permissions\n\n\nmessage_auto_delete_time\nInteger\nOptional. The time after which all messages sent to the chat will be automatically deleted; in seconds\n\n\nhas_aggressive_anti_spam_enabled\nTrue\nOptional. True, if aggressive anti-spam checks are enabled in the supergroup. The field is only available to chat administrators.\n\n\nhas_hidden_members\nTrue\nOptional. True, if non-administrators can only get the list of bots and administrators in the chat\n\n\nhas_protected_content\nTrue\nOptional. True, if messages from the chat can't be forwarded to other chats\n\n\nhas_visible_history\nTrue\nOptional. True, if new chat members will have access to old messages; available only to chat administrators\n\n\nsticker_set_name\nString\nOptional. For supergroups, name of the group sticker set\n\n\ncan_set_sticker_set\nTrue\nOptional. True, if the bot can change the group sticker set\n\n\ncustom_emoji_sticker_set_name\nString\nOptional. For supergroups, the name of the group's custom emoji sticker set. Custom emoji from this set can be used by all users and bots in the group.\n\n\nlinked_chat_id\nInteger\nOptional. Unique identifier for the linked chat, i.e. the discussion group identifier for a channel and vice versa; for supergroups and channel chats. This identifier may be greater than 32 bits and some programming languages may have difficulty/silent defects in interpreting it. But it is smaller than 52 bits, so a signed 64 bit integer or double-precision float type are safe for storing this identifier.\n\n\nlocation\nChatLocation\nOptional. For supergroups, the location to which the supergroup is connected\n\n\n\nMessage\nThis object represents a message.\n\n\n\nField\nType\nDescription\n\n\n\n\nmessage_id\nInteger\nUnique message identifier inside this chat. In specific instances (e.g., message containing a video sent to a big chat), the server might automatically schedule a message instead of sending it immediately. In such cases, this field will be 0 and the relevant message will be unusable until it is actually sent\n\n\nmessage_thread_id\nInteger\nOptional. Unique identifier of a message thread to which the message belongs; for supergroups only\n\n\nfrom\nUser\nOptional. Sender of the message; may be empty for messages sent to channels. For backward compatibility, if the message was sent on behalf of a chat, the field contains a fake sender user in non-channel chats\n\n\nsender_chat\nChat\nOptional. Sender of the message when sent on behalf of a chat. For example, the supergroup itself for messages sent by its anonymous administrators or a linked channel for messages automatically forwarded to the channel's discussion group. For backward compatibility, if the message was sent on behalf of a chat, the field from contains a fake sender user in non-channel chats.\n\n\nsender_boost_count\nInteger\nOptional. If the sender of the message boosted the chat, the number of boosts added by the user\n\n\nsender_business_bot\nUser\nOptional. The bot that actually sent the message on behalf of the business account. Available only for outgoing messages sent on behalf of the connected business account.\n\n\ndate\nInteger\nDate the message was sent in Unix time. It is always a positive number, representing a valid date.\n\n\nbusiness_connection_id\nString\nOptional. Unique identifier of the business connection from which the message was received. If non-empty, the message belongs to a chat of the corresponding business account that is independent from any potential bot chat which might share the same identifier.\n\n\nchat\nChat\nChat the message belongs to\n\n\nforward_origin\nMessageOrigin\nOptional. Information about the original message for forwarded messages\n\n\nis_topic_message\nTrue\nOptional. True, if the message is sent to a forum topic\n\n\nis_automatic_forward\nTrue\nOptional. True, if the message is a channel post that was automatically forwarded to the connected discussion group\n\n\nreply_to_message\nMessage\nOptional. For replies in the same chat and message thread, the original message. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply.\n\n\nexternal_reply\nExternalReplyInfo\nOptional. Information about the message that is being replied to, which may come from another chat or forum topic\n\n\nquote\nTextQuote\nOptional. For replies that quote part of the original message, the quoted part of the message\n\n\nreply_to_story\nStory\nOptional. For replies to a story, the original story\n\n\nvia_bot\nUser\nOptional. Bot through which the message was sent\n\n\nedit_date\nInteger\nOptional. Date the message was last edited in Unix time\n\n\nhas_protected_content\nTrue\nOptional. True, if the message can't be forwarded\n\n\nis_from_offline\nTrue\nOptional. True, if the message was sent by an implicit action, for example, as an away or a greeting business message, or as a scheduled message\n\n\nmedia_group_id\nString\nOptional. The unique identifier of a media message group this message belongs to\n\n\nauthor_signature\nString\nOptional. Signature of the post author for messages in channels, or the custom title of an anonymous group administrator\n\n\ntext\nString\nOptional. For text messages, the actual UTF-8 text of the message\n\n\nentities\nArray of MessageEntity\nOptional. For text messages, special entities like usernames, URLs, bot commands, etc. that appear in the text\n\n\nlink_preview_options\nLinkPreviewOptions\nOptional. Options used for link preview generation for the message, if it is a text message and link preview options were changed\n\n\neffect_id\nString\nOptional. Unique identifier of the message effect added to the message\n\n\nanimation\nAnimation\nOptional. Message is an animation, information about the animation. For backward compatibility, when this field is set, the document field will also be set\n\n\naudio\nAudio\nOptional. Message is an audio file, information about the file\n\n\ndocument\nDocument\nOptional. Message is a general file, information about the file\n\n\npaid_media\nPaidMediaInfo\nOptional. Message contains paid media; information about the paid media\n\n\nphoto\nArray of PhotoSize\nOptional. Message is a photo, available sizes of the photo\n\n\nsticker\nSticker\nOptional. Message is a sticker, information about the sticker\n\n\nstory\nStory\nOptional. Message is a forwarded story\n\n\nvideo\nVideo\nOptional. Message is a video, information about the video\n\n\nvideo_note\nVideoNote\nOptional. Message is a video note, information about the video message\n\n\nvoice\nVoice\nOptional. Message is a voice message, information about the file\n\n\ncaption\nString\nOptional. Caption for the animation, audio, document, paid media, photo, video or voice\n\n\ncaption_entities\nArray of MessageEntity\nOptional. For messages with a caption, special entities like usernames, URLs, bot commands, etc. that appear in the caption\n\n\nshow_caption_above_media\nTrue\nOptional. True, if the caption must be shown above the message media\n\n\nhas_media_spoiler\nTrue\nOptional. True, if the message media is covered by a spoiler animation\n\n\ncontact\nContact\nOptional. Message is a shared contact, information about the contact\n\n\ndice\nDice\nOptional. Message is a dice with random value\n\n\ngame\nGame\nOptional. Message is a game, information about the game. More about games Â»\n\n\npoll\nPoll\nOptional. Message is a native poll, information about the poll\n\n\nvenue\nVenue\nOptional. Message is a venue, information about the venue. For backward compatibility, when this field is set, the location field will also be set\n\n\nlocation\nLocation\nOptional. Message is a shared location, information about the location\n\n\nnew_chat_members\nArray of User\nOptional. New members that were added to the group or supergroup and information about them (the bot itself may be one of these members)\n\n\nleft_chat_member\nUser\nOptional. A member was removed from the group, information about them (this member may be the bot itself)\n\n\nnew_chat_title\nString\nOptional. A chat title was changed to this value\n\n\nnew_chat_photo\nArray of PhotoSize\nOptional. A chat photo was change to this value\n\n\ndelete_chat_photo\nTrue\nOptional. Service message: the chat photo was deleted\n\n\ngroup_chat_created\nTrue\nOptional. Service message: the group has been created\n\n\nsupergroup_chat_created\nTrue\nOptional. Service message: the supergroup has been created. This field can't be received in a message coming through updates, because bot can't be a member of a supergroup when it is created. It can only be found in reply_to_message if someone replies to a very first message in a directly created supergroup.\n\n\nchannel_chat_created\nTrue\nOptional. Service message: the channel has been created. This field can't be received in a message coming through updates, because bot can't be a member of a channel when it is created. It can only be found in reply_to_message if someone replies to a very first message in a channel.\n\n\nmessage_auto_delete_timer_changed\nMessageAutoDeleteTimerChanged\nOptional. Service message: auto-delete timer settings changed in the chat\n\n\nmigrate_to_chat_id\nInteger\nOptional. The group has been migrated to a supergroup with the specified identifier. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.\n\n\nmigrate_from_chat_id\nInteger\nOptional. The supergroup has been migrated from a group with the specified identifier. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.\n\n\npinned_message\nMaybeInaccessibleMessage\nOptional. Specified message was pinned. Note that the Message object in this field will not contain further reply_to_message fields even if it itself is a reply.\n\n\ninvoice\nInvoice\nOptional. Message is an invoice for a payment, information about the invoice. More about payments Â»\n\n\nsuccessful_payment\nSuccessfulPayment\nOptional. Message is a service message about a successful payment, information about the payment. More about payments Â»\n\n\nrefunded_payment\nRefundedPayment\nOptional. Message is a service message about a refunded payment, information about the payment. More about payments Â»\n\n\nusers_shared\nUsersShared\nOptional. Service message: users were shared with the bot\n\n\nchat_shared\nChatShared\nOptional. Service message: a chat was shared with the bot\n\n\nconnected_website\nString\nOptional. The domain name of the website on which the user has logged in. More about Telegram Login Â»\n\n\nwrite_access_allowed\nWriteAccessAllowed\nOptional. Service message: the user allowed the bot to write messages after adding it to the attachment or side menu, launching a Web App from a link, or accepting an explicit request from a Web App sent by the method requestWriteAccess\n\n\npassport_data\nPassportData\nOptional. Telegram Passport data\n\n\nproximity_alert_triggered\nProximityAlertTriggered\nOptional. Service message. A user in the chat triggered another user's proximity alert while sharing Live Location.\n\n\nboost_added\nChatBoostAdded\nOptional. Service message: user boosted the chat\n\n\nchat_background_set\nChatBackground\nOptional. Service message: chat background set\n\n\nforum_topic_created\nForumTopicCreated\nOptional. Service message: forum topic created\n\n\nforum_topic_edited\nForumTopicEdited\nOptional. Service message: forum topic edited\n\n\nforum_topic_closed\nForumTopicClosed\nOptional. Service message: forum topic closed\n\n\nforum_topic_reopened\nForumTopicReopened\nOptional. Service message: forum topic reopened\n\n\ngeneral_forum_topic_hidden\nGeneralForumTopicHidden\nOptional. Service message: the 'General' forum topic hidden\n\n\ngeneral_forum_topic_unhidden\nGeneralForumTopicUnhidden\nOptional. Service message: the 'General' forum topic unhidden\n\n\ngiveaway_created\nGiveawayCreated\nOptional. Service message: a scheduled giveaway was created\n\n\ngiveaway\nGiveaway\nOptional. The message is a scheduled giveaway message\n\n\ngiveaway_winners\nGiveawayWinners\nOptional. A giveaway with public winners was completed\n\n\ngiveaway_completed\nGiveawayCompleted\nOptional. Service message: a giveaway without public winners was completed\n\n\nvideo_chat_scheduled\nVideoChatScheduled\nOptional. Service message: video chat scheduled\n\n\nvideo_chat_started\nVideoChatStarted\nOptional. Service message: video chat started\n\n\nvideo_chat_ended\nVideoChatEnded\nOptional. Service message: video chat ended\n\n\nvideo_chat_participants_invited\nVideoChatParticipantsInvited\nOptional. Service message: new participants invited to a video chat\n\n\nweb_app_data\nWebAppData\nOptional. Service message: data sent by a Web App\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message. login_url buttons are represented as ordinary url buttons.\n\n\n\nMessageId\nThis object represents a unique message identifier.\n\n\n\nField\nType\nDescription\n\n\n\n\nmessage_id\nInteger\nUnique message identifier. In specific instances (e.g., message containing a video sent to a big chat), the server might automatically schedule a message instead of sending it immediately. In such cases, this field will be 0 and the relevant message will be unusable until it is actually sent\n\n\n\nInaccessibleMessage\nThis object describes a message that was deleted or is otherwise inaccessible to the bot.\n\n\n\nField\nType\nDescription\n\n\n\n\nchat\nChat\nChat the message belonged to\n\n\nmessage_id\nInteger\nUnique message identifier inside the chat\n\n\ndate\nInteger\nAlways 0. The field can be used to differentiate regular and inaccessible messages.\n\n\n\nMaybeInaccessibleMessage\nThis object describes a message that can be inaccessible to the bot. It can be one of\n\nMessage\nInaccessibleMessage\n\nMessageEntity\nThis object represents one special entity in a text message. For example, hashtags, usernames, URLs, etc.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the entity. Currently, can be âmentionâ (@username), âhashtagâ (#hashtag or #hashtag@chatusername), âcashtagâ ($USD or $USD@chatusername), âbot_commandâ (/start@jobs_bot), âurlâ (https://telegram.org), âemailâ (do-not-reply@telegram.org), âphone_numberâ (+1-212-555-0123), âboldâ (bold text), âitalicâ (italic text), âunderlineâ (underlined text), âstrikethroughâ (strikethrough text), âspoilerâ (spoiler message), âblockquoteâ (block quotation), âexpandable_blockquoteâ (collapsed-by-default block quotation), âcodeâ (monowidth string), âpreâ (monowidth block), âtext_linkâ (for clickable text URLs), âtext_mentionâ (for users without usernames), âcustom_emojiâ (for inline custom emoji stickers)\n\n\noffset\nInteger\nOffset in UTF-16 code units to the start of the entity\n\n\nlength\nInteger\nLength of the entity in UTF-16 code units\n\n\nurl\nString\nOptional. For âtext_linkâ only, URL that will be opened after user taps on the text\n\n\nuser\nUser\nOptional. For âtext_mentionâ only, the mentioned user\n\n\nlanguage\nString\nOptional. For âpreâ only, the programming language of the entity text\n\n\ncustom_emoji_id\nString\nOptional. For âcustom_emojiâ only, unique identifier of the custom emoji. Use getCustomEmojiStickers to get full information about the sticker\n\n\n\nTextQuote\nThis object contains information about the quoted part of a message that is replied to by the given message.\n\n\n\nField\nType\nDescription\n\n\n\n\ntext\nString\nText of the quoted part of a message that is replied to by the given message\n\n\nentities\nArray of MessageEntity\nOptional. Special entities that appear in the quote. Currently, only bold, italic, underline, strikethrough, spoiler, and custom_emoji entities are kept in quotes.\n\n\nposition\nInteger\nApproximate quote position in the original message in UTF-16 code units as specified by the sender\n\n\nis_manual\nTrue\nOptional. True, if the quote was chosen manually by the message sender. Otherwise, the quote was added automatically by the server.\n\n\n\nExternalReplyInfo\nThis object contains information about a message that is being replied to, which may come from another chat or forum topic.\n\n\n\nField\nType\nDescription\n\n\n\n\norigin\nMessageOrigin\nOrigin of the message replied to by the given message\n\n\nchat\nChat\nOptional. Chat the original message belongs to. Available only if the chat is a supergroup or a channel.\n\n\nmessage_id\nInteger\nOptional. Unique message identifier inside the original chat. Available only if the original chat is a supergroup or a channel.\n\n\nlink_preview_options\nLinkPreviewOptions\nOptional. Options used for link preview generation for the original message, if it is a text message\n\n\nanimation\nAnimation\nOptional. Message is an animation, information about the animation\n\n\naudio\nAudio\nOptional. Message is an audio file, information about the file\n\n\ndocument\nDocument\nOptional. Message is a general file, information about the file\n\n\npaid_media\nPaidMediaInfo\nOptional. Message contains paid media; information about the paid media\n\n\nphoto\nArray of PhotoSize\nOptional. Message is a photo, available sizes of the photo\n\n\nsticker\nSticker\nOptional. Message is a sticker, information about the sticker\n\n\nstory\nStory\nOptional. Message is a forwarded story\n\n\nvideo\nVideo\nOptional. Message is a video, information about the video\n\n\nvideo_note\nVideoNote\nOptional. Message is a video note, information about the video message\n\n\nvoice\nVoice\nOptional. Message is a voice message, information about the file\n\n\nhas_media_spoiler\nTrue\nOptional. True, if the message media is covered by a spoiler animation\n\n\ncontact\nContact\nOptional. Message is a shared contact, information about the contact\n\n\ndice\nDice\nOptional. Message is a dice with random value\n\n\ngame\nGame\nOptional. Message is a game, information about the game. More about games Â»\n\n\ngiveaway\nGiveaway\nOptional. Message is a scheduled giveaway, information about the giveaway\n\n\ngiveaway_winners\nGiveawayWinners\nOptional. A giveaway with public winners was completed\n\n\ninvoice\nInvoice\nOptional. Message is an invoice for a payment, information about the invoice. More about payments Â»\n\n\nlocation\nLocation\nOptional. Message is a shared location, information about the location\n\n\npoll\nPoll\nOptional. Message is a native poll, information about the poll\n\n\nvenue\nVenue\nOptional. Message is a venue, information about the venue\n\n\n\nReplyParameters\nDescribes reply parameters for the message that is being sent.\n\n\n\nField\nType\nDescription\n\n\n\n\nmessage_id\nInteger\nIdentifier of the message that will be replied to in the current chat, or in the chat chat_id if it is specified\n\n\nchat_id\nInteger or String\nOptional. If the message to be replied to is from a different chat, unique identifier for the chat or username of the channel (in the format @channelusername). Not supported for messages sent on behalf of a business account.\n\n\nallow_sending_without_reply\nBoolean\nOptional. Pass True if the message should be sent even if the specified message to be replied to is not found. Always False for replies in another chat or forum topic. Always True for messages sent on behalf of a business account.\n\n\nquote\nString\nOptional. Quoted part of the message to be replied to; 0-1024 characters after entities parsing. The quote must be an exact substring of the message to be replied to, including bold, italic, underline, strikethrough, spoiler, and custom_emoji entities. The message will fail to send if the quote isn't found in the original message.\n\n\nquote_parse_mode\nString\nOptional. Mode for parsing entities in the quote. See formatting options for more details.\n\n\nquote_entities\nArray of MessageEntity\nOptional. A JSON-serialized list of special entities that appear in the quote. It can be specified instead of quote_parse_mode.\n\n\nquote_position\nInteger\nOptional. Position of the quote in the original message in UTF-16 code units\n\n\n\nMessageOrigin\nThis object describes the origin of a message. It can be one of\n\nMessageOriginUser\nMessageOriginHiddenUser\nMessageOriginChat\nMessageOriginChannel\n\nMessageOriginUser\nThe message was originally sent by a known user.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the message origin, always âuserâ\n\n\ndate\nInteger\nDate the message was sent originally in Unix time\n\n\nsender_user\nUser\nUser that sent the message originally\n\n\n\nMessageOriginHiddenUser\nThe message was originally sent by an unknown user.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the message origin, always âhidden_userâ\n\n\ndate\nInteger\nDate the message was sent originally in Unix time\n\n\nsender_user_name\nString\nName of the user that sent the message originally\n\n\n\nMessageOriginChat\nThe message was originally sent on behalf of a chat to a group chat.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the message origin, always âchatâ\n\n\ndate\nInteger\nDate the message was sent originally in Unix time\n\n\nsender_chat\nChat\nChat that sent the message originally\n\n\nauthor_signature\nString\nOptional. For messages originally sent by an anonymous chat administrator, original message author signature\n\n\n\nMessageOriginChannel\nThe message was originally sent to a channel chat.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the message origin, always âchannelâ\n\n\ndate\nInteger\nDate the message was sent originally in Unix time\n\n\nchat\nChat\nChannel chat to which the message was originally sent\n\n\nmessage_id\nInteger\nUnique message identifier inside the chat\n\n\nauthor_signature\nString\nOptional. Signature of the original post author\n\n\n\nPhotoSize\nThis object represents one size of a photo or a file / sticker thumbnail.\n\n\n\nField\nType\nDescription\n\n\n\n\nfile_id\nString\nIdentifier for this file, which can be used to download or reuse the file\n\n\nfile_unique_id\nString\nUnique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.\n\n\nwidth\nInteger\nPhoto width\n\n\nheight\nInteger\nPhoto height\n\n\nfile_size\nInteger\nOptional. File size in bytes\n\n\n\nAnimation\nThis object represents an animation file (GIF or H.264/MPEG-4 AVC video without sound).\n\n\n\nField\nType\nDescription\n\n\n\n\nfile_id\nString\nIdentifier for this file, which can be used to download or reuse the file\n\n\nfile_unique_id\nString\nUnique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.\n\n\nwidth\nInteger\nVideo width as defined by the sender\n\n\nheight\nInteger\nVideo height as defined by the sender\n\n\nduration\nInteger\nDuration of the video in seconds as defined by the sender\n\n\nthumbnail\nPhotoSize\nOptional. Animation thumbnail as defined by the sender\n\n\nfile_name\nString\nOptional. Original animation filename as defined by the sender\n\n\nmime_type\nString\nOptional. MIME type of the file as defined by the sender\n\n\nfile_size\nInteger\nOptional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.\n\n\n\nAudio\nThis object represents an audio file to be treated as music by the Telegram clients.\n\n\n\nField\nType\nDescription\n\n\n\n\nfile_id\nString\nIdentifier for this file, which can be used to download or reuse the file\n\n\nfile_unique_id\nString\nUnique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.\n\n\nduration\nInteger\nDuration of the audio in seconds as defined by the sender\n\n\nperformer\nString\nOptional. Performer of the audio as defined by the sender or by audio tags\n\n\ntitle\nString\nOptional. Title of the audio as defined by the sender or by audio tags\n\n\nfile_name\nString\nOptional. Original filename as defined by the sender\n\n\nmime_type\nString\nOptional. MIME type of the file as defined by the sender\n\n\nfile_size\nInteger\nOptional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.\n\n\nthumbnail\nPhotoSize\nOptional. Thumbnail of the album cover to which the music file belongs\n\n\n\nDocument\nThis object represents a general file (as opposed to photos, voice messages and audio files).\n\n\n\nField\nType\nDescription\n\n\n\n\nfile_id\nString\nIdentifier for this file, which can be used to download or reuse the file\n\n\nfile_unique_id\nString\nUnique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.\n\n\nthumbnail\nPhotoSize\nOptional. Document thumbnail as defined by the sender\n\n\nfile_name\nString\nOptional. Original filename as defined by the sender\n\n\nmime_type\nString\nOptional. MIME type of the file as defined by the sender\n\n\nfile_size\nInteger\nOptional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.\n\n\n\nStory\nThis object represents a story.\n\n\n\nField\nType\nDescription\n\n\n\n\nchat\nChat\nChat that posted the story\n\n\nid\nInteger\nUnique identifier for the story in the chat\n\n\n\nVideo\nThis object represents a video file.\n\n\n\nField\nType\nDescription\n\n\n\n\nfile_id\nString\nIdentifier for this file, which can be used to download or reuse the file\n\n\nfile_unique_id\nString\nUnique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.\n\n\nwidth\nInteger\nVideo width as defined by the sender\n\n\nheight\nInteger\nVideo height as defined by the sender\n\n\nduration\nInteger\nDuration of the video in seconds as defined by the sender\n\n\nthumbnail\nPhotoSize\nOptional. Video thumbnail\n\n\nfile_name\nString\nOptional. Original filename as defined by the sender\n\n\nmime_type\nString\nOptional. MIME type of the file as defined by the sender\n\n\nfile_size\nInteger\nOptional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.\n\n\n\nVideoNote\nThis object represents a video message (available in Telegram apps as of v.4.0).\n\n\n\nField\nType\nDescription\n\n\n\n\nfile_id\nString\nIdentifier for this file, which can be used to download or reuse the file\n\n\nfile_unique_id\nString\nUnique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.\n\n\nlength\nInteger\nVideo width and height (diameter of the video message) as defined by the sender\n\n\nduration\nInteger\nDuration of the video in seconds as defined by the sender\n\n\nthumbnail\nPhotoSize\nOptional. Video thumbnail\n\n\nfile_size\nInteger\nOptional. File size in bytes\n\n\n\nVoice\nThis object represents a voice note.\n\n\n\nField\nType\nDescription\n\n\n\n\nfile_id\nString\nIdentifier for this file, which can be used to download or reuse the file\n\n\nfile_unique_id\nString\nUnique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.\n\n\nduration\nInteger\nDuration of the audio in seconds as defined by the sender\n\n\nmime_type\nString\nOptional. MIME type of the file as defined by the sender\n\n\nfile_size\nInteger\nOptional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.\n\n\n\nPaidMediaInfo\nDescribes the paid media added to a message.\n\n\n\nField\nType\nDescription\n\n\n\n\nstar_count\nInteger\nThe number of Telegram Stars that must be paid to buy access to the media\n\n\npaid_media\nArray of PaidMedia\nInformation about the paid media\n\n\n\nPaidMedia\nThis object describes paid media. Currently, it can be one of\n\nPaidMediaPreview\nPaidMediaPhoto\nPaidMediaVideo\n\nPaidMediaPreview\nThe paid media isn't available before the payment.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the paid media, always âpreviewâ\n\n\nwidth\nInteger\nOptional. Media width as defined by the sender\n\n\nheight\nInteger\nOptional. Media height as defined by the sender\n\n\nduration\nInteger\nOptional. Duration of the media in seconds as defined by the sender\n\n\n\nPaidMediaPhoto\nThe paid media is a photo.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the paid media, always âphotoâ\n\n\nphoto\nArray of PhotoSize\nThe photo\n\n\n\nPaidMediaVideo\nThe paid media is a video.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the paid media, always âvideoâ\n\n\nvideo\nVideo\nThe video\n\n\n\nContact\nThis object represents a phone contact.\n\n\n\nField\nType\nDescription\n\n\n\n\nphone_number\nString\nContact's phone number\n\n\nfirst_name\nString\nContact's first name\n\n\nlast_name\nString\nOptional. Contact's last name\n\n\nuser_id\nInteger\nOptional. Contact's user identifier in Telegram. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.\n\n\nvcard\nString\nOptional. Additional data about the contact in the form of a vCard\n\n\n\nDice\nThis object represents an animated emoji that displays a random value.\n\n\n\nField\nType\nDescription\n\n\n\n\nemoji\nString\nEmoji on which the dice throw animation is based\n\n\nvalue\nInteger\nValue of the dice, 1-6 for ââ, ââ and ââ base emoji, 1-5 for ââ and ââ base emoji, 1-64 for ââ base emoji\n\n\n\nPollOption\nThis object contains information about one answer option in a poll.\n\n\n\nField\nType\nDescription\n\n\n\n\ntext\nString\nOption text, 1-100 characters\n\n\ntext_entities\nArray of MessageEntity\nOptional. Special entities that appear in the option text. Currently, only custom emoji entities are allowed in poll option texts\n\n\nvoter_count\nInteger\nNumber of users that voted for this option\n\n\n\nInputPollOption\nThis object contains information about one answer option in a poll to be sent.\n\n\n\nField\nType\nDescription\n\n\n\n\ntext\nString\nOption text, 1-100 characters\n\n\ntext_parse_mode\nString\nOptional. Mode for parsing entities in the text. See formatting options for more details. Currently, only custom emoji entities are allowed\n\n\ntext_entities\nArray of MessageEntity\nOptional. A JSON-serialized list of special entities that appear in the poll option text. It can be specified instead of text_parse_mode\n\n\n\nPollAnswer\nThis object represents an answer of a user in a non-anonymous poll.\n\n\n\nField\nType\nDescription\n\n\n\n\npoll_id\nString\nUnique poll identifier\n\n\nvoter_chat\nChat\nOptional. The chat that changed the answer to the poll, if the voter is anonymous\n\n\nuser\nUser\nOptional. The user that changed the answer to the poll, if the voter isn't anonymous\n\n\noption_ids\nArray of Integer\n0-based identifiers of chosen answer options. May be empty if the vote was retracted.\n\n\n\nPoll\nThis object contains information about a poll.\n\n\n\nField\nType\nDescription\n\n\n\n\nid\nString\nUnique poll identifier\n\n\nquestion\nString\nPoll question, 1-300 characters\n\n\nquestion_entities\nArray of MessageEntity\nOptional. Special entities that appear in the question. Currently, only custom emoji entities are allowed in poll questions\n\n\noptions\nArray of PollOption\nList of poll options\n\n\ntotal_voter_count\nInteger\nTotal number of users that voted in the poll\n\n\nis_closed\nBoolean\nTrue, if the poll is closed\n\n\nis_anonymous\nBoolean\nTrue, if the poll is anonymous\n\n\ntype\nString\nPoll type, currently can be âregularâ or âquizâ\n\n\nallows_multiple_answers\nBoolean\nTrue, if the poll allows multiple answers\n\n\ncorrect_option_id\nInteger\nOptional. 0-based identifier of the correct answer option. Available only for polls in the quiz mode, which are closed, or was sent (not forwarded) by the bot or to the private chat with the bot.\n\n\nexplanation\nString\nOptional. Text that is shown when a user chooses an incorrect answer or taps on the lamp icon in a quiz-style poll, 0-200 characters\n\n\nexplanation_entities\nArray of MessageEntity\nOptional. Special entities like usernames, URLs, bot commands, etc. that appear in the explanation\n\n\nopen_period\nInteger\nOptional. Amount of time in seconds the poll will be active after creation\n\n\nclose_date\nInteger\nOptional. Point in time (Unix timestamp) when the poll will be automatically closed\n\n\n\nLocation\nThis object represents a point on the map.\n\n\n\nField\nType\nDescription\n\n\n\n\nlatitude\nFloat\nLatitude as defined by the sender\n\n\nlongitude\nFloat\nLongitude as defined by the sender\n\n\nhorizontal_accuracy\nFloat\nOptional. The radius of uncertainty for the location, measured in meters; 0-1500\n\n\nlive_period\nInteger\nOptional. Time relative to the message sending date, during which the location can be updated; in seconds. For active live locations only.\n\n\nheading\nInteger\nOptional. The direction in which user is moving, in degrees; 1-360. For active live locations only.\n\n\nproximity_alert_radius\nInteger\nOptional. The maximum distance for proximity alerts about approaching another chat member, in meters. For sent live locations only.\n\n\n\nVenue\nThis object represents a venue.\n\n\n\nField\nType\nDescription\n\n\n\n\nlocation\nLocation\nVenue location. Can't be a live location\n\n\ntitle\nString\nName of the venue\n\n\naddress\nString\nAddress of the venue\n\n\nfoursquare_id\nString\nOptional. Foursquare identifier of the venue\n\n\nfoursquare_type\nString\nOptional. Foursquare type of the venue. (For example, âarts_entertainment/defaultâ, âarts_entertainment/aquariumâ or âfood/icecreamâ.)\n\n\ngoogle_place_id\nString\nOptional. Google Places identifier of the venue\n\n\ngoogle_place_type\nString\nOptional. Google Places type of the venue. (See supported types.)\n\n\n\nWebAppData\nDescribes data sent from a Web App to the bot.\n\n\n\nField\nType\nDescription\n\n\n\n\ndata\nString\nThe data. Be aware that a bad client can send arbitrary data in this field.\n\n\nbutton_text\nString\nText of the web_app keyboard button from which the Web App was opened. Be aware that a bad client can send arbitrary data in this field.\n\n\n\nProximityAlertTriggered\nThis object represents the content of a service message, sent whenever a user in the chat triggers a proximity alert set by another user.\n\n\n\nField\nType\nDescription\n\n\n\n\ntraveler\nUser\nUser that triggered the alert\n\n\nwatcher\nUser\nUser that set the alert\n\n\ndistance\nInteger\nThe distance between the users\n\n\n\nMessageAutoDeleteTimerChanged\nThis object represents a service message about a change in auto-delete timer settings.\n\n\n\nField\nType\nDescription\n\n\n\n\nmessage_auto_delete_time\nInteger\nNew auto-delete time for messages in the chat; in seconds\n\n\n\nChatBoostAdded\nThis object represents a service message about a user boosting a chat.\n\n\n\nField\nType\nDescription\n\n\n\n\nboost_count\nInteger\nNumber of boosts added by the user\n\n\n\nBackgroundFill\nThis object describes the way a background is filled based on the selected colors. Currently, it can be one of\n\nBackgroundFillSolid\nBackgroundFillGradient\nBackgroundFillFreeformGradient\n\nBackgroundFillSolid\nThe background is filled using the selected color.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the background fill, always âsolidâ\n\n\ncolor\nInteger\nThe color of the background fill in the RGB24 format\n\n\n\nBackgroundFillGradient\nThe background is a gradient fill.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the background fill, always âgradientâ\n\n\ntop_color\nInteger\nTop color of the gradient in the RGB24 format\n\n\nbottom_color\nInteger\nBottom color of the gradient in the RGB24 format\n\n\nrotation_angle\nInteger\nClockwise rotation angle of the background fill in degrees; 0-359\n\n\n\nBackgroundFillFreeformGradient\nThe background is a freeform gradient that rotates after every message in the chat.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the background fill, always âfreeform_gradientâ\n\n\ncolors\nArray of Integer\nA list of the 3 or 4 base colors that are used to generate the freeform gradient in the RGB24 format\n\n\n\nBackgroundType\nThis object describes the type of a background. Currently, it can be one of\n\nBackgroundTypeFill\nBackgroundTypeWallpaper\nBackgroundTypePattern\nBackgroundTypeChatTheme\n\nBackgroundTypeFill\nThe background is automatically filled based on the selected colors.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the background, always âfillâ\n\n\nfill\nBackgroundFill\nThe background fill\n\n\ndark_theme_dimming\nInteger\nDimming of the background in dark themes, as a percentage; 0-100\n\n\n\nBackgroundTypeWallpaper\nThe background is a wallpaper in the JPEG format.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the background, always âwallpaperâ\n\n\ndocument\nDocument\nDocument with the wallpaper\n\n\ndark_theme_dimming\nInteger\nDimming of the background in dark themes, as a percentage; 0-100\n\n\nis_blurred\nTrue\nOptional. True, if the wallpaper is downscaled to fit in a 450x450 square and then box-blurred with radius 12\n\n\nis_moving\nTrue\nOptional. True, if the background moves slightly when the device is tilted\n\n\n\nBackgroundTypePattern\nThe background is a .PNG or .TGV (gzipped subset of SVG with MIME type âapplication/x-tgwallpatternâ) pattern to be combined with the background fill chosen by the user.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the background, always âpatternâ\n\n\ndocument\nDocument\nDocument with the pattern\n\n\nfill\nBackgroundFill\nThe background fill that is combined with the pattern\n\n\nintensity\nInteger\nIntensity of the pattern when it is shown above the filled background; 0-100\n\n\nis_inverted\nTrue\nOptional. True, if the background fill must be applied only to the pattern itself. All other pixels are black in this case. For dark themes only\n\n\nis_moving\nTrue\nOptional. True, if the background moves slightly when the device is tilted\n\n\n\nBackgroundTypeChatTheme\nThe background is taken directly from a built-in chat theme.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the background, always âchat_themeâ\n\n\ntheme_name\nString\nName of the chat theme, which is usually an emoji\n\n\n\nChatBackground\nThis object represents a chat background.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nBackgroundType\nType of the background\n\n\n\nForumTopicCreated\nThis object represents a service message about a new forum topic created in the chat.\n\n\n\nField\nType\nDescription\n\n\n\n\nname\nString\nName of the topic\n\n\nicon_color\nInteger\nColor of the topic icon in RGB format\n\n\nicon_custom_emoji_id\nString\nOptional. Unique identifier of the custom emoji shown as the topic icon\n\n\n\nForumTopicClosed\nThis object represents a service message about a forum topic closed in the chat. Currently holds no information.\nForumTopicEdited\nThis object represents a service message about an edited forum topic.\n\n\n\nField\nType\nDescription\n\n\n\n\nname\nString\nOptional. New name of the topic, if it was edited\n\n\nicon_custom_emoji_id\nString\nOptional. New identifier of the custom emoji shown as the topic icon, if it was edited; an empty string if the icon was removed\n\n\n\nForumTopicReopened\nThis object represents a service message about a forum topic reopened in the chat. Currently holds no information.\nGeneralForumTopicHidden\nThis object represents a service message about General forum topic hidden in the chat. Currently holds no information.\nGeneralForumTopicUnhidden\nThis object represents a service message about General forum topic unhidden in the chat. Currently holds no information.\nSharedUser\nThis object contains information about a user that was shared with the bot using a KeyboardButtonRequestUsers button.\n\n\n\nField\nType\nDescription\n\n\n\n\nuser_id\nInteger\nIdentifier of the shared user. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so 64-bit integers or double-precision float types are safe for storing these identifiers. The bot may not have access to the user and could be unable to use this identifier, unless the user is already known to the bot by some other means.\n\n\nfirst_name\nString\nOptional. First name of the user, if the name was requested by the bot\n\n\nlast_name\nString\nOptional. Last name of the user, if the name was requested by the bot\n\n\nusername\nString\nOptional. Username of the user, if the username was requested by the bot\n\n\nphoto\nArray of PhotoSize\nOptional. Available sizes of the chat photo, if the photo was requested by the bot\n\n\n\nUsersShared\nThis object contains information about the users whose identifiers were shared with the bot using a KeyboardButtonRequestUsers button.\n\n\n\nField\nType\nDescription\n\n\n\n\nrequest_id\nInteger\nIdentifier of the request\n\n\nusers\nArray of SharedUser\nInformation about users shared with the bot.\n\n\n\nChatShared\nThis object contains information about a chat that was shared with the bot using a KeyboardButtonRequestChat button.\n\n\n\nField\nType\nDescription\n\n\n\n\nrequest_id\nInteger\nIdentifier of the request\n\n\nchat_id\nInteger\nIdentifier of the shared chat. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier. The bot may not have access to the chat and could be unable to use this identifier, unless the chat is already known to the bot by some other means.\n\n\ntitle\nString\nOptional. Title of the chat, if the title was requested by the bot.\n\n\nusername\nString\nOptional. Username of the chat, if the username was requested by the bot and available.\n\n\nphoto\nArray of PhotoSize\nOptional. Available sizes of the chat photo, if the photo was requested by the bot\n\n\n\nWriteAccessAllowed\nThis object represents a service message about a user allowing a bot to write messages after adding it to the attachment menu, launching a Web App from a link, or accepting an explicit request from a Web App sent by the method requestWriteAccess.\n\n\n\nField\nType\nDescription\n\n\n\n\nfrom_request\nBoolean\nOptional. True, if the access was granted after the user accepted an explicit request from a Web App sent by the method requestWriteAccess\n\n\nweb_app_name\nString\nOptional. Name of the Web App, if the access was granted when the Web App was launched from a link\n\n\nfrom_attachment_menu\nBoolean\nOptional. True, if the access was granted when the bot was added to the attachment or side menu\n\n\n\nVideoChatScheduled\nThis object represents a service message about a video chat scheduled in the chat.\n\n\n\nField\nType\nDescription\n\n\n\n\nstart_date\nInteger\nPoint in time (Unix timestamp) when the video chat is supposed to be started by a chat administrator\n\n\n\nVideoChatStarted\nThis object represents a service message about a video chat started in the chat. Currently holds no information.\nVideoChatEnded\nThis object represents a service message about a video chat ended in the chat.\n\n\n\nField\nType\nDescription\n\n\n\n\nduration\nInteger\nVideo chat duration in seconds\n\n\n\nVideoChatParticipantsInvited\nThis object represents a service message about new members invited to a video chat.\n\n\n\nField\nType\nDescription\n\n\n\n\nusers\nArray of User\nNew members that were invited to the video chat\n\n\n\nGiveawayCreated\nThis object represents a service message about the creation of a scheduled giveaway.\n\n\n\nField\nType\nDescription\n\n\n\n\nprize_star_count\nInteger\nOptional. The number of Telegram Stars to be split between giveaway winners; for Telegram Star giveaways only\n\n\n\nGiveaway\nThis object represents a message about a scheduled giveaway.\n\n\n\nField\nType\nDescription\n\n\n\n\nchats\nArray of Chat\nThe list of chats which the user must join to participate in the giveaway\n\n\nwinners_selection_date\nInteger\nPoint in time (Unix timestamp) when winners of the giveaway will be selected\n\n\nwinner_count\nInteger\nThe number of users which are supposed to be selected as winners of the giveaway\n\n\nonly_new_members\nTrue\nOptional. True, if only users who join the chats after the giveaway started should be eligible to win\n\n\nhas_public_winners\nTrue\nOptional. True, if the list of giveaway winners will be visible to everyone\n\n\nprize_description\nString\nOptional. Description of additional giveaway prize\n\n\ncountry_codes\nArray of String\nOptional. A list of two-letter ISO 3166-1 alpha-2 country codes indicating the countries from which eligible users for the giveaway must come. If empty, then all users can participate in the giveaway. Users with a phone number that was bought on Fragment can always participate in giveaways.\n\n\nprize_star_count\nInteger\nOptional. The number of Telegram Stars to be split between giveaway winners; for Telegram Star giveaways only\n\n\npremium_subscription_month_count\nInteger\nOptional. The number of months the Telegram Premium subscription won from the giveaway will be active for; for Telegram Premium giveaways only\n\n\n\nGiveawayWinners\nThis object represents a message about the completion of a giveaway with public winners.\n\n\n\nField\nType\nDescription\n\n\n\n\nchat\nChat\nThe chat that created the giveaway\n\n\ngiveaway_message_id\nInteger\nIdentifier of the message with the giveaway in the chat\n\n\nwinners_selection_date\nInteger\nPoint in time (Unix timestamp) when winners of the giveaway were selected\n\n\nwinner_count\nInteger\nTotal number of winners in the giveaway\n\n\nwinners\nArray of User\nList of up to 100 winners of the giveaway\n\n\nadditional_chat_count\nInteger\nOptional. The number of other chats the user had to join in order to be eligible for the giveaway\n\n\nprize_star_count\nInteger\nOptional. The number of Telegram Stars that were split between giveaway winners; for Telegram Star giveaways only\n\n\npremium_subscription_month_count\nInteger\nOptional. The number of months the Telegram Premium subscription won from the giveaway will be active for; for Telegram Premium giveaways only\n\n\nunclaimed_prize_count\nInteger\nOptional. Number of undistributed prizes\n\n\nonly_new_members\nTrue\nOptional. True, if only users who had joined the chats after the giveaway started were eligible to win\n\n\nwas_refunded\nTrue\nOptional. True, if the giveaway was canceled because the payment for it was refunded\n\n\nprize_description\nString\nOptional. Description of additional giveaway prize\n\n\n\nGiveawayCompleted\nThis object represents a service message about the completion of a giveaway without public winners.\n\n\n\nField\nType\nDescription\n\n\n\n\nwinner_count\nInteger\nNumber of winners in the giveaway\n\n\nunclaimed_prize_count\nInteger\nOptional. Number of undistributed prizes\n\n\ngiveaway_message\nMessage\nOptional. Message with the giveaway that was completed, if it wasn't deleted\n\n\nis_star_giveaway\nTrue\nOptional. True, if the giveaway is a Telegram Star giveaway. Otherwise, currently, the giveaway is a Telegram Premium giveaway.\n\n\n\nLinkPreviewOptions\nDescribes the options used for link preview generation.\n\n\n\nField\nType\nDescription\n\n\n\n\nis_disabled\nBoolean\nOptional. True, if the link preview is disabled\n\n\nurl\nString\nOptional. URL to use for the link preview. If empty, then the first URL found in the message text will be used\n\n\nprefer_small_media\nBoolean\nOptional. True, if the media in the link preview is supposed to be shrunk; ignored if the URL isn't explicitly specified or media size change isn't supported for the preview\n\n\nprefer_large_media\nBoolean\nOptional. True, if the media in the link preview is supposed to be enlarged; ignored if the URL isn't explicitly specified or media size change isn't supported for the preview\n\n\nshow_above_text\nBoolean\nOptional. True, if the link preview must be shown above the message text; otherwise, the link preview will be shown below the message text\n\n\n\nUserProfilePhotos\nThis object represent a user's profile pictures.\n\n\n\nField\nType\nDescription\n\n\n\n\ntotal_count\nInteger\nTotal number of profile pictures the target user has\n\n\nphotos\nArray of Array of PhotoSize\nRequested profile pictures (in up to 4 sizes each)\n\n\n\nFile\nThis object represents a file ready to be downloaded. The file can be downloaded via the link https://api.telegram.org/file/bot<token>/<file_path>. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile.\n\nThe maximum file size to download is 20 MB\n\n\n\n\nField\nType\nDescription\n\n\n\n\nfile_id\nString\nIdentifier for this file, which can be used to download or reuse the file\n\n\nfile_unique_id\nString\nUnique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.\n\n\nfile_size\nInteger\nOptional. File size in bytes. It can be bigger than 2^31 and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this value.\n\n\nfile_path\nString\nOptional. File path. Use https://api.telegram.org/file/bot<token>/<file_path> to get the file.\n\n\n\nWebAppInfo\nDescribes a Web App.\n\n\n\nField\nType\nDescription\n\n\n\n\nurl\nString\nAn HTTPS URL of a Web App to be opened with additional data as specified in Initializing Web Apps\n\n\n\nReplyKeyboardMarkup\nThis object represents a custom keyboard with reply options (see Introduction to bots for details and examples). Not supported in channels and for messages sent on behalf of a Telegram Business account.\n\n\n\nField\nType\nDescription\n\n\n\n\nkeyboard\nArray of Array of KeyboardButton\nArray of button rows, each represented by an Array of KeyboardButton objects\n\n\nis_persistent\nBoolean\nOptional. Requests clients to always show the keyboard when the regular keyboard is hidden. Defaults to false, in which case the custom keyboard can be hidden and opened with a keyboard icon.\n\n\nresize_keyboard\nBoolean\nOptional. Requests clients to resize the keyboard vertically for optimal fit (e.g., make the keyboard smaller if there are just two rows of buttons). Defaults to false, in which case the custom keyboard is always of the same height as the app's standard keyboard.\n\n\none_time_keyboard\nBoolean\nOptional. Requests clients to hide the keyboard as soon as it's been used. The keyboard will still be available, but clients will automatically display the usual letter-keyboard in the chat - the user can press a special button in the input field to see the custom keyboard again. Defaults to false.\n\n\ninput_field_placeholder\nString\nOptional. The placeholder to be shown in the input field when the keyboard is active; 1-64 characters\n\n\nselective\nBoolean\nOptional. Use this parameter if you want to show the keyboard to specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply to a message in the same chat and forum topic, sender of the original message.Example: A user requests to change the bot's language, bot replies to the request with a keyboard to select the new language. Other users in the group don't see the keyboard.\n\n\n\nKeyboardButton\nThis object represents one button of the reply keyboard. At most one of the optional fields must be used to specify type of the button. For simple text buttons, String can be used instead of this object to specify the button text.\n\n\n\nField\nType\nDescription\n\n\n\n\ntext\nString\nText of the button. If none of the optional fields are used, it will be sent as a message when the button is pressed\n\n\nrequest_users\nKeyboardButtonRequestUsers\nOptional. If specified, pressing the button will open a list of suitable users. Identifiers of selected users will be sent to the bot in a âusers_sharedâ service message. Available in private chats only.\n\n\nrequest_chat\nKeyboardButtonRequestChat\nOptional. If specified, pressing the button will open a list of suitable chats. Tapping on a chat will send its identifier to the bot in a âchat_sharedâ service message. Available in private chats only.\n\n\nrequest_contact\nBoolean\nOptional. If True, the user's phone number will be sent as a contact when the button is pressed. Available in private chats only.\n\n\nrequest_location\nBoolean\nOptional. If True, the user's current location will be sent when the button is pressed. Available in private chats only.\n\n\nrequest_poll\nKeyboardButtonPollType\nOptional. If specified, the user will be asked to create a poll and send it to the bot when the button is pressed. Available in private chats only.\n\n\nweb_app\nWebAppInfo\nOptional. If specified, the described Web App will be launched when the button is pressed. The Web App will be able to send a âweb_app_dataâ service message. Available in private chats only.\n\n\n\nNote: request_users and request_chat options will only work in Telegram versions released after 3 February, 2023. Older clients will display unsupported message.\nKeyboardButtonRequestUsers\nThis object defines the criteria used to request suitable users. Information about the selected users will be shared with the bot when the corresponding button is pressed. More about requesting users Â»\n\n\n\nField\nType\nDescription\n\n\n\n\nrequest_id\nInteger\nSigned 32-bit identifier of the request that will be received back in the UsersShared object. Must be unique within the message\n\n\nuser_is_bot\nBoolean\nOptional. Pass True to request bots, pass False to request regular users. If not specified, no additional restrictions are applied.\n\n\nuser_is_premium\nBoolean\nOptional. Pass True to request premium users, pass False to request non-premium users. If not specified, no additional restrictions are applied.\n\n\nmax_quantity\nInteger\nOptional. The maximum number of users to be selected; 1-10. Defaults to 1.\n\n\nrequest_name\nBoolean\nOptional. Pass True to request the users' first and last names\n\n\nrequest_username\nBoolean\nOptional. Pass True to request the users' usernames\n\n\nrequest_photo\nBoolean\nOptional. Pass True to request the users' photos\n\n\n\nKeyboardButtonRequestChat\nThis object defines the criteria used to request a suitable chat. Information about the selected chat will be shared with the bot when the corresponding button is pressed. The bot will be granted requested rights in the chat if appropriate. More about requesting chats Â».\n\n\n\nField\nType\nDescription\n\n\n\n\nrequest_id\nInteger\nSigned 32-bit identifier of the request, which will be received back in the ChatShared object. Must be unique within the message\n\n\nchat_is_channel\nBoolean\nPass True to request a channel chat, pass False to request a group or a supergroup chat.\n\n\nchat_is_forum\nBoolean\nOptional. Pass True to request a forum supergroup, pass False to request a non-forum chat. If not specified, no additional restrictions are applied.\n\n\nchat_has_username\nBoolean\nOptional. Pass True to request a supergroup or a channel with a username, pass False to request a chat without a username. If not specified, no additional restrictions are applied.\n\n\nchat_is_created\nBoolean\nOptional. Pass True to request a chat owned by the user. Otherwise, no additional restrictions are applied.\n\n\nuser_administrator_rights\nChatAdministratorRights\nOptional. A JSON-serialized object listing the required administrator rights of the user in the chat. The rights must be a superset of bot_administrator_rights. If not specified, no additional restrictions are applied.\n\n\nbot_administrator_rights\nChatAdministratorRights\nOptional. A JSON-serialized object listing the required administrator rights of the bot in the chat. The rights must be a subset of user_administrator_rights. If not specified, no additional restrictions are applied.\n\n\nbot_is_member\nBoolean\nOptional. Pass True to request a chat with the bot as a member. Otherwise, no additional restrictions are applied.\n\n\nrequest_title\nBoolean\nOptional. Pass True to request the chat's title\n\n\nrequest_username\nBoolean\nOptional. Pass True to request the chat's username\n\n\nrequest_photo\nBoolean\nOptional. Pass True to request the chat's photo\n\n\n\nKeyboardButtonPollType\nThis object represents type of a poll, which is allowed to be created and sent when the corresponding button is pressed.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nOptional. If quiz is passed, the user will be allowed to create only polls in the quiz mode. If regular is passed, only regular polls will be allowed. Otherwise, the user will be allowed to create a poll of any type.\n\n\n\nReplyKeyboardRemove\nUpon receiving a message with this object, Telegram clients will remove the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see ReplyKeyboardMarkup). Not supported in channels and for messages sent on behalf of a Telegram Business account.\n\n\n\nField\nType\nDescription\n\n\n\n\nremove_keyboard\nTrue\nRequests clients to remove the custom keyboard (user will not be able to summon this keyboard; if you want to hide the keyboard from sight but keep it accessible, use one_time_keyboard in ReplyKeyboardMarkup)\n\n\nselective\nBoolean\nOptional. Use this parameter if you want to remove the keyboard for specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply to a message in the same chat and forum topic, sender of the original message.Example: A user votes in a poll, bot returns confirmation message in reply to the vote and removes the keyboard for that user, while still showing the keyboard with poll options to users who haven't voted yet.\n\n\n\nInlineKeyboardMarkup\nThis object represents an inline keyboard that appears right next to the message it belongs to.\n\n\n\nField\nType\nDescription\n\n\n\n\ninline_keyboard\nArray of Array of InlineKeyboardButton\nArray of button rows, each represented by an Array of InlineKeyboardButton objects\n\n\n\nInlineKeyboardButton\nThis object represents one button of an inline keyboard. Exactly one of the optional fields must be used to specify type of the button.\n\n\n\nField\nType\nDescription\n\n\n\n\ntext\nString\nLabel text on the button\n\n\nurl\nString\nOptional. HTTP or tg:// URL to be opened when the button is pressed. Links tg://user?id=<user_id> can be used to mention a user by their identifier without using a username, if this is allowed by their privacy settings.\n\n\ncallback_data\nString\nOptional. Data to be sent in a callback query to the bot when the button is pressed, 1-64 bytes\n\n\nweb_app\nWebAppInfo\nOptional. Description of the Web App that will be launched when the user presses the button. The Web App will be able to send an arbitrary message on behalf of the user using the method answerWebAppQuery. Available only in private chats between a user and the bot. Not supported for messages sent on behalf of a Telegram Business account.\n\n\nlogin_url\nLoginUrl\nOptional. An HTTPS URL used to automatically authorize the user. Can be used as a replacement for the Telegram Login Widget.\n\n\nswitch_inline_query\nString\nOptional. If set, pressing the button will prompt the user to select one of their chats, open that chat and insert the bot's username and the specified inline query in the input field. May be empty, in which case just the bot's username will be inserted. Not supported for messages sent on behalf of a Telegram Business account.\n\n\nswitch_inline_query_current_chat\nString\nOptional. If set, pressing the button will insert the bot's username and the specified inline query in the current chat's input field. May be empty, in which case only the bot's username will be inserted.This offers a quick way for the user to open your bot in inline mode in the same chat - good for selecting something from multiple options. Not supported in channels and for messages sent on behalf of a Telegram Business account.\n\n\nswitch_inline_query_chosen_chat\nSwitchInlineQueryChosenChat\nOptional. If set, pressing the button will prompt the user to select one of their chats of the specified type, open that chat and insert the bot's username and the specified inline query in the input field. Not supported for messages sent on behalf of a Telegram Business account.\n\n\ncopy_text\nCopyTextButton\nOptional. Description of the button that copies the specified text to the clipboard.\n\n\ncallback_game\nCallbackGame\nOptional. Description of the game that will be launched when the user presses the button.NOTE: This type of button must always be the first button in the first row.\n\n\npay\nBoolean\nOptional. Specify True, to send a Pay button. Substrings ââ and âXTRâ in the buttons's text will be replaced with a Telegram Star icon.NOTE: This type of button must always be the first button in the first row and can only be used in invoice messages.\n\n\n\nLoginUrl\nThis object represents a parameter of the inline keyboard button used to automatically authorize a user. Serves as a great replacement for the Telegram Login Widget when the user is coming from Telegram. All the user needs to do is tap/click a button and confirm that they want to log in:\n\n  \n\n\nTelegram apps support these buttons as of version 5.7.\n\nSample bot: @discussbot\n\n\n\n\nField\nType\nDescription\n\n\n\n\nurl\nString\nAn HTTPS URL to be opened with user authorization data added to the query string when the button is pressed. If the user refuses to provide authorization data, the original URL without information about the user will be opened. The data added is the same as described in Receiving authorization data.NOTE: You must always check the hash of the received data to verify the authentication and the integrity of the data as described in Checking authorization.\n\n\nforward_text\nString\nOptional. New text of the button in forwarded messages.\n\n\nbot_username\nString\nOptional. Username of a bot, which will be used for user authorization. See Setting up a bot for more details. If not specified, the current bot's username will be assumed. The url's domain must be the same as the domain linked with the bot. See Linking your domain to the bot for more details.\n\n\nrequest_write_access\nBoolean\nOptional. Pass True to request the permission for your bot to send messages to the user.\n\n\n\nSwitchInlineQueryChosenChat\nThis object represents an inline button that switches the current user to inline mode in a chosen chat, with an optional default inline query.\n\n\n\nField\nType\nDescription\n\n\n\n\nquery\nString\nOptional. The default inline query to be inserted in the input field. If left empty, only the bot's username will be inserted\n\n\nallow_user_chats\nBoolean\nOptional. True, if private chats with users can be chosen\n\n\nallow_bot_chats\nBoolean\nOptional. True, if private chats with bots can be chosen\n\n\nallow_group_chats\nBoolean\nOptional. True, if group and supergroup chats can be chosen\n\n\nallow_channel_chats\nBoolean\nOptional. True, if channel chats can be chosen\n\n\n\nCopyTextButton\nThis object represents an inline keyboard button that copies specified text to the clipboard.\n\n\n\nField\nType\nDescription\n\n\n\n\ntext\nString\nThe text to be copied to the clipboard; 1-256 characters\n\n\n\nCallbackQuery\nThis object represents an incoming callback query from a callback button in an inline keyboard. If the button that originated the query was attached to a message sent by the bot, the field message will be present. If the button was attached to a message sent via the bot (in inline mode), the field inline_message_id will be present. Exactly one of the fields data or game_short_name will be present.\n\n\n\nField\nType\nDescription\n\n\n\n\nid\nString\nUnique identifier for this query\n\n\nfrom\nUser\nSender\n\n\nmessage\nMaybeInaccessibleMessage\nOptional. Message sent by the bot with the callback button that originated the query\n\n\ninline_message_id\nString\nOptional. Identifier of the message sent via the bot in inline mode, that originated the query.\n\n\nchat_instance\nString\nGlobal identifier, uniquely corresponding to the chat to which the message with the callback button was sent. Useful for high scores in games.\n\n\ndata\nString\nOptional. Data associated with the callback button. Be aware that the message originated the query can contain no callback buttons with this data.\n\n\ngame_short_name\nString\nOptional. Short name of a Game to be returned, serves as the unique identifier for the game\n\n\n\n\nNOTE: After the user presses a callback button, Telegram clients will display a progress bar until you call answerCallbackQuery. It is, therefore, necessary to react by calling answerCallbackQuery even if no notification to the user is needed (e.g., without specifying any of the optional parameters).\n\nForceReply\nUpon receiving a message with this object, Telegram clients will display a reply interface to the user (act as if the user has selected the bot's message and tapped 'Reply'). This can be extremely useful if you want to create user-friendly step-by-step interfaces without having to sacrifice privacy mode. Not supported in channels and for messages sent on behalf of a Telegram Business account.\n\n\n\nField\nType\nDescription\n\n\n\n\nforce_reply\nTrue\nShows reply interface to the user, as if they manually selected the bot's message and tapped 'Reply'\n\n\ninput_field_placeholder\nString\nOptional. The placeholder to be shown in the input field when the reply is active; 1-64 characters\n\n\nselective\nBoolean\nOptional. Use this parameter if you want to force reply from specific users only. Targets: 1) users that are @mentioned in the text of the Message object; 2) if the bot's message is a reply to a message in the same chat and forum topic, sender of the original message.\n\n\n\n\nExample: A poll bot for groups runs in privacy mode (only receives commands, replies to its messages and mentions). There could be two ways to create a new poll:\n\nExplain the user how to send a command with parameters (e.g. /newpoll question answer1 answer2). May be appealing for hardcore users but lacks modern day polish.\nGuide the user through a step-by-step process. 'Please send me your question', 'Cool, now let's add the first answer option', 'Great. Keep adding answer options, then send /done when you're ready'.\n\nThe last option is definitely more attractive. And if you use ForceReply in your bot's questions, it will receive the user's answers even if it only receives replies, commands and mentions - without any extra work for the user.\n\nChatPhoto\nThis object represents a chat photo.\n\n\n\nField\nType\nDescription\n\n\n\n\nsmall_file_id\nString\nFile identifier of small (160x160) chat photo. This file_id can be used only for photo download and only for as long as the photo is not changed.\n\n\nsmall_file_unique_id\nString\nUnique file identifier of small (160x160) chat photo, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.\n\n\nbig_file_id\nString\nFile identifier of big (640x640) chat photo. This file_id can be used only for photo download and only for as long as the photo is not changed.\n\n\nbig_file_unique_id\nString\nUnique file identifier of big (640x640) chat photo, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.\n\n\n\nChatInviteLink\nRepresents an invite link for a chat.\n\n\n\nField\nType\nDescription\n\n\n\n\ninvite_link\nString\nThe invite link. If the link was created by another chat administrator, then the second part of the link will be replaced with ââ¦â.\n\n\ncreator\nUser\nCreator of the link\n\n\ncreates_join_request\nBoolean\nTrue, if users joining the chat via the link need to be approved by chat administrators\n\n\nis_primary\nBoolean\nTrue, if the link is primary\n\n\nis_revoked\nBoolean\nTrue, if the link is revoked\n\n\nname\nString\nOptional. Invite link name\n\n\nexpire_date\nInteger\nOptional. Point in time (Unix timestamp) when the link will expire or has been expired\n\n\nmember_limit\nInteger\nOptional. The maximum number of users that can be members of the chat simultaneously after joining the chat via this invite link; 1-99999\n\n\npending_join_request_count\nInteger\nOptional. Number of pending join requests created using this link\n\n\nsubscription_period\nInteger\nOptional. The number of seconds the subscription will be active for before the next payment\n\n\nsubscription_price\nInteger\nOptional. The amount of Telegram Stars a user must pay initially and after each subsequent subscription period to be a member of the chat using the link\n\n\n\nChatAdministratorRights\nRepresents the rights of an administrator in a chat.\n\n\n\nField\nType\nDescription\n\n\n\n\nis_anonymous\nBoolean\nTrue, if the user's presence in the chat is hidden\n\n\ncan_manage_chat\nBoolean\nTrue, if the administrator can access the chat event log, get boost list, see hidden supergroup and channel members, report spam messages and ignore slow mode. Implied by any other administrator privilege.\n\n\ncan_delete_messages\nBoolean\nTrue, if the administrator can delete messages of other users\n\n\ncan_manage_video_chats\nBoolean\nTrue, if the administrator can manage video chats\n\n\ncan_restrict_members\nBoolean\nTrue, if the administrator can restrict, ban or unban chat members, or access supergroup statistics\n\n\ncan_promote_members\nBoolean\nTrue, if the administrator can add new administrators with a subset of their own privileges or demote administrators that they have promoted, directly or indirectly (promoted by administrators that were appointed by the user)\n\n\ncan_change_info\nBoolean\nTrue, if the user is allowed to change the chat title, photo and other settings\n\n\ncan_invite_users\nBoolean\nTrue, if the user is allowed to invite new users to the chat\n\n\ncan_post_stories\nBoolean\nTrue, if the administrator can post stories to the chat\n\n\ncan_edit_stories\nBoolean\nTrue, if the administrator can edit stories posted by other users, post stories to the chat page, pin chat stories, and access the chat's story archive\n\n\ncan_delete_stories\nBoolean\nTrue, if the administrator can delete stories posted by other users\n\n\ncan_post_messages\nBoolean\nOptional. True, if the administrator can post messages in the channel, or access channel statistics; for channels only\n\n\ncan_edit_messages\nBoolean\nOptional. True, if the administrator can edit messages of other users and can pin messages; for channels only\n\n\ncan_pin_messages\nBoolean\nOptional. True, if the user is allowed to pin messages; for groups and supergroups only\n\n\ncan_manage_topics\nBoolean\nOptional. True, if the user is allowed to create, rename, close, and reopen forum topics; for supergroups only\n\n\n\nChatMemberUpdated\nThis object represents changes in the status of a chat member.\n\n\n\nField\nType\nDescription\n\n\n\n\nchat\nChat\nChat the user belongs to\n\n\nfrom\nUser\nPerformer of the action, which resulted in the change\n\n\ndate\nInteger\nDate the change was done in Unix time\n\n\nold_chat_member\nChatMember\nPrevious information about the chat member\n\n\nnew_chat_member\nChatMember\nNew information about the chat member\n\n\ninvite_link\nChatInviteLink\nOptional. Chat invite link, which was used by the user to join the chat; for joining by invite link events only.\n\n\nvia_join_request\nBoolean\nOptional. True, if the user joined the chat after sending a direct join request without using an invite link and being approved by an administrator\n\n\nvia_chat_folder_invite_link\nBoolean\nOptional. True, if the user joined the chat via a chat folder invite link\n\n\n\nChatMember\nThis object contains information about one member of a chat. Currently, the following 6 types of chat members are supported:\n\nChatMemberOwner\nChatMemberAdministrator\nChatMemberMember\nChatMemberRestricted\nChatMemberLeft\nChatMemberBanned\n\nChatMemberOwner\nRepresents a chat member that owns the chat and has all administrator privileges.\n\n\n\nField\nType\nDescription\n\n\n\n\nstatus\nString\nThe member's status in the chat, always âcreatorâ\n\n\nuser\nUser\nInformation about the user\n\n\nis_anonymous\nBoolean\nTrue, if the user's presence in the chat is hidden\n\n\ncustom_title\nString\nOptional. Custom title for this user\n\n\n\nChatMemberAdministrator\nRepresents a chat member that has some additional privileges.\n\n\n\nField\nType\nDescription\n\n\n\n\nstatus\nString\nThe member's status in the chat, always âadministratorâ\n\n\nuser\nUser\nInformation about the user\n\n\ncan_be_edited\nBoolean\nTrue, if the bot is allowed to edit administrator privileges of that user\n\n\nis_anonymous\nBoolean\nTrue, if the user's presence in the chat is hidden\n\n\ncan_manage_chat\nBoolean\nTrue, if the administrator can access the chat event log, get boost list, see hidden supergroup and channel members, report spam messages and ignore slow mode. Implied by any other administrator privilege.\n\n\ncan_delete_messages\nBoolean\nTrue, if the administrator can delete messages of other users\n\n\ncan_manage_video_chats\nBoolean\nTrue, if the administrator can manage video chats\n\n\ncan_restrict_members\nBoolean\nTrue, if the administrator can restrict, ban or unban chat members, or access supergroup statistics\n\n\ncan_promote_members\nBoolean\nTrue, if the administrator can add new administrators with a subset of their own privileges or demote administrators that they have promoted, directly or indirectly (promoted by administrators that were appointed by the user)\n\n\ncan_change_info\nBoolean\nTrue, if the user is allowed to change the chat title, photo and other settings\n\n\ncan_invite_users\nBoolean\nTrue, if the user is allowed to invite new users to the chat\n\n\ncan_post_stories\nBoolean\nTrue, if the administrator can post stories to the chat\n\n\ncan_edit_stories\nBoolean\nTrue, if the administrator can edit stories posted by other users, post stories to the chat page, pin chat stories, and access the chat's story archive\n\n\ncan_delete_stories\nBoolean\nTrue, if the administrator can delete stories posted by other users\n\n\ncan_post_messages\nBoolean\nOptional. True, if the administrator can post messages in the channel, or access channel statistics; for channels only\n\n\ncan_edit_messages\nBoolean\nOptional. True, if the administrator can edit messages of other users and can pin messages; for channels only\n\n\ncan_pin_messages\nBoolean\nOptional. True, if the user is allowed to pin messages; for groups and supergroups only\n\n\ncan_manage_topics\nBoolean\nOptional. True, if the user is allowed to create, rename, close, and reopen forum topics; for supergroups only\n\n\ncustom_title\nString\nOptional. Custom title for this user\n\n\n\nChatMemberMember\nRepresents a chat member that has no additional privileges or restrictions.\n\n\n\nField\nType\nDescription\n\n\n\n\nstatus\nString\nThe member's status in the chat, always âmemberâ\n\n\nuser\nUser\nInformation about the user\n\n\nuntil_date\nInteger\nOptional. Date when the user's subscription will expire; Unix time\n\n\n\nChatMemberRestricted\nRepresents a chat member that is under certain restrictions in the chat. Supergroups only.\n\n\n\nField\nType\nDescription\n\n\n\n\nstatus\nString\nThe member's status in the chat, always ârestrictedâ\n\n\nuser\nUser\nInformation about the user\n\n\nis_member\nBoolean\nTrue, if the user is a member of the chat at the moment of the request\n\n\ncan_send_messages\nBoolean\nTrue, if the user is allowed to send text messages, contacts, giveaways, giveaway winners, invoices, locations and venues\n\n\ncan_send_audios\nBoolean\nTrue, if the user is allowed to send audios\n\n\ncan_send_documents\nBoolean\nTrue, if the user is allowed to send documents\n\n\ncan_send_photos\nBoolean\nTrue, if the user is allowed to send photos\n\n\ncan_send_videos\nBoolean\nTrue, if the user is allowed to send videos\n\n\ncan_send_video_notes\nBoolean\nTrue, if the user is allowed to send video notes\n\n\ncan_send_voice_notes\nBoolean\nTrue, if the user is allowed to send voice notes\n\n\ncan_send_polls\nBoolean\nTrue, if the user is allowed to send polls\n\n\ncan_send_other_messages\nBoolean\nTrue, if the user is allowed to send animations, games, stickers and use inline bots\n\n\ncan_add_web_page_previews\nBoolean\nTrue, if the user is allowed to add web page previews to their messages\n\n\ncan_change_info\nBoolean\nTrue, if the user is allowed to change the chat title, photo and other settings\n\n\ncan_invite_users\nBoolean\nTrue, if the user is allowed to invite new users to the chat\n\n\ncan_pin_messages\nBoolean\nTrue, if the user is allowed to pin messages\n\n\ncan_manage_topics\nBoolean\nTrue, if the user is allowed to create forum topics\n\n\nuntil_date\nInteger\nDate when restrictions will be lifted for this user; Unix time. If 0, then the user is restricted forever\n\n\n\nChatMemberLeft\nRepresents a chat member that isn't currently a member of the chat, but may join it themselves.\n\n\n\nField\nType\nDescription\n\n\n\n\nstatus\nString\nThe member's status in the chat, always âleftâ\n\n\nuser\nUser\nInformation about the user\n\n\n\nChatMemberBanned\nRepresents a chat member that was banned in the chat and can't return to the chat or view chat messages.\n\n\n\nField\nType\nDescription\n\n\n\n\nstatus\nString\nThe member's status in the chat, always âkickedâ\n\n\nuser\nUser\nInformation about the user\n\n\nuntil_date\nInteger\nDate when restrictions will be lifted for this user; Unix time. If 0, then the user is banned forever\n\n\n\nChatJoinRequest\nRepresents a join request sent to a chat.\n\n\n\nField\nType\nDescription\n\n\n\n\nchat\nChat\nChat to which the request was sent\n\n\nfrom\nUser\nUser that sent the join request\n\n\nuser_chat_id\nInteger\nIdentifier of a private chat with the user who sent the join request. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier. The bot can use this identifier for 5 minutes to send messages until the join request is processed, assuming no other administrator contacted the user.\n\n\ndate\nInteger\nDate the request was sent in Unix time\n\n\nbio\nString\nOptional. Bio of the user.\n\n\ninvite_link\nChatInviteLink\nOptional. Chat invite link that was used by the user to send the join request\n\n\n\nChatPermissions\nDescribes actions that a non-administrator user is allowed to take in a chat.\n\n\n\nField\nType\nDescription\n\n\n\n\ncan_send_messages\nBoolean\nOptional. True, if the user is allowed to send text messages, contacts, giveaways, giveaway winners, invoices, locations and venues\n\n\ncan_send_audios\nBoolean\nOptional. True, if the user is allowed to send audios\n\n\ncan_send_documents\nBoolean\nOptional. True, if the user is allowed to send documents\n\n\ncan_send_photos\nBoolean\nOptional. True, if the user is allowed to send photos\n\n\ncan_send_videos\nBoolean\nOptional. True, if the user is allowed to send videos\n\n\ncan_send_video_notes\nBoolean\nOptional. True, if the user is allowed to send video notes\n\n\ncan_send_voice_notes\nBoolean\nOptional. True, if the user is allowed to send voice notes\n\n\ncan_send_polls\nBoolean\nOptional. True, if the user is allowed to send polls\n\n\ncan_send_other_messages\nBoolean\nOptional. True, if the user is allowed to send animations, games, stickers and use inline bots\n\n\ncan_add_web_page_previews\nBoolean\nOptional. True, if the user is allowed to add web page previews to their messages\n\n\ncan_change_info\nBoolean\nOptional. True, if the user is allowed to change the chat title, photo and other settings. Ignored in public supergroups\n\n\ncan_invite_users\nBoolean\nOptional. True, if the user is allowed to invite new users to the chat\n\n\ncan_pin_messages\nBoolean\nOptional. True, if the user is allowed to pin messages. Ignored in public supergroups\n\n\ncan_manage_topics\nBoolean\nOptional. True, if the user is allowed to create forum topics. If omitted defaults to the value of can_pin_messages\n\n\n\nBirthdate\nDescribes the birthdate of a user.\n\n\n\nField\nType\nDescription\n\n\n\n\nday\nInteger\nDay of the user's birth; 1-31\n\n\nmonth\nInteger\nMonth of the user's birth; 1-12\n\n\nyear\nInteger\nOptional. Year of the user's birth\n\n\n\nBusinessIntro\nContains information about the start page settings of a Telegram Business account.\n\n\n\nField\nType\nDescription\n\n\n\n\ntitle\nString\nOptional. Title text of the business intro\n\n\nmessage\nString\nOptional. Message text of the business intro\n\n\nsticker\nSticker\nOptional. Sticker of the business intro\n\n\n\nBusinessLocation\nContains information about the location of a Telegram Business account.\n\n\n\nField\nType\nDescription\n\n\n\n\naddress\nString\nAddress of the business\n\n\nlocation\nLocation\nOptional. Location of the business\n\n\n\nBusinessOpeningHoursInterval\nDescribes an interval of time during which a business is open.\n\n\n\nField\nType\nDescription\n\n\n\n\nopening_minute\nInteger\nThe minute's sequence number in a week, starting on Monday, marking the start of the time interval during which the business is open; 0 - 7 * 24 * 60\n\n\nclosing_minute\nInteger\nThe minute's sequence number in a week, starting on Monday, marking the end of the time interval during which the business is open; 0 - 8 * 24 * 60\n\n\n\nBusinessOpeningHours\nDescribes the opening hours of a business.\n\n\n\nField\nType\nDescription\n\n\n\n\ntime_zone_name\nString\nUnique name of the time zone for which the opening hours are defined\n\n\nopening_hours\nArray of BusinessOpeningHoursInterval\nList of time intervals describing business opening hours\n\n\n\nChatLocation\nRepresents a location to which a chat is connected.\n\n\n\nField\nType\nDescription\n\n\n\n\nlocation\nLocation\nThe location to which the supergroup is connected. Can't be a live location.\n\n\naddress\nString\nLocation address; 1-64 characters, as defined by the chat owner\n\n\n\nReactionType\nThis object describes the type of a reaction. Currently, it can be one of\n\nReactionTypeEmoji\nReactionTypeCustomEmoji\nReactionTypePaid\n\nReactionTypeEmoji\nThe reaction is based on an emoji.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the reaction, always âemojiâ\n\n\nemoji\nString\nReaction emoji. Currently, it can be one of \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"\n\n\n\nReactionTypeCustomEmoji\nThe reaction is based on a custom emoji.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the reaction, always âcustom_emojiâ\n\n\ncustom_emoji_id\nString\nCustom emoji identifier\n\n\n\nReactionTypePaid\nThe reaction is paid.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the reaction, always âpaidâ\n\n\n\nReactionCount\nRepresents a reaction added to a message along with the number of times it was added.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nReactionType\nType of the reaction\n\n\ntotal_count\nInteger\nNumber of times the reaction was added\n\n\n\nMessageReactionUpdated\nThis object represents a change of a reaction on a message performed by a user.\n\n\n\nField\nType\nDescription\n\n\n\n\nchat\nChat\nThe chat containing the message the user reacted to\n\n\nmessage_id\nInteger\nUnique identifier of the message inside the chat\n\n\nuser\nUser\nOptional. The user that changed the reaction, if the user isn't anonymous\n\n\nactor_chat\nChat\nOptional. The chat on behalf of which the reaction was changed, if the user is anonymous\n\n\ndate\nInteger\nDate of the change in Unix time\n\n\nold_reaction\nArray of ReactionType\nPrevious list of reaction types that were set by the user\n\n\nnew_reaction\nArray of ReactionType\nNew list of reaction types that have been set by the user\n\n\n\nMessageReactionCountUpdated\nThis object represents reaction changes on a message with anonymous reactions.\n\n\n\nField\nType\nDescription\n\n\n\n\nchat\nChat\nThe chat containing the message\n\n\nmessage_id\nInteger\nUnique message identifier inside the chat\n\n\ndate\nInteger\nDate of the change in Unix time\n\n\nreactions\nArray of ReactionCount\nList of reactions that are present on the message\n\n\n\nForumTopic\nThis object represents a forum topic.\n\n\n\nField\nType\nDescription\n\n\n\n\nmessage_thread_id\nInteger\nUnique identifier of the forum topic\n\n\nname\nString\nName of the topic\n\n\nicon_color\nInteger\nColor of the topic icon in RGB format\n\n\nicon_custom_emoji_id\nString\nOptional. Unique identifier of the custom emoji shown as the topic icon\n\n\n\nBotCommand\nThis object represents a bot command.\n\n\n\nField\nType\nDescription\n\n\n\n\ncommand\nString\nText of the command; 1-32 characters. Can contain only lowercase English letters, digits and underscores.\n\n\ndescription\nString\nDescription of the command; 1-256 characters.\n\n\n\nBotCommandScope\nThis object represents the scope to which bot commands are applied. Currently, the following 7 scopes are supported:\n\nBotCommandScopeDefault\nBotCommandScopeAllPrivateChats\nBotCommandScopeAllGroupChats\nBotCommandScopeAllChatAdministrators\nBotCommandScopeChat\nBotCommandScopeChatAdministrators\nBotCommandScopeChatMember\n\nDetermining list of commands\nThe following algorithm is used to determine the list of commands for a particular user viewing the bot menu. The first list of commands which is set is returned:\nCommands in the chat with the bot\n\nbotCommandScopeChat + language_code\nbotCommandScopeChat\nbotCommandScopeAllPrivateChats + language_code\nbotCommandScopeAllPrivateChats\nbotCommandScopeDefault + language_code\nbotCommandScopeDefault\n\nCommands in group and supergroup chats\n\nbotCommandScopeChatMember + language_code\nbotCommandScopeChatMember\nbotCommandScopeChatAdministrators + language_code (administrators only)\nbotCommandScopeChatAdministrators (administrators only)\nbotCommandScopeChat + language_code\nbotCommandScopeChat\nbotCommandScopeAllChatAdministrators + language_code (administrators only)\nbotCommandScopeAllChatAdministrators (administrators only)\nbotCommandScopeAllGroupChats + language_code\nbotCommandScopeAllGroupChats\nbotCommandScopeDefault + language_code\nbotCommandScopeDefault\n\nBotCommandScopeDefault\nRepresents the default scope of bot commands. Default commands are used if no commands with a narrower scope are specified for the user.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nScope type, must be default\n\n\n\nBotCommandScopeAllPrivateChats\nRepresents the scope of bot commands, covering all private chats.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nScope type, must be all_private_chats\n\n\n\nBotCommandScopeAllGroupChats\nRepresents the scope of bot commands, covering all group and supergroup chats.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nScope type, must be all_group_chats\n\n\n\nBotCommandScopeAllChatAdministrators\nRepresents the scope of bot commands, covering all group and supergroup chat administrators.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nScope type, must be all_chat_administrators\n\n\n\nBotCommandScopeChat\nRepresents the scope of bot commands, covering a specific chat.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nScope type, must be chat\n\n\nchat_id\nInteger or String\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\n\nBotCommandScopeChatAdministrators\nRepresents the scope of bot commands, covering all administrators of a specific group or supergroup chat.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nScope type, must be chat_administrators\n\n\nchat_id\nInteger or String\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\n\nBotCommandScopeChatMember\nRepresents the scope of bot commands, covering a specific member of a group or supergroup chat.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nScope type, must be chat_member\n\n\nchat_id\nInteger or String\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\nuser_id\nInteger\nUnique identifier of the target user\n\n\n\nBotName\nThis object represents the bot's name.\n\n\n\nField\nType\nDescription\n\n\n\n\nname\nString\nThe bot's name\n\n\n\nBotDescription\nThis object represents the bot's description.\n\n\n\nField\nType\nDescription\n\n\n\n\ndescription\nString\nThe bot's description\n\n\n\nBotShortDescription\nThis object represents the bot's short description.\n\n\n\nField\nType\nDescription\n\n\n\n\nshort_description\nString\nThe bot's short description\n\n\n\nMenuButton\nThis object describes the bot's menu button in a private chat. It should be one of\n\nMenuButtonCommands\nMenuButtonWebApp\nMenuButtonDefault\n\nIf a menu button other than MenuButtonDefault is set for a private chat, then it is applied in the chat. Otherwise the default menu button is applied. By default, the menu button opens the list of bot commands.\nMenuButtonCommands\nRepresents a menu button, which opens the bot's list of commands.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the button, must be commands\n\n\n\nMenuButtonWebApp\nRepresents a menu button, which launches a Web App.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the button, must be web_app\n\n\ntext\nString\nText on the button\n\n\nweb_app\nWebAppInfo\nDescription of the Web App that will be launched when the user presses the button. The Web App will be able to send an arbitrary message on behalf of the user using the method answerWebAppQuery. Alternatively, a t.me link to a Web App of the bot can be specified in the object instead of the Web App's URL, in which case the Web App will be opened as if the user pressed the link.\n\n\n\nMenuButtonDefault\nDescribes that no specific value for the menu button was set.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the button, must be default\n\n\n\nChatBoostSource\nThis object describes the source of a chat boost. It can be one of\n\nChatBoostSourcePremium\nChatBoostSourceGiftCode\nChatBoostSourceGiveaway\n\nChatBoostSourcePremium\nThe boost was obtained by subscribing to Telegram Premium or by gifting a Telegram Premium subscription to another user.\n\n\n\nField\nType\nDescription\n\n\n\n\nsource\nString\nSource of the boost, always âpremiumâ\n\n\nuser\nUser\nUser that boosted the chat\n\n\n\nChatBoostSourceGiftCode\nThe boost was obtained by the creation of Telegram Premium gift codes to boost a chat. Each such code boosts the chat 4 times for the duration of the corresponding Telegram Premium subscription.\n\n\n\nField\nType\nDescription\n\n\n\n\nsource\nString\nSource of the boost, always âgift_codeâ\n\n\nuser\nUser\nUser for which the gift code was created\n\n\n\nChatBoostSourceGiveaway\nThe boost was obtained by the creation of a Telegram Premium or a Telegram Star giveaway. This boosts the chat 4 times for the duration of the corresponding Telegram Premium subscription for Telegram Premium giveaways and prize_star_count / 500 times for one year for Telegram Star giveaways.\n\n\n\nField\nType\nDescription\n\n\n\n\nsource\nString\nSource of the boost, always âgiveawayâ\n\n\ngiveaway_message_id\nInteger\nIdentifier of a message in the chat with the giveaway; the message could have been deleted already. May be 0 if the message isn't sent yet.\n\n\nuser\nUser\nOptional. User that won the prize in the giveaway if any; for Telegram Premium giveaways only\n\n\nprize_star_count\nInteger\nOptional. The number of Telegram Stars to be split between giveaway winners; for Telegram Star giveaways only\n\n\nis_unclaimed\nTrue\nOptional. True, if the giveaway was completed, but there was no user to win the prize\n\n\n\nChatBoost\nThis object contains information about a chat boost.\n\n\n\nField\nType\nDescription\n\n\n\n\nboost_id\nString\nUnique identifier of the boost\n\n\nadd_date\nInteger\nPoint in time (Unix timestamp) when the chat was boosted\n\n\nexpiration_date\nInteger\nPoint in time (Unix timestamp) when the boost will automatically expire, unless the booster's Telegram Premium subscription is prolonged\n\n\nsource\nChatBoostSource\nSource of the added boost\n\n\n\nChatBoostUpdated\nThis object represents a boost added to a chat or changed.\n\n\n\nField\nType\nDescription\n\n\n\n\nchat\nChat\nChat which was boosted\n\n\nboost\nChatBoost\nInformation about the chat boost\n\n\n\nChatBoostRemoved\nThis object represents a boost removed from a chat.\n\n\n\nField\nType\nDescription\n\n\n\n\nchat\nChat\nChat which was boosted\n\n\nboost_id\nString\nUnique identifier of the boost\n\n\nremove_date\nInteger\nPoint in time (Unix timestamp) when the boost was removed\n\n\nsource\nChatBoostSource\nSource of the removed boost\n\n\n\nUserChatBoosts\nThis object represents a list of boosts added to a chat by a user.\n\n\n\nField\nType\nDescription\n\n\n\n\nboosts\nArray of ChatBoost\nThe list of boosts added to the chat by the user\n\n\n\nBusinessConnection\nDescribes the connection of the bot with a business account.\n\n\n\nField\nType\nDescription\n\n\n\n\nid\nString\nUnique identifier of the business connection\n\n\nuser\nUser\nBusiness account user that created the business connection\n\n\nuser_chat_id\nInteger\nIdentifier of a private chat with the user who created the business connection. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a 64-bit integer or double-precision float type are safe for storing this identifier.\n\n\ndate\nInteger\nDate the connection was established in Unix time\n\n\ncan_reply\nBoolean\nTrue, if the bot can act on behalf of the business account in chats that were active in the last 24 hours\n\n\nis_enabled\nBoolean\nTrue, if the connection is active\n\n\n\nBusinessMessagesDeleted\nThis object is received when messages are deleted from a connected business account.\n\n\n\nField\nType\nDescription\n\n\n\n\nbusiness_connection_id\nString\nUnique identifier of the business connection\n\n\nchat\nChat\nInformation about a chat in the business account. The bot may not have access to the chat or the corresponding user.\n\n\nmessage_ids\nArray of Integer\nThe list of identifiers of deleted messages in the chat of the business account\n\n\n\nResponseParameters\nDescribes why a request was unsuccessful.\n\n\n\nField\nType\nDescription\n\n\n\n\nmigrate_to_chat_id\nInteger\nOptional. The group has been migrated to a supergroup with the specified identifier. This number may have more than 32 significant bits and some programming languages may have difficulty/silent defects in interpreting it. But it has at most 52 significant bits, so a signed 64-bit integer or double-precision float type are safe for storing this identifier.\n\n\nretry_after\nInteger\nOptional. In case of exceeding flood control, the number of seconds left to wait before the request can be repeated\n\n\n\nInputMedia\nThis object represents the content of a media message to be sent. It should be one of\n\nInputMediaAnimation\nInputMediaDocument\nInputMediaAudio\nInputMediaPhoto\nInputMediaVideo\n\nInputMediaPhoto\nRepresents a photo to be sent.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be photo\n\n\nmedia\nString\nFile to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass âattach://<file_attach_name>â to upload a new one using multipart/form-data under <file_attach_name> name. More information on Sending Files Â»\n\n\ncaption\nString\nOptional. Caption of the photo to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the photo caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional. Pass True, if the caption must be shown above the message media\n\n\nhas_spoiler\nBoolean\nOptional. Pass True if the photo needs to be covered with a spoiler animation\n\n\n\nInputMediaVideo\nRepresents a video to be sent.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be video\n\n\nmedia\nString\nFile to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass âattach://<file_attach_name>â to upload a new one using multipart/form-data under <file_attach_name> name. More information on Sending Files Â»\n\n\nthumbnail\nInputFile or String\nOptional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass âattach://<file_attach_name>â if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More information on Sending Files Â»\n\n\ncaption\nString\nOptional. Caption of the video to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the video caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional. Pass True, if the caption must be shown above the message media\n\n\nwidth\nInteger\nOptional. Video width\n\n\nheight\nInteger\nOptional. Video height\n\n\nduration\nInteger\nOptional. Video duration in seconds\n\n\nsupports_streaming\nBoolean\nOptional. Pass True if the uploaded video is suitable for streaming\n\n\nhas_spoiler\nBoolean\nOptional. Pass True if the video needs to be covered with a spoiler animation\n\n\n\nInputMediaAnimation\nRepresents an animation file (GIF or H.264/MPEG-4 AVC video without sound) to be sent.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be animation\n\n\nmedia\nString\nFile to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass âattach://<file_attach_name>â to upload a new one using multipart/form-data under <file_attach_name> name. More information on Sending Files Â»\n\n\nthumbnail\nInputFile or String\nOptional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass âattach://<file_attach_name>â if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More information on Sending Files Â»\n\n\ncaption\nString\nOptional. Caption of the animation to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the animation caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional. Pass True, if the caption must be shown above the message media\n\n\nwidth\nInteger\nOptional. Animation width\n\n\nheight\nInteger\nOptional. Animation height\n\n\nduration\nInteger\nOptional. Animation duration in seconds\n\n\nhas_spoiler\nBoolean\nOptional. Pass True if the animation needs to be covered with a spoiler animation\n\n\n\nInputMediaAudio\nRepresents an audio file to be treated as music to be sent.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be audio\n\n\nmedia\nString\nFile to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass âattach://<file_attach_name>â to upload a new one using multipart/form-data under <file_attach_name> name. More information on Sending Files Â»\n\n\nthumbnail\nInputFile or String\nOptional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass âattach://<file_attach_name>â if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More information on Sending Files Â»\n\n\ncaption\nString\nOptional. Caption of the audio to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the audio caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nduration\nInteger\nOptional. Duration of the audio in seconds\n\n\nperformer\nString\nOptional. Performer of the audio\n\n\ntitle\nString\nOptional. Title of the audio\n\n\n\nInputMediaDocument\nRepresents a general file to be sent.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be document\n\n\nmedia\nString\nFile to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass âattach://<file_attach_name>â to upload a new one using multipart/form-data under <file_attach_name> name. More information on Sending Files Â»\n\n\nthumbnail\nInputFile or String\nOptional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass âattach://<file_attach_name>â if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More information on Sending Files Â»\n\n\ncaption\nString\nOptional. Caption of the document to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the document caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\ndisable_content_type_detection\nBoolean\nOptional. Disables automatic server-side content type detection for files uploaded using multipart/form-data. Always True, if the document is sent as part of an album.\n\n\n\nInputFile\nThis object represents the contents of a file to be uploaded. Must be posted using multipart/form-data in the usual way that files are uploaded via the browser.\nInputPaidMedia\nThis object describes the paid media to be sent. Currently, it can be one of\n\nInputPaidMediaPhoto\nInputPaidMediaVideo\n\nInputPaidMediaPhoto\nThe paid media to send is a photo.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the media, must be photo\n\n\nmedia\nString\nFile to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass âattach://<file_attach_name>â to upload a new one using multipart/form-data under <file_attach_name> name. More information on Sending Files Â»\n\n\n\nInputPaidMediaVideo\nThe paid media to send is a video.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the media, must be video\n\n\nmedia\nString\nFile to send. Pass a file_id to send a file that exists on the Telegram servers (recommended), pass an HTTP URL for Telegram to get a file from the Internet, or pass âattach://<file_attach_name>â to upload a new one using multipart/form-data under <file_attach_name> name. More information on Sending Files Â»\n\n\nthumbnail\nInputFile or String\nOptional. Thumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass âattach://<file_attach_name>â if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More information on Sending Files Â»\n\n\nwidth\nInteger\nOptional. Video width\n\n\nheight\nInteger\nOptional. Video height\n\n\nduration\nInteger\nOptional. Video duration in seconds\n\n\nsupports_streaming\nBoolean\nOptional. Pass True if the uploaded video is suitable for streaming\n\n\n\nSending files\nThere are three ways to send files (photos, stickers, audio, media, etc.):\n\nIf the file is already stored somewhere on the Telegram servers, you don't need to reupload it: each file object has a file_id field, simply pass this file_id as a parameter instead of uploading. There are no limits for files sent this way.\nProvide Telegram with an HTTP URL for the file to be sent. Telegram will download and send the file. 5 MB max size for photos and 20 MB max for other types of content.\nPost the file using multipart/form-data in the usual way that files are uploaded via the browser. 10 MB max size for photos, 50 MB for other files.\n\nSending by file_id\n\nIt is not possible to change the file type when resending by file_id. I.e. a video can't be sent as a photo, a photo can't be sent as a document, etc.\nIt is not possible to resend thumbnails.\nResending a photo by file_id will send all of its sizes.\nfile_id is unique for each individual bot and can't be transferred from one bot to another.\nfile_id uniquely identifies a file, but a file can have different valid file_ids even for the same bot.\n\nSending by URL\n\nWhen sending by URL the target file must have the correct MIME type (e.g., audio/mpeg for sendAudio, etc.).\nIn sendDocument, sending by URL will currently only work for .PDF and .ZIP files.\nTo use sendVoice, the file must have the type audio/ogg and be no more than 1MB in size. 1-20MB voice notes will be sent as files.\nOther configurations may work but we can't guarantee that they will.\n\nAccent colors\nColors with identifiers 0 (red), 1 (orange), 2 (purple/violet), 3 (green), 4 (cyan), 5 (blue), 6 (pink) can be customized by app themes. Additionally, the following colors in RGB format are currently in use.\n\n\nColor identifierLight colorsDark colors\n\n\n7E15052 F9AE63FF9380 992F37\n8E0802B FAC534ECB04E C35714\n9A05FF3 F48FFFC697FF 5E31C8\n1027A910 A7DC57A7EB6E 167E2D\n1127ACCE 82E8D640D8D0 045C7F\n123391D4 7DD3F052BFFF 0B5494\n13DD4371 FFBE9FFF86A6 8E366E\n14247BED F04856 FFFFFF3FA2FE E5424F FFFFFF\n15D67722 1EA011 FFFFFFFF905E 32A527 FFFFFF\n16179E42 E84A3F FFFFFF66D364 D5444F FFFFFF\n172894AF 6FC456 FFFFFF22BCE2 3DA240 FFFFFF\n180C9AB3 FFAD95 FFE6B522BCE2 FF9778 FFDA6B\n197757D6 F79610 FFDE8E9791FF F2731D FFDB59\n201585CF F2AB1D FFFFFF3DA6EB EEA51D FFFFFF\n\n\nProfile accent colors\nCurrently, the following colors in RGB format are in use for profile backgrounds.\n\n\nColor identifierLight colorsDark colors\n\n\n0BA56509C4540\n1C27C3E945E2C\n2956AC8715099\n349A35533713B\n43E97AD387E87\n55A8FBB477194\n6B85378944763\n77F8B95435261\n8C9565D D97C57994343 AC583E\n9CF7244 CC94338F552F A17232\n109662D4 B966B6634691 9250A2\n113D9755 89A650296A43 5F8F44\n123D95BA 50AD98306C7C 3E987E\n13538BC2 4DA8BD38618C 458BA1\n14B04F74 D1666D884160 A65259\n15637482 7B8A9753606E 384654\n\n\nInline mode objects\nObjects and methods used in the inline mode are described in the Inline mode section.\nAvailable methods\n\nAll methods in the Bot API are case-insensitive. We support GET and POST HTTP methods. Use either URL query string or application/json or application/x-www-form-urlencoded or multipart/form-data for passing parameters in Bot API requests.On successful call, a JSON-object containing the result will be returned.\n\ngetMe\nA simple method for testing your bot's authentication token. Requires no parameters. Returns basic information about the bot in form of a User object.\nlogOut\nUse this method to log out from the cloud Bot API server before launching the bot locally. You must log out the bot before running it locally, otherwise there is no guarantee that the bot will receive updates. After a successful call, you can immediately log in on a local server, but will not be able to log in back to the cloud Bot API server for 10 minutes. Returns True on success. Requires no parameters.\nclose\nUse this method to close the bot instance before moving it from one local server to another. You need to delete the webhook before calling this method to ensure that the bot isn't launched again after server restart. The method will return error 429 in the first 10 minutes after the bot is launched. Returns True on success. Requires no parameters.\nsendMessage\nUse this method to send text messages. On success, the sent Message is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\ntext\nString\nYes\nText of the message to be sent, 1-4096 characters after entities parsing\n\n\nparse_mode\nString\nOptional\nMode for parsing entities in the message text. See formatting options for more details.\n\n\nentities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in message text, which can be specified instead of parse_mode\n\n\nlink_preview_options\nLinkPreviewOptions\nOptional\nLink preview generation options for the message\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nFormatting options\nThe Bot API supports basic formatting for messages. You can use bold, italic, underlined, strikethrough, spoiler text, block quotations as well as inline links and pre-formatted code in your bots' messages. Telegram clients will render them accordingly. You can specify text entities directly, or use markdown-style or HTML-style formatting.\nNote that Telegram clients will display an alert to the user before opening an inline link ('Open this link?' together with the full URL).\nMessage entities can be nested, providing following restrictions are met:- If two entities have common characters, then one of them is fully contained inside another.- bold, italic, underline, strikethrough, and spoiler entities can contain and can be part of any other entities, except pre and code.- blockquote and expandable_blockquote entities can't be nested.- All other entities can't contain each other.\nLinks tg://user?id=<user_id> can be used to mention a user by their identifier without using a username. Please note:\n\nThese links will work only if they are used inside an inline link or in an inline keyboard button. For example, they will not work, when used in a message text.\nUnless the user is a member of the chat where they were mentioned, these mentions are only guaranteed to work if the user has contacted the bot in private in the past or has sent a callback query to the bot via an inline button and doesn't have Forwarded Messages privacy enabled for the bot.\n\nYou can find the list of programming and markup languages for which syntax highlighting is supported at libprisma#supported-languages.\nMarkdownV2 style\nTo use this mode, pass MarkdownV2 in the parse_mode field. Use the following syntax in your message:\n*bold \\*text*\n_italic \\*text_\n__underline__\n~strikethrough~\n||spoiler||\n*bold _italic bold ~italic bold strikethrough ||italic bold strikethrough spoiler||~ __underline italic bold___ bold*\n[inline URL](http://www.example.com/)\n[inline mention of a user](tg://user?id=123456789)\n![](tg://emoji?id=5368324170671202286)\n`inline fixed-width code`\n```\npre-formatted fixed-width code block\n```\n```python\npre-formatted fixed-width code block written in the Python programming language\n```\n>Block quotation started\n>Block quotation continued\n>Block quotation continued\n>Block quotation continued\n>The last line of the block quotation\n**>The expandable block quotation started right after the previous block quotation\n>It is separated from the previous block quotation by an empty bold entity\n>Expandable block quotation continued\n>Hidden by default part of the expandable block quotation started\n>Expandable block quotation continued\n>The last line of the expandable block quotation with the expandability mark||\nPlease note:\n\nAny character with code between 1 and 126 inclusively can be escaped anywhere with a preceding '\\' character, in which case it is treated as an ordinary character and not a part of the markup. This implies that '\\' character usually must be escaped with a preceding '\\' character.\nInside pre and code entities, all '`' and '\\' characters must be escaped with a preceding '\\' character.\nInside the (...) part of the inline link and custom emoji definition, all ')' and '\\' must be escaped with a preceding '\\' character.\nIn all other places characters '_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!' must be escaped with the preceding character '\\'.\nIn case of ambiguity between italic and underline entities __ is always greadily treated from left to right as beginning or end of an underline entity, so instead of ___italic underline___ use ___italic underline_**__, adding an empty bold entity as a separator.\nA valid emoji must be provided as an alternative value for the custom emoji. The emoji will be shown instead of the custom emoji in places where a custom emoji cannot be displayed (e.g., system notifications) or if the message is forwarded by a non-premium user. It is recommended to use the emoji from the emoji field of the custom emoji sticker.\nCustom emoji entities can only be used by bots that purchased additional usernames on Fragment.\n\nHTML style\nTo use this mode, pass HTML in the parse_mode field. The following tags are currently supported:\n<b>bold</b>, <strong>bold</strong>\n<i>italic</i>, <em>italic</em>\n<u>underline</u>, <ins>underline</ins>\n<s>strikethrough</s>, <strike>strikethrough</strike>, <del>strikethrough</del>\n<span class=\"tg-spoiler\">spoiler</span>, <tg-spoiler>spoiler</tg-spoiler>\n<b>bold <i>italic bold <s>italic bold strikethrough <span class=\"tg-spoiler\">italic bold strikethrough spoiler</span></s> <u>underline italic bold</u></i> bold</b>\n<a href=\"http://www.example.com/\">inline URL</a>\n<a href=\"tg://user?id=123456789\">inline mention of a user</a>\n<tg-emoji emoji-id=\"5368324170671202286\"></tg-emoji>\n<code>inline fixed-width code</code>\n<pre>pre-formatted fixed-width code block</pre>\n<pre><code class=\"language-python\">pre-formatted fixed-width code block written in the Python programming language</code></pre>\n<blockquote>Block quotation started\\nBlock quotation continued\\nThe last line of the block quotation</blockquote>\n<blockquote expandable>Expandable block quotation started\\nExpandable block quotation continued\\nExpandable block quotation continued\\nHidden by default part of the block quotation started\\nExpandable block quotation continued\\nThe last line of the block quotation</blockquote>\nPlease note:\n\nOnly the tags mentioned above are currently supported.\nAll <, > and & symbols that are not a part of a tag or an HTML entity must be replaced with the corresponding HTML entities (< with &lt;, > with &gt; and & with &amp;).\nAll numerical HTML entities are supported.\nThe API currently supports only the following named HTML entities: &lt;, &gt;, &amp; and &quot;.\nUse nested pre and code tags, to define programming language for pre entity.\nProgramming language can't be specified for standalone code tags.\nA valid emoji must be used as the content of the tg-emoji tag. The emoji will be shown instead of the custom emoji in places where a custom emoji cannot be displayed (e.g., system notifications) or if the message is forwarded by a non-premium user. It is recommended to use the emoji from the emoji field of the custom emoji sticker.\nCustom emoji entities can only be used by bots that purchased additional usernames on Fragment.\n\nMarkdown style\nThis is a legacy mode, retained for backward compatibility. To use this mode, pass Markdown in the parse_mode field. Use the following syntax in your message:\n*bold text*\n_italic text_\n[inline URL](http://www.example.com/)\n[inline mention of a user](tg://user?id=123456789)\n`inline fixed-width code`\n```\npre-formatted fixed-width code block\n```\n```python\npre-formatted fixed-width code block written in the Python programming language\n```\nPlease note:\n\nEntities must not be nested, use parse mode MarkdownV2 instead.\nThere is no way to specify âunderlineâ, âstrikethroughâ, âspoilerâ, âblockquoteâ, âexpandable_blockquoteâ and âcustom_emojiâ entities, use parse mode MarkdownV2 instead.\nTo escape characters '_', '*', '`', '[' outside of an entity, prepend the characters '\\' before them.\nEscaping inside entities is not allowed, so entity must be closed first and reopened again: use _snake_\\__case_ for italic snake_case and *2*\\**2=4* for bold 2*2=4.\n\nPaid Broadcasts\nBy default, all bots are able to broadcast up to 30 messages per second to their users. Developers can increase this limit by enabling Paid Broadcasts in @Botfather - allowing their bot to broadcast up to 1000 messages per second.\nEach message broadcasted over the free amount of 30 messages per second incurs a cost of 0.1 Stars per message, paid with Telegram Stars from the bot's balance. In order to use this feature, a bot must have at least 10,000 Stars on its balance.\n\nBots with increased limits are only charged for messages that are broadcasted successfully.\n\nforwardMessage\nUse this method to forward messages of any kind. Service messages and messages with protected content can't be forwarded. On success, the sent Message is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nfrom_chat_id\nInteger or String\nYes\nUnique identifier for the chat where the original message was sent (or channel username in the format @channelusername)\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the forwarded message from forwarding and saving\n\n\nmessage_id\nInteger\nYes\nMessage identifier in the chat specified in from_chat_id\n\n\n\nforwardMessages\nUse this method to forward multiple messages of any kind. If some of the specified messages can't be found or forwarded, they are skipped. Service messages and messages with protected content can't be forwarded. Album grouping is kept for forwarded messages. On success, an array of MessageId of the sent messages is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nfrom_chat_id\nInteger or String\nYes\nUnique identifier for the chat where the original messages were sent (or channel username in the format @channelusername)\n\n\nmessage_ids\nArray of Integer\nYes\nA JSON-serialized list of 1-100 identifiers of messages in the chat from_chat_id to forward. The identifiers must be specified in a strictly increasing order.\n\n\ndisable_notification\nBoolean\nOptional\nSends the messages silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the forwarded messages from forwarding and saving\n\n\n\ncopyMessage\nUse this method to copy messages of any kind. Service messages, paid media messages, giveaway messages, giveaway winners messages, and invoice messages can't be copied. A quiz poll can be copied only if the value of the field correct_option_id is known to the bot. The method is analogous to the method forwardMessage, but the copied message doesn't have a link to the original message. Returns the MessageId of the sent message on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nfrom_chat_id\nInteger or String\nYes\nUnique identifier for the chat where the original message was sent (or channel username in the format @channelusername)\n\n\nmessage_id\nInteger\nYes\nMessage identifier in the chat specified in from_chat_id\n\n\ncaption\nString\nOptional\nNew caption for media, 0-1024 characters after entities parsing. If not specified, the original caption is kept\n\n\nparse_mode\nString\nOptional\nMode for parsing entities in the new caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in the new caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional\nPass True, if the caption must be shown above the message media. Ignored if a new caption isn't specified.\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\ncopyMessages\nUse this method to copy messages of any kind. If some of the specified messages can't be found or copied, they are skipped. Service messages, paid media messages, giveaway messages, giveaway winners messages, and invoice messages can't be copied. A quiz poll can be copied only if the value of the field correct_option_id is known to the bot. The method is analogous to the method forwardMessages, but the copied messages don't have a link to the original message. Album grouping is kept for copied messages. On success, an array of MessageId of the sent messages is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nfrom_chat_id\nInteger or String\nYes\nUnique identifier for the chat where the original messages were sent (or channel username in the format @channelusername)\n\n\nmessage_ids\nArray of Integer\nYes\nA JSON-serialized list of 1-100 identifiers of messages in the chat from_chat_id to copy. The identifiers must be specified in a strictly increasing order.\n\n\ndisable_notification\nBoolean\nOptional\nSends the messages silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent messages from forwarding and saving\n\n\nremove_caption\nBoolean\nOptional\nPass True to copy the messages without their captions\n\n\n\nsendPhoto\nUse this method to send photos. On success, the sent Message is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nphoto\nInputFile or String\nYes\nPhoto to send. Pass a file_id as String to send a photo that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a photo from the Internet, or upload a new photo using multipart/form-data. The photo must be at most 10 MB in size. The photo's width and height must not exceed 10000 in total. Width and height ratio must be at most 20. More information on Sending Files Â»\n\n\ncaption\nString\nOptional\nPhoto caption (may also be used when resending photos by file_id), 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional\nMode for parsing entities in the photo caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional\nPass True, if the caption must be shown above the message media\n\n\nhas_spoiler\nBoolean\nOptional\nPass True if the photo needs to be covered with a spoiler animation\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nsendAudio\nUse this method to send audio files, if you want Telegram clients to display them in the music player. Your audio must be in the .MP3 or .M4A format. On success, the sent Message is returned. Bots can currently send audio files of up to 50 MB in size, this limit may be changed in the future.\nFor sending voice messages, use the sendVoice method instead.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\naudio\nInputFile or String\nYes\nAudio file to send. Pass a file_id as String to send an audio file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get an audio file from the Internet, or upload a new one using multipart/form-data. More information on Sending Files Â»\n\n\ncaption\nString\nOptional\nAudio caption, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional\nMode for parsing entities in the audio caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nduration\nInteger\nOptional\nDuration of the audio in seconds\n\n\nperformer\nString\nOptional\nPerformer\n\n\ntitle\nString\nOptional\nTrack name\n\n\nthumbnail\nInputFile or String\nOptional\nThumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass âattach://<file_attach_name>â if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More information on Sending Files Â»\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nsendDocument\nUse this method to send general files. On success, the sent Message is returned. Bots can currently send files of any type of up to 50 MB in size, this limit may be changed in the future.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\ndocument\nInputFile or String\nYes\nFile to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. More information on Sending Files Â»\n\n\nthumbnail\nInputFile or String\nOptional\nThumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass âattach://<file_attach_name>â if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More information on Sending Files Â»\n\n\ncaption\nString\nOptional\nDocument caption (may also be used when resending documents by file_id), 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional\nMode for parsing entities in the document caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\ndisable_content_type_detection\nBoolean\nOptional\nDisables automatic server-side content type detection for files uploaded using multipart/form-data\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nsendVideo\nUse this method to send video files, Telegram clients support MPEG4 videos (other formats may be sent as Document). On success, the sent Message is returned. Bots can currently send video files of up to 50 MB in size, this limit may be changed in the future.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nvideo\nInputFile or String\nYes\nVideo to send. Pass a file_id as String to send a video that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a video from the Internet, or upload a new video using multipart/form-data. More information on Sending Files Â»\n\n\nduration\nInteger\nOptional\nDuration of sent video in seconds\n\n\nwidth\nInteger\nOptional\nVideo width\n\n\nheight\nInteger\nOptional\nVideo height\n\n\nthumbnail\nInputFile or String\nOptional\nThumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass âattach://<file_attach_name>â if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More information on Sending Files Â»\n\n\ncaption\nString\nOptional\nVideo caption (may also be used when resending videos by file_id), 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional\nMode for parsing entities in the video caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional\nPass True, if the caption must be shown above the message media\n\n\nhas_spoiler\nBoolean\nOptional\nPass True if the video needs to be covered with a spoiler animation\n\n\nsupports_streaming\nBoolean\nOptional\nPass True if the uploaded video is suitable for streaming\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nsendAnimation\nUse this method to send animation files (GIF or H.264/MPEG-4 AVC video without sound). On success, the sent Message is returned. Bots can currently send animation files of up to 50 MB in size, this limit may be changed in the future.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nanimation\nInputFile or String\nYes\nAnimation to send. Pass a file_id as String to send an animation that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get an animation from the Internet, or upload a new animation using multipart/form-data. More information on Sending Files Â»\n\n\nduration\nInteger\nOptional\nDuration of sent animation in seconds\n\n\nwidth\nInteger\nOptional\nAnimation width\n\n\nheight\nInteger\nOptional\nAnimation height\n\n\nthumbnail\nInputFile or String\nOptional\nThumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass âattach://<file_attach_name>â if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More information on Sending Files Â»\n\n\ncaption\nString\nOptional\nAnimation caption (may also be used when resending animation by file_id), 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional\nMode for parsing entities in the animation caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional\nPass True, if the caption must be shown above the message media\n\n\nhas_spoiler\nBoolean\nOptional\nPass True if the animation needs to be covered with a spoiler animation\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nsendVoice\nUse this method to send audio files, if you want Telegram clients to display the file as a playable voice message. For this to work, your audio must be in an .OGG file encoded with OPUS, or in .MP3 format, or in .M4A format (other formats may be sent as Audio or Document). On success, the sent Message is returned. Bots can currently send voice messages of up to 50 MB in size, this limit may be changed in the future.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nvoice\nInputFile or String\nYes\nAudio file to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. More information on Sending Files Â»\n\n\ncaption\nString\nOptional\nVoice message caption, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional\nMode for parsing entities in the voice message caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nduration\nInteger\nOptional\nDuration of the voice message in seconds\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nsendVideoNote\nAs of v.4.0, Telegram clients support rounded square MPEG4 videos of up to 1 minute long. Use this method to send video messages. On success, the sent Message is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nvideo_note\nInputFile or String\nYes\nVideo note to send. Pass a file_id as String to send a video note that exists on the Telegram servers (recommended) or upload a new video using multipart/form-data. More information on Sending Files Â». Sending video notes by a URL is currently unsupported\n\n\nduration\nInteger\nOptional\nDuration of sent video in seconds\n\n\nlength\nInteger\nOptional\nVideo width and height, i.e. diameter of the video message\n\n\nthumbnail\nInputFile or String\nOptional\nThumbnail of the file sent; can be ignored if thumbnail generation for the file is supported server-side. The thumbnail should be in JPEG format and less than 200 kB in size. A thumbnail's width and height should not exceed 320. Ignored if the file is not uploaded using multipart/form-data. Thumbnails can't be reused and can be only uploaded as a new file, so you can pass âattach://<file_attach_name>â if the thumbnail was uploaded using multipart/form-data under <file_attach_name>. More information on Sending Files Â»\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nsendPaidMedia\nUse this method to send paid media. On success, the sent Message is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername). If the chat is a channel, all Telegram Star proceeds from this media will be credited to the chat's balance. Otherwise, they will be credited to the bot's balance.\n\n\nstar_count\nInteger\nYes\nThe number of Telegram Stars that must be paid to buy access to the media; 1-2500\n\n\nmedia\nArray of InputPaidMedia\nYes\nA JSON-serialized array describing the media to be sent; up to 10 items\n\n\npayload\nString\nOptional\nBot-defined paid media payload, 0-128 bytes. This will not be displayed to the user, use it for your internal processes.\n\n\ncaption\nString\nOptional\nMedia caption, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional\nMode for parsing entities in the media caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional\nPass True, if the caption must be shown above the message media\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nsendMediaGroup\nUse this method to send a group of photos, videos, documents or audios as an album. Documents and audio files can be only grouped in an album with messages of the same type. On success, an array of Messages that were sent is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nmedia\nArray of InputMediaAudio, InputMediaDocument, InputMediaPhoto and InputMediaVideo\nYes\nA JSON-serialized array describing messages to be sent, must include 2-10 items\n\n\ndisable_notification\nBoolean\nOptional\nSends messages silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent messages from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\n\nsendLocation\nUse this method to send point on the map. On success, the sent Message is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nlatitude\nFloat\nYes\nLatitude of the location\n\n\nlongitude\nFloat\nYes\nLongitude of the location\n\n\nhorizontal_accuracy\nFloat\nOptional\nThe radius of uncertainty for the location, measured in meters; 0-1500\n\n\nlive_period\nInteger\nOptional\nPeriod in seconds during which the location will be updated (see Live Locations, should be between 60 and 86400, or 0x7FFFFFFF for live locations that can be edited indefinitely.\n\n\nheading\nInteger\nOptional\nFor live locations, a direction in which the user is moving, in degrees. Must be between 1 and 360 if specified.\n\n\nproximity_alert_radius\nInteger\nOptional\nFor live locations, a maximum distance for proximity alerts about approaching another chat member, in meters. Must be between 1 and 100000 if specified.\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nsendVenue\nUse this method to send information about a venue. On success, the sent Message is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nlatitude\nFloat\nYes\nLatitude of the venue\n\n\nlongitude\nFloat\nYes\nLongitude of the venue\n\n\ntitle\nString\nYes\nName of the venue\n\n\naddress\nString\nYes\nAddress of the venue\n\n\nfoursquare_id\nString\nOptional\nFoursquare identifier of the venue\n\n\nfoursquare_type\nString\nOptional\nFoursquare type of the venue, if known. (For example, âarts_entertainment/defaultâ, âarts_entertainment/aquariumâ or âfood/icecreamâ.)\n\n\ngoogle_place_id\nString\nOptional\nGoogle Places identifier of the venue\n\n\ngoogle_place_type\nString\nOptional\nGoogle Places type of the venue. (See supported types.)\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nsendContact\nUse this method to send phone contacts. On success, the sent Message is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nphone_number\nString\nYes\nContact's phone number\n\n\nfirst_name\nString\nYes\nContact's first name\n\n\nlast_name\nString\nOptional\nContact's last name\n\n\nvcard\nString\nOptional\nAdditional data about the contact in the form of a vCard, 0-2048 bytes\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nsendPoll\nUse this method to send a native poll. On success, the sent Message is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nquestion\nString\nYes\nPoll question, 1-300 characters\n\n\nquestion_parse_mode\nString\nOptional\nMode for parsing entities in the question. See formatting options for more details. Currently, only custom emoji entities are allowed\n\n\nquestion_entities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in the poll question. It can be specified instead of question_parse_mode\n\n\noptions\nArray of InputPollOption\nYes\nA JSON-serialized list of 2-10 answer options\n\n\nis_anonymous\nBoolean\nOptional\nTrue, if the poll needs to be anonymous, defaults to True\n\n\ntype\nString\nOptional\nPoll type, âquizâ or âregularâ, defaults to âregularâ\n\n\nallows_multiple_answers\nBoolean\nOptional\nTrue, if the poll allows multiple answers, ignored for polls in quiz mode, defaults to False\n\n\ncorrect_option_id\nInteger\nOptional\n0-based identifier of the correct answer option, required for polls in quiz mode\n\n\nexplanation\nString\nOptional\nText that is shown when a user chooses an incorrect answer or taps on the lamp icon in a quiz-style poll, 0-200 characters with at most 2 line feeds after entities parsing\n\n\nexplanation_parse_mode\nString\nOptional\nMode for parsing entities in the explanation. See formatting options for more details.\n\n\nexplanation_entities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in the poll explanation. It can be specified instead of explanation_parse_mode\n\n\nopen_period\nInteger\nOptional\nAmount of time in seconds the poll will be active after creation, 5-600. Can't be used together with close_date.\n\n\nclose_date\nInteger\nOptional\nPoint in time (Unix timestamp) when the poll will be automatically closed. Must be at least 5 and no more than 600 seconds in the future. Can't be used together with open_period.\n\n\nis_closed\nBoolean\nOptional\nPass True if the poll needs to be immediately closed. This can be useful for poll preview.\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nsendDice\nUse this method to send an animated emoji that will display a random value. On success, the sent Message is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nemoji\nString\nOptional\nEmoji on which the dice throw animation is based. Currently, must be one of ââ, ââ, ââ, ââ, ââ, or ââ. Dice can have values 1-6 for ââ, ââ and ââ, values 1-5 for ââ and ââ, and values 1-64 for ââ. Defaults to ââ\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\nsendChatAction\nUse this method when you need to tell the user that something is happening on the bot's side. The status is set for 5 seconds or less (when a message arrives from your bot, Telegram clients clear its typing status). Returns True on success.\n\nExample: The ImageBot needs some time to process a request and upload the image. Instead of sending a text message along the lines of âRetrieving image, please waitâ¦â, the bot may use sendChatAction with action = upload_photo. The user will see a âsending photoâ status for the bot.\n\nWe only recommend using this method when a response from the bot will take a noticeable amount of time to arrive.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the action will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread; for supergroups only\n\n\naction\nString\nYes\nType of action to broadcast. Choose one, depending on what the user is about to receive: typing for text messages, upload_photo for photos, record_video or upload_video for videos, record_voice or upload_voice for voice notes, upload_document for general files, choose_sticker for stickers, find_location for location data, record_video_note or upload_video_note for video notes.\n\n\n\nsetMessageReaction\nUse this method to change the chosen reactions on a message. Service messages can't be reacted to. Automatically forwarded messages from a channel to its discussion group have the same available reactions as messages in the channel. Bots can't use paid reactions. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_id\nInteger\nYes\nIdentifier of the target message. If the message belongs to a media group, the reaction is set to the first non-deleted message in the group instead.\n\n\nreaction\nArray of ReactionType\nOptional\nA JSON-serialized list of reaction types to set on the message. Currently, as non-premium users, bots can set up to one reaction per message. A custom emoji reaction can be used if it is either already present on the message or explicitly allowed by chat administrators. Paid reactions can't be used by bots.\n\n\nis_big\nBoolean\nOptional\nPass True to set the reaction with a big animation\n\n\n\ngetUserProfilePhotos\nUse this method to get a list of profile pictures for a user. Returns a UserProfilePhotos object.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user\n\n\noffset\nInteger\nOptional\nSequential number of the first photo to be returned. By default, all photos are returned.\n\n\nlimit\nInteger\nOptional\nLimits the number of photos to be retrieved. Values between 1-100 are accepted. Defaults to 100.\n\n\n\nsetUserEmojiStatus\nChanges the emoji status for a given user that previously allowed the bot to manage their emoji status via the Mini App method requestEmojiStatusAccess. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user\n\n\nemoji_status_custom_emoji_id\nString\nOptional\nCustom emoji identifier of the emoji status to set. Pass an empty string to remove the status.\n\n\nemoji_status_expiration_date\nInteger\nOptional\nExpiration date of the emoji status, if any\n\n\n\ngetFile\nUse this method to get basic information about a file and prepare it for downloading. For the moment, bots can download files of up to 20MB in size. On success, a File object is returned. The file can then be downloaded via the link https://api.telegram.org/file/bot<token>/<file_path>, where <file_path> is taken from the response. It is guaranteed that the link will be valid for at least 1 hour. When the link expires, a new one can be requested by calling getFile again.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nfile_id\nString\nYes\nFile identifier to get information about\n\n\n\nNote: This function may not preserve the original file name and MIME type. You should save the file's MIME type and name (if available) when the File object is received.\nbanChatMember\nUse this method to ban a user in a group, a supergroup or a channel. In the case of supergroups and channels, the user will not be able to return to the chat on their own using invite links, etc., unless unbanned first. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target group or username of the target supergroup or channel (in the format @channelusername)\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user\n\n\nuntil_date\nInteger\nOptional\nDate when the user will be unbanned; Unix time. If user is banned for more than 366 days or less than 30 seconds from the current time they are considered to be banned forever. Applied for supergroups and channels only.\n\n\nrevoke_messages\nBoolean\nOptional\nPass True to delete all messages from the chat for the user that is being removed. If False, the user will be able to see messages in the group that were sent before the user was removed. Always True for supergroups and channels.\n\n\n\nunbanChatMember\nUse this method to unban a previously banned user in a supergroup or channel. The user will not return to the group or channel automatically, but will be able to join via link, etc. The bot must be an administrator for this to work. By default, this method guarantees that after the call the user is not a member of the chat, but will be able to join it. So if the user is a member of the chat they will also be removed from the chat. If you don't want this, use the parameter only_if_banned. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target group or username of the target supergroup or channel (in the format @channelusername)\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user\n\n\nonly_if_banned\nBoolean\nOptional\nDo nothing if the user is not banned\n\n\n\nrestrictChatMember\nUse this method to restrict a user in a supergroup. The bot must be an administrator in the supergroup for this to work and must have the appropriate administrator rights. Pass True for all permissions to lift restrictions from a user. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user\n\n\npermissions\nChatPermissions\nYes\nA JSON-serialized object for new user permissions\n\n\nuse_independent_chat_permissions\nBoolean\nOptional\nPass True if chat permissions are set independently. Otherwise, the can_send_other_messages and can_add_web_page_previews permissions will imply the can_send_messages, can_send_audios, can_send_documents, can_send_photos, can_send_videos, can_send_video_notes, and can_send_voice_notes permissions; the can_send_polls permission will imply the can_send_messages permission.\n\n\nuntil_date\nInteger\nOptional\nDate when restrictions will be lifted for the user; Unix time. If user is restricted for more than 366 days or less than 30 seconds from the current time, they are considered to be restricted forever\n\n\n\npromoteChatMember\nUse this method to promote or demote a user in a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Pass False for all boolean parameters to demote a user. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user\n\n\nis_anonymous\nBoolean\nOptional\nPass True if the administrator's presence in the chat is hidden\n\n\ncan_manage_chat\nBoolean\nOptional\nPass True if the administrator can access the chat event log, get boost list, see hidden supergroup and channel members, report spam messages and ignore slow mode. Implied by any other administrator privilege.\n\n\ncan_delete_messages\nBoolean\nOptional\nPass True if the administrator can delete messages of other users\n\n\ncan_manage_video_chats\nBoolean\nOptional\nPass True if the administrator can manage video chats\n\n\ncan_restrict_members\nBoolean\nOptional\nPass True if the administrator can restrict, ban or unban chat members, or access supergroup statistics\n\n\ncan_promote_members\nBoolean\nOptional\nPass True if the administrator can add new administrators with a subset of their own privileges or demote administrators that they have promoted, directly or indirectly (promoted by administrators that were appointed by him)\n\n\ncan_change_info\nBoolean\nOptional\nPass True if the administrator can change chat title, photo and other settings\n\n\ncan_invite_users\nBoolean\nOptional\nPass True if the administrator can invite new users to the chat\n\n\ncan_post_stories\nBoolean\nOptional\nPass True if the administrator can post stories to the chat\n\n\ncan_edit_stories\nBoolean\nOptional\nPass True if the administrator can edit stories posted by other users, post stories to the chat page, pin chat stories, and access the chat's story archive\n\n\ncan_delete_stories\nBoolean\nOptional\nPass True if the administrator can delete stories posted by other users\n\n\ncan_post_messages\nBoolean\nOptional\nPass True if the administrator can post messages in the channel, or access channel statistics; for channels only\n\n\ncan_edit_messages\nBoolean\nOptional\nPass True if the administrator can edit messages of other users and can pin messages; for channels only\n\n\ncan_pin_messages\nBoolean\nOptional\nPass True if the administrator can pin messages; for supergroups only\n\n\ncan_manage_topics\nBoolean\nOptional\nPass True if the user is allowed to create, rename, close, and reopen forum topics; for supergroups only\n\n\n\nsetChatAdministratorCustomTitle\nUse this method to set a custom title for an administrator in a supergroup promoted by the bot. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user\n\n\ncustom_title\nString\nYes\nNew custom title for the administrator; 0-16 characters, emoji are not allowed\n\n\n\nbanChatSenderChat\nUse this method to ban a channel chat in a supergroup or a channel. Until the chat is unbanned, the owner of the banned chat won't be able to send messages on behalf of any of their channels. The bot must be an administrator in the supergroup or channel for this to work and must have the appropriate administrator rights. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nsender_chat_id\nInteger\nYes\nUnique identifier of the target sender chat\n\n\n\nunbanChatSenderChat\nUse this method to unban a previously banned channel chat in a supergroup or channel. The bot must be an administrator for this to work and must have the appropriate administrator rights. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nsender_chat_id\nInteger\nYes\nUnique identifier of the target sender chat\n\n\n\nsetChatPermissions\nUse this method to set default chat permissions for all members. The bot must be an administrator in the group or a supergroup for this to work and must have the can_restrict_members administrator rights. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\npermissions\nChatPermissions\nYes\nA JSON-serialized object for new default chat permissions\n\n\nuse_independent_chat_permissions\nBoolean\nOptional\nPass True if chat permissions are set independently. Otherwise, the can_send_other_messages and can_add_web_page_previews permissions will imply the can_send_messages, can_send_audios, can_send_documents, can_send_photos, can_send_videos, can_send_video_notes, and can_send_voice_notes permissions; the can_send_polls permission will imply the can_send_messages permission.\n\n\n\nexportChatInviteLink\nUse this method to generate a new primary invite link for a chat; any previously generated primary link is revoked. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns the new invite link as String on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\n\n\nNote: Each administrator in a chat generates their own invite links. Bots can't use invite links generated by other administrators. If you want your bot to work with invite links, it will need to generate its own link using exportChatInviteLink or by calling the getChat method. If your bot needs to generate a new primary invite link replacing its previous one, use exportChatInviteLink again.\n\ncreateChatInviteLink\nUse this method to create an additional invite link for a chat. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. The link can be revoked using the method revokeChatInviteLink. Returns the new invite link as ChatInviteLink object.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nname\nString\nOptional\nInvite link name; 0-32 characters\n\n\nexpire_date\nInteger\nOptional\nPoint in time (Unix timestamp) when the link will expire\n\n\nmember_limit\nInteger\nOptional\nThe maximum number of users that can be members of the chat simultaneously after joining the chat via this invite link; 1-99999\n\n\ncreates_join_request\nBoolean\nOptional\nTrue, if users joining the chat via the link need to be approved by chat administrators. If True, member_limit can't be specified\n\n\n\neditChatInviteLink\nUse this method to edit a non-primary invite link created by the bot. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns the edited invite link as a ChatInviteLink object.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\ninvite_link\nString\nYes\nThe invite link to edit\n\n\nname\nString\nOptional\nInvite link name; 0-32 characters\n\n\nexpire_date\nInteger\nOptional\nPoint in time (Unix timestamp) when the link will expire\n\n\nmember_limit\nInteger\nOptional\nThe maximum number of users that can be members of the chat simultaneously after joining the chat via this invite link; 1-99999\n\n\ncreates_join_request\nBoolean\nOptional\nTrue, if users joining the chat via the link need to be approved by chat administrators. If True, member_limit can't be specified\n\n\n\ncreateChatSubscriptionInviteLink\nUse this method to create a subscription invite link for a channel chat. The bot must have the can_invite_users administrator rights. The link can be edited using the method editChatSubscriptionInviteLink or revoked using the method revokeChatInviteLink. Returns the new invite link as a ChatInviteLink object.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target channel chat or username of the target channel (in the format @channelusername)\n\n\nname\nString\nOptional\nInvite link name; 0-32 characters\n\n\nsubscription_period\nInteger\nYes\nThe number of seconds the subscription will be active for before the next payment. Currently, it must always be 2592000 (30 days).\n\n\nsubscription_price\nInteger\nYes\nThe amount of Telegram Stars a user must pay initially and after each subsequent subscription period to be a member of the chat; 1-2500\n\n\n\neditChatSubscriptionInviteLink\nUse this method to edit a subscription invite link created by the bot. The bot must have the can_invite_users administrator rights. Returns the edited invite link as a ChatInviteLink object.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\ninvite_link\nString\nYes\nThe invite link to edit\n\n\nname\nString\nOptional\nInvite link name; 0-32 characters\n\n\n\nrevokeChatInviteLink\nUse this method to revoke an invite link created by the bot. If the primary link is revoked, a new link is automatically generated. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns the revoked invite link as ChatInviteLink object.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier of the target chat or username of the target channel (in the format @channelusername)\n\n\ninvite_link\nString\nYes\nThe invite link to revoke\n\n\n\napproveChatJoinRequest\nUse this method to approve a chat join request. The bot must be an administrator in the chat for this to work and must have the can_invite_users administrator right. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user\n\n\n\ndeclineChatJoinRequest\nUse this method to decline a chat join request. The bot must be an administrator in the chat for this to work and must have the can_invite_users administrator right. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user\n\n\n\nsetChatPhoto\nUse this method to set a new profile photo for the chat. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nphoto\nInputFile\nYes\nNew chat photo, uploaded using multipart/form-data\n\n\n\ndeleteChatPhoto\nUse this method to delete a chat photo. Photos can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\n\nsetChatTitle\nUse this method to change the title of a chat. Titles can't be changed for private chats. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\ntitle\nString\nYes\nNew chat title, 1-128 characters\n\n\n\nsetChatDescription\nUse this method to change the description of a group, a supergroup or a channel. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\ndescription\nString\nOptional\nNew chat description, 0-255 characters\n\n\n\npinChatMessage\nUse this method to add a message to the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can_pin_messages' administrator right in a supergroup or 'can_edit_messages' administrator right in a channel. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be pinned\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_id\nInteger\nYes\nIdentifier of a message to pin\n\n\ndisable_notification\nBoolean\nOptional\nPass True if it is not necessary to send a notification to all chat members about the new pinned message. Notifications are always disabled in channels and private chats.\n\n\n\nunpinChatMessage\nUse this method to remove a message from the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can_pin_messages' administrator right in a supergroup or 'can_edit_messages' administrator right in a channel. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be unpinned\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_id\nInteger\nOptional\nIdentifier of the message to unpin. Required if business_connection_id is specified. If not specified, the most recent pinned message (by sending date) will be unpinned.\n\n\n\nunpinAllChatMessages\nUse this method to clear the list of pinned messages in a chat. If the chat is not a private chat, the bot must be an administrator in the chat for this to work and must have the 'can_pin_messages' administrator right in a supergroup or 'can_edit_messages' administrator right in a channel. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\n\nleaveChat\nUse this method for your bot to leave a group, supergroup or channel. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)\n\n\n\ngetChat\nUse this method to get up-to-date information about the chat. Returns a ChatFullInfo object on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)\n\n\n\ngetChatAdministrators\nUse this method to get a list of administrators in a chat, which aren't bots. Returns an Array of ChatMember objects.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)\n\n\n\ngetChatMemberCount\nUse this method to get the number of members in a chat. Returns Int on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)\n\n\n\ngetChatMember\nUse this method to get information about a member of a chat. The method is only guaranteed to work for other users if the bot is an administrator in the chat. Returns a ChatMember object on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup or channel (in the format @channelusername)\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user\n\n\n\nsetChatStickerSet\nUse this method to set a new group sticker set for a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Use the field can_set_sticker_set optionally returned in getChat requests to check if the bot can use this method. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\nsticker_set_name\nString\nYes\nName of the sticker set to be set as the group sticker set\n\n\n\ndeleteChatStickerSet\nUse this method to delete a group sticker set from a supergroup. The bot must be an administrator in the chat for this to work and must have the appropriate administrator rights. Use the field can_set_sticker_set optionally returned in getChat requests to check if the bot can use this method. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\n\ngetForumTopicIconStickers\nUse this method to get custom emoji stickers, which can be used as a forum topic icon by any user. Requires no parameters. Returns an Array of Sticker objects.\ncreateForumTopic\nUse this method to create a topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. Returns information about the created topic as a ForumTopic object.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\nname\nString\nYes\nTopic name, 1-128 characters\n\n\nicon_color\nInteger\nOptional\nColor of the topic icon in RGB format. Currently, must be one of 7322096 (0x6FB9F0), 16766590 (0xFFD67E), 13338331 (0xCB86DB), 9367192 (0x8EEE98), 16749490 (0xFF93B2), or 16478047 (0xFB6F5F)\n\n\nicon_custom_emoji_id\nString\nOptional\nUnique identifier of the custom emoji shown as the topic icon. Use getForumTopicIconStickers to get all allowed custom emoji identifiers.\n\n\n\neditForumTopic\nUse this method to edit name and icon of a topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights, unless it is the creator of the topic. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\nmessage_thread_id\nInteger\nYes\nUnique identifier for the target message thread of the forum topic\n\n\nname\nString\nOptional\nNew topic name, 0-128 characters. If not specified or empty, the current name of the topic will be kept\n\n\nicon_custom_emoji_id\nString\nOptional\nNew unique identifier of the custom emoji shown as the topic icon. Use getForumTopicIconStickers to get all allowed custom emoji identifiers. Pass an empty string to remove the icon. If not specified, the current icon will be kept\n\n\n\ncloseForumTopic\nUse this method to close an open topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights, unless it is the creator of the topic. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\nmessage_thread_id\nInteger\nYes\nUnique identifier for the target message thread of the forum topic\n\n\n\nreopenForumTopic\nUse this method to reopen a closed topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights, unless it is the creator of the topic. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\nmessage_thread_id\nInteger\nYes\nUnique identifier for the target message thread of the forum topic\n\n\n\ndeleteForumTopic\nUse this method to delete a forum topic along with all its messages in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_delete_messages administrator rights. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\nmessage_thread_id\nInteger\nYes\nUnique identifier for the target message thread of the forum topic\n\n\n\nunpinAllForumTopicMessages\nUse this method to clear the list of pinned messages in a forum topic. The bot must be an administrator in the chat for this to work and must have the can_pin_messages administrator right in the supergroup. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\nmessage_thread_id\nInteger\nYes\nUnique identifier for the target message thread of the forum topic\n\n\n\neditGeneralForumTopic\nUse this method to edit the name of the 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\nname\nString\nYes\nNew topic name, 1-128 characters\n\n\n\ncloseGeneralForumTopic\nUse this method to close an open 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\n\nreopenGeneralForumTopic\nUse this method to reopen a closed 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. The topic will be automatically unhidden if it was hidden. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\n\nhideGeneralForumTopic\nUse this method to hide the 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. The topic will be automatically closed if it was open. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\n\nunhideGeneralForumTopic\nUse this method to unhide the 'General' topic in a forum supergroup chat. The bot must be an administrator in the chat for this to work and must have the can_manage_topics administrator rights. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\n\nunpinAllGeneralForumTopicMessages\nUse this method to clear the list of pinned messages in a General forum topic. The bot must be an administrator in the chat for this to work and must have the can_pin_messages administrator right in the supergroup. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target supergroup (in the format @supergroupusername)\n\n\n\nanswerCallbackQuery\nUse this method to send answers to callback queries sent from inline keyboards. The answer will be displayed to the user as a notification at the top of the chat screen or as an alert. On success, True is returned.\n\nAlternatively, the user can be redirected to the specified Game URL. For this option to work, you must first create a game for your bot via @BotFather and accept the terms. Otherwise, you may use links like t.me/your_bot?start=XXXX that open your bot with a parameter.\n\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\ncallback_query_id\nString\nYes\nUnique identifier for the query to be answered\n\n\ntext\nString\nOptional\nText of the notification. If not specified, nothing will be shown to the user, 0-200 characters\n\n\nshow_alert\nBoolean\nOptional\nIf True, an alert will be shown by the client instead of a notification at the top of the chat screen. Defaults to false.\n\n\nurl\nString\nOptional\nURL that will be opened by the user's client. If you have created a Game and accepted the conditions via @BotFather, specify the URL that opens your game - note that this will only work if the query comes from a callback_game button.Otherwise, you may use links like t.me/your_bot?start=XXXX that open your bot with a parameter.\n\n\ncache_time\nInteger\nOptional\nThe maximum amount of time in seconds that the result of the callback query may be cached client-side. Telegram apps will support caching starting in version 3.14. Defaults to 0.\n\n\n\ngetUserChatBoosts\nUse this method to get the list of boosts added to a chat by a user. Requires administrator rights in the chat. Returns a UserChatBoosts object.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the chat or username of the channel (in the format @channelusername)\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user\n\n\n\ngetBusinessConnection\nUse this method to get information about the connection of the bot with a business account. Returns a BusinessConnection object on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nYes\nUnique identifier of the business connection\n\n\n\nsetMyCommands\nUse this method to change the list of the bot's commands. See this manual for more details about bot commands. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\ncommands\nArray of BotCommand\nYes\nA JSON-serialized list of bot commands to be set as the list of the bot's commands. At most 100 commands can be specified.\n\n\nscope\nBotCommandScope\nOptional\nA JSON-serialized object, describing scope of users for which the commands are relevant. Defaults to BotCommandScopeDefault.\n\n\nlanguage_code\nString\nOptional\nA two-letter ISO 639-1 language code. If empty, commands will be applied to all users from the given scope, for whose language there are no dedicated commands\n\n\n\ndeleteMyCommands\nUse this method to delete the list of the bot's commands for the given scope and user language. After deletion, higher level commands will be shown to affected users. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nscope\nBotCommandScope\nOptional\nA JSON-serialized object, describing scope of users for which the commands are relevant. Defaults to BotCommandScopeDefault.\n\n\nlanguage_code\nString\nOptional\nA two-letter ISO 639-1 language code. If empty, commands will be applied to all users from the given scope, for whose language there are no dedicated commands\n\n\n\ngetMyCommands\nUse this method to get the current list of the bot's commands for the given scope and user language. Returns an Array of BotCommand objects. If commands aren't set, an empty list is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nscope\nBotCommandScope\nOptional\nA JSON-serialized object, describing scope of users. Defaults to BotCommandScopeDefault.\n\n\nlanguage_code\nString\nOptional\nA two-letter ISO 639-1 language code or an empty string\n\n\n\nsetMyName\nUse this method to change the bot's name. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nname\nString\nOptional\nNew bot name; 0-64 characters. Pass an empty string to remove the dedicated name for the given language.\n\n\nlanguage_code\nString\nOptional\nA two-letter ISO 639-1 language code. If empty, the name will be shown to all users for whose language there is no dedicated name.\n\n\n\ngetMyName\nUse this method to get the current bot name for the given user language. Returns BotName on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nlanguage_code\nString\nOptional\nA two-letter ISO 639-1 language code or an empty string\n\n\n\nsetMyDescription\nUse this method to change the bot's description, which is shown in the chat with the bot if the chat is empty. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\ndescription\nString\nOptional\nNew bot description; 0-512 characters. Pass an empty string to remove the dedicated description for the given language.\n\n\nlanguage_code\nString\nOptional\nA two-letter ISO 639-1 language code. If empty, the description will be applied to all users for whose language there is no dedicated description.\n\n\n\ngetMyDescription\nUse this method to get the current bot description for the given user language. Returns BotDescription on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nlanguage_code\nString\nOptional\nA two-letter ISO 639-1 language code or an empty string\n\n\n\nsetMyShortDescription\nUse this method to change the bot's short description, which is shown on the bot's profile page and is sent together with the link when users share the bot. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nshort_description\nString\nOptional\nNew short description for the bot; 0-120 characters. Pass an empty string to remove the dedicated short description for the given language.\n\n\nlanguage_code\nString\nOptional\nA two-letter ISO 639-1 language code. If empty, the short description will be applied to all users for whose language there is no dedicated short description.\n\n\n\ngetMyShortDescription\nUse this method to get the current bot short description for the given user language. Returns BotShortDescription on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nlanguage_code\nString\nOptional\nA two-letter ISO 639-1 language code or an empty string\n\n\n\nsetChatMenuButton\nUse this method to change the bot's menu button in a private chat, or the default menu button. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger\nOptional\nUnique identifier for the target private chat. If not specified, default bot's menu button will be changed\n\n\nmenu_button\nMenuButton\nOptional\nA JSON-serialized object for the bot's new menu button. Defaults to MenuButtonDefault\n\n\n\ngetChatMenuButton\nUse this method to get the current value of the bot's menu button in a private chat, or the default menu button. Returns MenuButton on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger\nOptional\nUnique identifier for the target private chat. If not specified, default bot's menu button will be returned\n\n\n\nsetMyDefaultAdministratorRights\nUse this method to change the default administrator rights requested by the bot when it's added as an administrator to groups or channels. These rights will be suggested to users, but they are free to modify the list before adding the bot. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nrights\nChatAdministratorRights\nOptional\nA JSON-serialized object describing new default administrator rights. If not specified, the default administrator rights will be cleared.\n\n\nfor_channels\nBoolean\nOptional\nPass True to change the default administrator rights of the bot in channels. Otherwise, the default administrator rights of the bot for groups and supergroups will be changed.\n\n\n\ngetMyDefaultAdministratorRights\nUse this method to get the current default administrator rights of the bot. Returns ChatAdministratorRights on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nfor_channels\nBoolean\nOptional\nPass True to get default administrator rights of the bot in channels. Otherwise, default administrator rights of the bot for groups and supergroups will be returned.\n\n\n\nInline mode methods\nMethods and objects used in the inline mode are described in the Inline mode section.\nUpdating messages\nThe following methods allow you to change an existing message in the message history instead of sending a new one with a result of an action. This is most useful for messages with inline keyboards using callback queries, but can also help reduce clutter in conversations with regular chat bots.\nPlease note, that it is currently only possible to edit messages without reply_markup or with inline keyboards.\neditMessageText\nUse this method to edit text and game messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message to be edited was sent\n\n\nchat_id\nInteger or String\nOptional\nRequired if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_id\nInteger\nOptional\nRequired if inline_message_id is not specified. Identifier of the message to edit\n\n\ninline_message_id\nString\nOptional\nRequired if chat_id and message_id are not specified. Identifier of the inline message\n\n\ntext\nString\nYes\nNew text of the message, 1-4096 characters after entities parsing\n\n\nparse_mode\nString\nOptional\nMode for parsing entities in the message text. See formatting options for more details.\n\n\nentities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in message text, which can be specified instead of parse_mode\n\n\nlink_preview_options\nLinkPreviewOptions\nOptional\nLink preview generation options for the message\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional\nA JSON-serialized object for an inline keyboard.\n\n\n\neditMessageCaption\nUse this method to edit captions of messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message to be edited was sent\n\n\nchat_id\nInteger or String\nOptional\nRequired if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_id\nInteger\nOptional\nRequired if inline_message_id is not specified. Identifier of the message to edit\n\n\ninline_message_id\nString\nOptional\nRequired if chat_id and message_id are not specified. Identifier of the inline message\n\n\ncaption\nString\nOptional\nNew caption of the message, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional\nMode for parsing entities in the message caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional\nPass True, if the caption must be shown above the message media. Supported only for animation, photo and video messages.\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional\nA JSON-serialized object for an inline keyboard.\n\n\n\neditMessageMedia\nUse this method to edit animation, audio, document, photo, or video messages, or to add media to text messages. If a message is part of a message album, then it can be edited only to an audio for audio albums, only to a document for document albums and to a photo or a video otherwise. When an inline message is edited, a new file can't be uploaded; use a previously uploaded file via its file_id or specify a URL. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message to be edited was sent\n\n\nchat_id\nInteger or String\nOptional\nRequired if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_id\nInteger\nOptional\nRequired if inline_message_id is not specified. Identifier of the message to edit\n\n\ninline_message_id\nString\nOptional\nRequired if chat_id and message_id are not specified. Identifier of the inline message\n\n\nmedia\nInputMedia\nYes\nA JSON-serialized object for a new media content of the message\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional\nA JSON-serialized object for a new inline keyboard.\n\n\n\neditMessageLiveLocation\nUse this method to edit live location messages. A location can be edited until its live_period expires or editing is explicitly disabled by a call to stopMessageLiveLocation. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message to be edited was sent\n\n\nchat_id\nInteger or String\nOptional\nRequired if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_id\nInteger\nOptional\nRequired if inline_message_id is not specified. Identifier of the message to edit\n\n\ninline_message_id\nString\nOptional\nRequired if chat_id and message_id are not specified. Identifier of the inline message\n\n\nlatitude\nFloat\nYes\nLatitude of new location\n\n\nlongitude\nFloat\nYes\nLongitude of new location\n\n\nlive_period\nInteger\nOptional\nNew period in seconds during which the location can be updated, starting from the message send date. If 0x7FFFFFFF is specified, then the location can be updated forever. Otherwise, the new value must not exceed the current live_period by more than a day, and the live location expiration date must remain within the next 90 days. If not specified, then live_period remains unchanged\n\n\nhorizontal_accuracy\nFloat\nOptional\nThe radius of uncertainty for the location, measured in meters; 0-1500\n\n\nheading\nInteger\nOptional\nDirection in which the user is moving, in degrees. Must be between 1 and 360 if specified.\n\n\nproximity_alert_radius\nInteger\nOptional\nThe maximum distance for proximity alerts about approaching another chat member, in meters. Must be between 1 and 100000 if specified.\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional\nA JSON-serialized object for a new inline keyboard.\n\n\n\nstopMessageLiveLocation\nUse this method to stop updating a live location message before live_period expires. On success, if the message is not an inline message, the edited Message is returned, otherwise True is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message to be edited was sent\n\n\nchat_id\nInteger or String\nOptional\nRequired if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_id\nInteger\nOptional\nRequired if inline_message_id is not specified. Identifier of the message with live location to stop\n\n\ninline_message_id\nString\nOptional\nRequired if chat_id and message_id are not specified. Identifier of the inline message\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional\nA JSON-serialized object for a new inline keyboard.\n\n\n\neditMessageReplyMarkup\nUse this method to edit only the reply markup of messages. On success, if the edited message is not an inline message, the edited Message is returned, otherwise True is returned. Note that business messages that were not sent by the bot and do not contain an inline keyboard can only be edited within 48 hours from the time they were sent.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message to be edited was sent\n\n\nchat_id\nInteger or String\nOptional\nRequired if inline_message_id is not specified. Unique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_id\nInteger\nOptional\nRequired if inline_message_id is not specified. Identifier of the message to edit\n\n\ninline_message_id\nString\nOptional\nRequired if chat_id and message_id are not specified. Identifier of the inline message\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional\nA JSON-serialized object for an inline keyboard.\n\n\n\nstopPoll\nUse this method to stop a poll which was sent by the bot. On success, the stopped Poll is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message to be edited was sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_id\nInteger\nYes\nIdentifier of the original message with the poll\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional\nA JSON-serialized object for a new message inline keyboard.\n\n\n\ndeleteMessage\nUse this method to delete a message, including service messages, with the following limitations:- A message can only be deleted if it was sent less than 48 hours ago.- Service messages about a supergroup, channel, or forum topic creation can't be deleted.- A dice message in a private chat can only be deleted if it was sent more than 24 hours ago.- Bots can delete outgoing messages in private chats, groups, and supergroups.- Bots can delete incoming messages in private chats.- Bots granted can_post_messages permissions can delete outgoing messages in channels.- If the bot is an administrator of a group, it can delete any message there.- If the bot has can_delete_messages permission in a supergroup or a channel, it can delete any message there.Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_id\nInteger\nYes\nIdentifier of the message to delete\n\n\n\ndeleteMessages\nUse this method to delete multiple messages simultaneously. If some of the specified messages can't be found, they are skipped. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_ids\nArray of Integer\nYes\nA JSON-serialized list of 1-100 identifiers of messages to delete. See deleteMessage for limitations on which messages can be deleted\n\n\n\nStickers\nThe following methods and objects allow your bot to handle stickers and sticker sets.\nSticker\nThis object represents a sticker.\n\n\n\nField\nType\nDescription\n\n\n\n\nfile_id\nString\nIdentifier for this file, which can be used to download or reuse the file\n\n\nfile_unique_id\nString\nUnique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.\n\n\ntype\nString\nType of the sticker, currently one of âregularâ, âmaskâ, âcustom_emojiâ. The type of the sticker is independent from its format, which is determined by the fields is_animated and is_video.\n\n\nwidth\nInteger\nSticker width\n\n\nheight\nInteger\nSticker height\n\n\nis_animated\nBoolean\nTrue, if the sticker is animated\n\n\nis_video\nBoolean\nTrue, if the sticker is a video sticker\n\n\nthumbnail\nPhotoSize\nOptional. Sticker thumbnail in the .WEBP or .JPG format\n\n\nemoji\nString\nOptional. Emoji associated with the sticker\n\n\nset_name\nString\nOptional. Name of the sticker set to which the sticker belongs\n\n\npremium_animation\nFile\nOptional. For premium regular stickers, premium animation for the sticker\n\n\nmask_position\nMaskPosition\nOptional. For mask stickers, the position where the mask should be placed\n\n\ncustom_emoji_id\nString\nOptional. For custom emoji stickers, unique identifier of the custom emoji\n\n\nneeds_repainting\nTrue\nOptional. True, if the sticker must be repainted to a text color in messages, the color of the Telegram Premium badge in emoji status, white color on chat photos, or another appropriate color in other places\n\n\nfile_size\nInteger\nOptional. File size in bytes\n\n\n\nStickerSet\nThis object represents a sticker set.\n\n\n\nField\nType\nDescription\n\n\n\n\nname\nString\nSticker set name\n\n\ntitle\nString\nSticker set title\n\n\nsticker_type\nString\nType of stickers in the set, currently one of âregularâ, âmaskâ, âcustom_emojiâ\n\n\nstickers\nArray of Sticker\nList of all set stickers\n\n\nthumbnail\nPhotoSize\nOptional. Sticker set thumbnail in the .WEBP, .TGS, or .WEBM format\n\n\n\nMaskPosition\nThis object describes the position on faces where a mask should be placed by default.\n\n\n\nField\nType\nDescription\n\n\n\n\npoint\nString\nThe part of the face relative to which the mask should be placed. One of âforeheadâ, âeyesâ, âmouthâ, or âchinâ.\n\n\nx_shift\nFloat\nShift by X-axis measured in widths of the mask scaled to the face size, from left to right. For example, choosing -1.0 will place mask just to the left of the default mask position.\n\n\ny_shift\nFloat\nShift by Y-axis measured in heights of the mask scaled to the face size, from top to bottom. For example, 1.0 will place the mask just below the default mask position.\n\n\nscale\nFloat\nMask scaling coefficient. For example, 2.0 means double size.\n\n\n\nInputSticker\nThis object describes a sticker to be added to a sticker set.\n\n\n\nField\nType\nDescription\n\n\n\n\nsticker\nInputFile or String\nThe added sticker. Pass a file_id as a String to send a file that already exists on the Telegram servers, pass an HTTP URL as a String for Telegram to get a file from the Internet, upload a new one using multipart/form-data, or pass âattach://<file_attach_name>â to upload a new one using multipart/form-data under <file_attach_name> name. Animated and video stickers can't be uploaded via HTTP URL. More information on Sending Files Â»\n\n\nformat\nString\nFormat of the added sticker, must be one of âstaticâ for a .WEBP or .PNG image, âanimatedâ for a .TGS animation, âvideoâ for a .WEBM video\n\n\nemoji_list\nArray of String\nList of 1-20 emoji associated with the sticker\n\n\nmask_position\nMaskPosition\nOptional. Position where the mask should be placed on faces. For âmaskâ stickers only.\n\n\nkeywords\nArray of String\nOptional. List of 0-20 search keywords for the sticker with total length of up to 64 characters. For âregularâ and âcustom_emojiâ stickers only.\n\n\n\nsendSticker\nUse this method to send static .WEBP, animated .TGS, or video .WEBM stickers. On success, the sent Message is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\nsticker\nInputFile or String\nYes\nSticker to send. Pass a file_id as String to send a file that exists on the Telegram servers (recommended), pass an HTTP URL as a String for Telegram to get a .WEBP sticker from the Internet, or upload a new .WEBP, .TGS, or .WEBM sticker using multipart/form-data. More information on Sending Files Â». Video and animated stickers can't be sent via an HTTP URL.\n\n\nemoji\nString\nOptional\nEmoji associated with the sticker; only for just uploaded stickers\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup or ReplyKeyboardMarkup or ReplyKeyboardRemove or ForceReply\nOptional\nAdditional interface options. A JSON-serialized object for an inline keyboard, custom reply keyboard, instructions to remove a reply keyboard or to force a reply from the user\n\n\n\ngetStickerSet\nUse this method to get a sticker set. On success, a StickerSet object is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nname\nString\nYes\nName of the sticker set\n\n\n\ngetCustomEmojiStickers\nUse this method to get information about custom emoji stickers by their identifiers. Returns an Array of Sticker objects.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\ncustom_emoji_ids\nArray of String\nYes\nA JSON-serialized list of custom emoji identifiers. At most 200 custom emoji identifiers can be specified.\n\n\n\nuploadStickerFile\nUse this method to upload a file with a sticker for later use in the createNewStickerSet, addStickerToSet, or replaceStickerInSet methods (the file can be used multiple times). Returns the uploaded File on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nUser identifier of sticker file owner\n\n\nsticker\nInputFile\nYes\nA file with the sticker in .WEBP, .PNG, .TGS, or .WEBM format. See https://core.telegram.org/stickers for technical requirements. More information on Sending Files Â»\n\n\nsticker_format\nString\nYes\nFormat of the sticker, must be one of âstaticâ, âanimatedâ, âvideoâ\n\n\n\ncreateNewStickerSet\nUse this method to create a new sticker set owned by a user. The bot will be able to edit the sticker set thus created. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nUser identifier of created sticker set owner\n\n\nname\nString\nYes\nShort name of sticker set, to be used in t.me/addstickers/ URLs (e.g., animals). Can contain only English letters, digits and underscores. Must begin with a letter, can't contain consecutive underscores and must end in \"_by_<bot_username>\". <bot_username> is case insensitive. 1-64 characters.\n\n\ntitle\nString\nYes\nSticker set title, 1-64 characters\n\n\nstickers\nArray of InputSticker\nYes\nA JSON-serialized list of 1-50 initial stickers to be added to the sticker set\n\n\nsticker_type\nString\nOptional\nType of stickers in the set, pass âregularâ, âmaskâ, or âcustom_emojiâ. By default, a regular sticker set is created.\n\n\nneeds_repainting\nBoolean\nOptional\nPass True if stickers in the sticker set must be repainted to the color of text when used in messages, the accent color if used as emoji status, white on chat photos, or another appropriate color based on context; for custom emoji sticker sets only\n\n\n\naddStickerToSet\nUse this method to add a new sticker to a set created by the bot. Emoji sticker sets can have up to 200 stickers. Other sticker sets can have up to 120 stickers. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nUser identifier of sticker set owner\n\n\nname\nString\nYes\nSticker set name\n\n\nsticker\nInputSticker\nYes\nA JSON-serialized object with information about the added sticker. If exactly the same sticker had already been added to the set, then the set isn't changed.\n\n\n\nsetStickerPositionInSet\nUse this method to move a sticker in a set created by the bot to a specific position. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nsticker\nString\nYes\nFile identifier of the sticker\n\n\nposition\nInteger\nYes\nNew sticker position in the set, zero-based\n\n\n\ndeleteStickerFromSet\nUse this method to delete a sticker from a set created by the bot. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nsticker\nString\nYes\nFile identifier of the sticker\n\n\n\nreplaceStickerInSet\nUse this method to replace an existing sticker in a sticker set with a new one. The method is equivalent to calling deleteStickerFromSet, then addStickerToSet, then setStickerPositionInSet. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nUser identifier of the sticker set owner\n\n\nname\nString\nYes\nSticker set name\n\n\nold_sticker\nString\nYes\nFile identifier of the replaced sticker\n\n\nsticker\nInputSticker\nYes\nA JSON-serialized object with information about the added sticker. If exactly the same sticker had already been added to the set, then the set remains unchanged.\n\n\n\nsetStickerEmojiList\nUse this method to change the list of emoji assigned to a regular or custom emoji sticker. The sticker must belong to a sticker set created by the bot. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nsticker\nString\nYes\nFile identifier of the sticker\n\n\nemoji_list\nArray of String\nYes\nA JSON-serialized list of 1-20 emoji associated with the sticker\n\n\n\nsetStickerKeywords\nUse this method to change search keywords assigned to a regular or custom emoji sticker. The sticker must belong to a sticker set created by the bot. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nsticker\nString\nYes\nFile identifier of the sticker\n\n\nkeywords\nArray of String\nOptional\nA JSON-serialized list of 0-20 search keywords for the sticker with total length of up to 64 characters\n\n\n\nsetStickerMaskPosition\nUse this method to change the mask position of a mask sticker. The sticker must belong to a sticker set that was created by the bot. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nsticker\nString\nYes\nFile identifier of the sticker\n\n\nmask_position\nMaskPosition\nOptional\nA JSON-serialized object with the position where the mask should be placed on faces. Omit the parameter to remove the mask position.\n\n\n\nsetStickerSetTitle\nUse this method to set the title of a created sticker set. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nname\nString\nYes\nSticker set name\n\n\ntitle\nString\nYes\nSticker set title, 1-64 characters\n\n\n\nsetStickerSetThumbnail\nUse this method to set the thumbnail of a regular or mask sticker set. The format of the thumbnail file must match the format of the stickers in the set. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nname\nString\nYes\nSticker set name\n\n\nuser_id\nInteger\nYes\nUser identifier of the sticker set owner\n\n\nthumbnail\nInputFile or String\nOptional\nA .WEBP or .PNG image with the thumbnail, must be up to 128 kilobytes in size and have a width and height of exactly 100px, or a .TGS animation with a thumbnail up to 32 kilobytes in size (see https://core.telegram.org/stickers#animation-requirements for animated sticker technical requirements), or a .WEBM video with the thumbnail up to 32 kilobytes in size; see https://core.telegram.org/stickers#video-requirements for video sticker technical requirements. Pass a file_id as a String to send a file that already exists on the Telegram servers, pass an HTTP URL as a String for Telegram to get a file from the Internet, or upload a new one using multipart/form-data. More information on Sending Files Â». Animated and video sticker set thumbnails can't be uploaded via HTTP URL. If omitted, then the thumbnail is dropped and the first sticker is used as the thumbnail.\n\n\nformat\nString\nYes\nFormat of the thumbnail, must be one of âstaticâ for a .WEBP or .PNG image, âanimatedâ for a .TGS animation, or âvideoâ for a .WEBM video\n\n\n\nsetCustomEmojiStickerSetThumbnail\nUse this method to set the thumbnail of a custom emoji sticker set. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nname\nString\nYes\nSticker set name\n\n\ncustom_emoji_id\nString\nOptional\nCustom emoji identifier of a sticker from the sticker set; pass an empty string to drop the thumbnail and use the first sticker as the thumbnail.\n\n\n\ndeleteStickerSet\nUse this method to delete a sticker set that was created by the bot. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nname\nString\nYes\nSticker set name\n\n\n\nGift\nThis object represents a gift that can be sent by the bot.\n\n\n\nField\nType\nDescription\n\n\n\n\nid\nString\nUnique identifier of the gift\n\n\nsticker\nSticker\nThe sticker that represents the gift\n\n\nstar_count\nInteger\nThe number of Telegram Stars that must be paid to send the sticker\n\n\nupgrade_star_count\nInteger\nOptional. The number of Telegram Stars that must be paid to upgrade the gift to a unique one\n\n\ntotal_count\nInteger\nOptional. The total number of the gifts of this type that can be sent; for limited gifts only\n\n\nremaining_count\nInteger\nOptional. The number of remaining gifts of this type that can be sent; for limited gifts only\n\n\n\nGifts\nThis object represent a list of gifts.\n\n\n\nField\nType\nDescription\n\n\n\n\ngifts\nArray of Gift\nThe list of gifts\n\n\n\ngetAvailableGifts\nReturns the list of gifts that can be sent by the bot to users. Requires no parameters. Returns a Gifts object.\nsendGift\nSends a gift to the given user. The gift can't be converted to Telegram Stars by the user. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user that will receive the gift\n\n\ngift_id\nString\nYes\nIdentifier of the gift\n\n\npay_for_upgrade\nBoolean\nOptional\nPass True to pay for the gift upgrade from the bot's balance, thereby making the upgrade free for the receiver\n\n\ntext\nString\nOptional\nText that will be shown along with the gift; 0-255 characters\n\n\ntext_parse_mode\nString\nOptional\nMode for parsing entities in the text. See formatting options for more details. Entities other than âboldâ, âitalicâ, âunderlineâ, âstrikethroughâ, âspoilerâ, and âcustom_emojiâ are ignored.\n\n\ntext_entities\nArray of MessageEntity\nOptional\nA JSON-serialized list of special entities that appear in the gift text. It can be specified instead of text_parse_mode. Entities other than âboldâ, âitalicâ, âunderlineâ, âstrikethroughâ, âspoilerâ, and âcustom_emojiâ are ignored.\n\n\n\nverifyUser\nVerifies a user on behalf of the organization which is represented by the bot. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user\n\n\ncustom_description\nString\nOptional\nCustom description for the verification; 0-70 characters. Must be empty if the organization isn't allowed to provide a custom verification description.\n\n\n\nverifyChat\nVerifies a chat on behalf of the organization which is represented by the bot. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\ncustom_description\nString\nOptional\nCustom description for the verification; 0-70 characters. Must be empty if the organization isn't allowed to provide a custom verification description.\n\n\n\nremoveUserVerification\nRemoves verification from a user who is currently verified on behalf of the organization represented by the bot. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user\n\n\n\nremoveChatVerification\nRemoves verification from a chat that is currently verified on behalf of the organization represented by the bot. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\n\nInline mode\nThe following methods and objects allow your bot to work in inline mode.Please see our Introduction to Inline bots for more details.\nTo enable this option, send the /setinline command to @BotFather and provide the placeholder text that the user will see in the input field after typing your bot's name.\nInlineQuery\nThis object represents an incoming inline query. When the user sends an empty query, your bot could return some default or trending results.\n\n\n\nField\nType\nDescription\n\n\n\n\nid\nString\nUnique identifier for this query\n\n\nfrom\nUser\nSender\n\n\nquery\nString\nText of the query (up to 256 characters)\n\n\noffset\nString\nOffset of the results to be returned, can be controlled by the bot\n\n\nchat_type\nString\nOptional. Type of the chat from which the inline query was sent. Can be either âsenderâ for a private chat with the inline query sender, âprivateâ, âgroupâ, âsupergroupâ, or âchannelâ. The chat type should be always known for requests sent from official clients and most third-party clients, unless the request was sent from a secret chat\n\n\nlocation\nLocation\nOptional. Sender location, only for bots that request user location\n\n\n\nanswerInlineQuery\nUse this method to send answers to an inline query. On success, True is returned.No more than 50 results per query are allowed.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\ninline_query_id\nString\nYes\nUnique identifier for the answered query\n\n\nresults\nArray of InlineQueryResult\nYes\nA JSON-serialized array of results for the inline query\n\n\ncache_time\nInteger\nOptional\nThe maximum amount of time in seconds that the result of the inline query may be cached on the server. Defaults to 300.\n\n\nis_personal\nBoolean\nOptional\nPass True if results may be cached on the server side only for the user that sent the query. By default, results may be returned to any user who sends the same query.\n\n\nnext_offset\nString\nOptional\nPass the offset that a client should send in the next query with the same text to receive more results. Pass an empty string if there are no more results or if you don't support pagination. Offset length can't exceed 64 bytes.\n\n\nbutton\nInlineQueryResultsButton\nOptional\nA JSON-serialized object describing a button to be shown above inline query results\n\n\n\nInlineQueryResultsButton\nThis object represents a button to be shown above inline query results. You must use exactly one of the optional fields.\n\n\n\nField\nType\nDescription\n\n\n\n\ntext\nString\nLabel text on the button\n\n\nweb_app\nWebAppInfo\nOptional. Description of the Web App that will be launched when the user presses the button. The Web App will be able to switch back to the inline mode using the method switchInlineQuery inside the Web App.\n\n\nstart_parameter\nString\nOptional. Deep-linking parameter for the /start message sent to the bot when a user presses the button. 1-64 characters, only A-Z, a-z, 0-9, _ and - are allowed.Example: An inline bot that sends YouTube videos can ask the user to connect the bot to their YouTube account to adapt search results accordingly. To do this, it displays a 'Connect your YouTube account' button above the results, or even before showing any. The user presses the button, switches to a private chat with the bot and, in doing so, passes a start parameter that instructs the bot to return an OAuth link. Once done, the bot can offer a switch_inline button so that the user can easily return to the chat where they wanted to use the bot's inline capabilities.\n\n\n\nInlineQueryResult\nThis object represents one result of an inline query. Telegram clients currently support results of the following 20 types:\n\nInlineQueryResultCachedAudio\nInlineQueryResultCachedDocument\nInlineQueryResultCachedGif\nInlineQueryResultCachedMpeg4Gif\nInlineQueryResultCachedPhoto\nInlineQueryResultCachedSticker\nInlineQueryResultCachedVideo\nInlineQueryResultCachedVoice\nInlineQueryResultArticle\nInlineQueryResultAudio\nInlineQueryResultContact\nInlineQueryResultGame\nInlineQueryResultDocument\nInlineQueryResultGif\nInlineQueryResultLocation\nInlineQueryResultMpeg4Gif\nInlineQueryResultPhoto\nInlineQueryResultVenue\nInlineQueryResultVideo\nInlineQueryResultVoice\n\nNote: All URLs passed in inline query results will be available to end users and therefore must be assumed to be public.\nInlineQueryResultArticle\nRepresents a link to an article or web page.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be article\n\n\nid\nString\nUnique identifier for this result, 1-64 Bytes\n\n\ntitle\nString\nTitle of the result\n\n\ninput_message_content\nInputMessageContent\nContent of the message to be sent\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\nurl\nString\nOptional. URL of the result\n\n\ndescription\nString\nOptional. Short description of the result\n\n\nthumbnail_url\nString\nOptional. Url of the thumbnail for the result\n\n\nthumbnail_width\nInteger\nOptional. Thumbnail width\n\n\nthumbnail_height\nInteger\nOptional. Thumbnail height\n\n\n\nInlineQueryResultPhoto\nRepresents a link to a photo. By default, this photo will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be photo\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\nphoto_url\nString\nA valid URL of the photo. Photo must be in JPEG format. Photo size must not exceed 5MB\n\n\nthumbnail_url\nString\nURL of the thumbnail for the photo\n\n\nphoto_width\nInteger\nOptional. Width of the photo\n\n\nphoto_height\nInteger\nOptional. Height of the photo\n\n\ntitle\nString\nOptional. Title for the result\n\n\ndescription\nString\nOptional. Short description of the result\n\n\ncaption\nString\nOptional. Caption of the photo to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the photo caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional. Pass True, if the caption must be shown above the message media\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the photo\n\n\n\nInlineQueryResultGif\nRepresents a link to an animated GIF file. By default, this animated GIF file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be gif\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\ngif_url\nString\nA valid URL for the GIF file\n\n\ngif_width\nInteger\nOptional. Width of the GIF\n\n\ngif_height\nInteger\nOptional. Height of the GIF\n\n\ngif_duration\nInteger\nOptional. Duration of the GIF in seconds\n\n\nthumbnail_url\nString\nURL of the static (JPEG or GIF) or animated (MPEG4) thumbnail for the result\n\n\nthumbnail_mime_type\nString\nOptional. MIME type of the thumbnail, must be one of âimage/jpegâ, âimage/gifâ, or âvideo/mp4â. Defaults to âimage/jpegâ\n\n\ntitle\nString\nOptional. Title for the result\n\n\ncaption\nString\nOptional. Caption of the GIF file to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional. Pass True, if the caption must be shown above the message media\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the GIF animation\n\n\n\nInlineQueryResultMpeg4Gif\nRepresents a link to a video animation (H.264/MPEG-4 AVC video without sound). By default, this animated MPEG-4 file will be sent by the user with optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be mpeg4_gif\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\nmpeg4_url\nString\nA valid URL for the MPEG4 file\n\n\nmpeg4_width\nInteger\nOptional. Video width\n\n\nmpeg4_height\nInteger\nOptional. Video height\n\n\nmpeg4_duration\nInteger\nOptional. Video duration in seconds\n\n\nthumbnail_url\nString\nURL of the static (JPEG or GIF) or animated (MPEG4) thumbnail for the result\n\n\nthumbnail_mime_type\nString\nOptional. MIME type of the thumbnail, must be one of âimage/jpegâ, âimage/gifâ, or âvideo/mp4â. Defaults to âimage/jpegâ\n\n\ntitle\nString\nOptional. Title for the result\n\n\ncaption\nString\nOptional. Caption of the MPEG-4 file to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional. Pass True, if the caption must be shown above the message media\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the video animation\n\n\n\nInlineQueryResultVideo\nRepresents a link to a page containing an embedded video player or a video file. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video.\n\nIf an InlineQueryResultVideo message contains an embedded video (e.g., YouTube), you must replace its content using input_message_content.\n\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be video\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\nvideo_url\nString\nA valid URL for the embedded video player or video file\n\n\nmime_type\nString\nMIME type of the content of the video URL, âtext/htmlâ or âvideo/mp4â\n\n\nthumbnail_url\nString\nURL of the thumbnail (JPEG only) for the video\n\n\ntitle\nString\nTitle for the result\n\n\ncaption\nString\nOptional. Caption of the video to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the video caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional. Pass True, if the caption must be shown above the message media\n\n\nvideo_width\nInteger\nOptional. Video width\n\n\nvideo_height\nInteger\nOptional. Video height\n\n\nvideo_duration\nInteger\nOptional. Video duration in seconds\n\n\ndescription\nString\nOptional. Short description of the result\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the video. This field is required if InlineQueryResultVideo is used to send an HTML-page as a result (e.g., a YouTube video).\n\n\n\nInlineQueryResultAudio\nRepresents a link to an MP3 audio file. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be audio\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\naudio_url\nString\nA valid URL for the audio file\n\n\ntitle\nString\nTitle\n\n\ncaption\nString\nOptional. Caption, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the audio caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nperformer\nString\nOptional. Performer\n\n\naudio_duration\nInteger\nOptional. Audio duration in seconds\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the audio\n\n\n\nInlineQueryResultVoice\nRepresents a link to a voice recording in an .OGG container encoded with OPUS. By default, this voice recording will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the the voice message.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be voice\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\nvoice_url\nString\nA valid URL for the voice recording\n\n\ntitle\nString\nRecording title\n\n\ncaption\nString\nOptional. Caption, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the voice message caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nvoice_duration\nInteger\nOptional. Recording duration in seconds\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the voice recording\n\n\n\nInlineQueryResultDocument\nRepresents a link to a file. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file. Currently, only .PDF and .ZIP files can be sent using this method.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be document\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\ntitle\nString\nTitle for the result\n\n\ncaption\nString\nOptional. Caption of the document to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the document caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\ndocument_url\nString\nA valid URL for the file\n\n\nmime_type\nString\nMIME type of the content of the file, either âapplication/pdfâ or âapplication/zipâ\n\n\ndescription\nString\nOptional. Short description of the result\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the file\n\n\nthumbnail_url\nString\nOptional. URL of the thumbnail (JPEG only) for the file\n\n\nthumbnail_width\nInteger\nOptional. Thumbnail width\n\n\nthumbnail_height\nInteger\nOptional. Thumbnail height\n\n\n\nInlineQueryResultLocation\nRepresents a location on a map. By default, the location will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the location.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be location\n\n\nid\nString\nUnique identifier for this result, 1-64 Bytes\n\n\nlatitude\nFloat\nLocation latitude in degrees\n\n\nlongitude\nFloat\nLocation longitude in degrees\n\n\ntitle\nString\nLocation title\n\n\nhorizontal_accuracy\nFloat\nOptional. The radius of uncertainty for the location, measured in meters; 0-1500\n\n\nlive_period\nInteger\nOptional. Period in seconds during which the location can be updated, should be between 60 and 86400, or 0x7FFFFFFF for live locations that can be edited indefinitely.\n\n\nheading\nInteger\nOptional. For live locations, a direction in which the user is moving, in degrees. Must be between 1 and 360 if specified.\n\n\nproximity_alert_radius\nInteger\nOptional. For live locations, a maximum distance for proximity alerts about approaching another chat member, in meters. Must be between 1 and 100000 if specified.\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the location\n\n\nthumbnail_url\nString\nOptional. Url of the thumbnail for the result\n\n\nthumbnail_width\nInteger\nOptional. Thumbnail width\n\n\nthumbnail_height\nInteger\nOptional. Thumbnail height\n\n\n\nInlineQueryResultVenue\nRepresents a venue. By default, the venue will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the venue.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be venue\n\n\nid\nString\nUnique identifier for this result, 1-64 Bytes\n\n\nlatitude\nFloat\nLatitude of the venue location in degrees\n\n\nlongitude\nFloat\nLongitude of the venue location in degrees\n\n\ntitle\nString\nTitle of the venue\n\n\naddress\nString\nAddress of the venue\n\n\nfoursquare_id\nString\nOptional. Foursquare identifier of the venue if known\n\n\nfoursquare_type\nString\nOptional. Foursquare type of the venue, if known. (For example, âarts_entertainment/defaultâ, âarts_entertainment/aquariumâ or âfood/icecreamâ.)\n\n\ngoogle_place_id\nString\nOptional. Google Places identifier of the venue\n\n\ngoogle_place_type\nString\nOptional. Google Places type of the venue. (See supported types.)\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the venue\n\n\nthumbnail_url\nString\nOptional. Url of the thumbnail for the result\n\n\nthumbnail_width\nInteger\nOptional. Thumbnail width\n\n\nthumbnail_height\nInteger\nOptional. Thumbnail height\n\n\n\nInlineQueryResultContact\nRepresents a contact with a phone number. By default, this contact will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the contact.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be contact\n\n\nid\nString\nUnique identifier for this result, 1-64 Bytes\n\n\nphone_number\nString\nContact's phone number\n\n\nfirst_name\nString\nContact's first name\n\n\nlast_name\nString\nOptional. Contact's last name\n\n\nvcard\nString\nOptional. Additional data about the contact in the form of a vCard, 0-2048 bytes\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the contact\n\n\nthumbnail_url\nString\nOptional. Url of the thumbnail for the result\n\n\nthumbnail_width\nInteger\nOptional. Thumbnail width\n\n\nthumbnail_height\nInteger\nOptional. Thumbnail height\n\n\n\nInlineQueryResultGame\nRepresents a Game.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be game\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\ngame_short_name\nString\nShort name of the game\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\n\nInlineQueryResultCachedPhoto\nRepresents a link to a photo stored on the Telegram servers. By default, this photo will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the photo.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be photo\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\nphoto_file_id\nString\nA valid file identifier of the photo\n\n\ntitle\nString\nOptional. Title for the result\n\n\ndescription\nString\nOptional. Short description of the result\n\n\ncaption\nString\nOptional. Caption of the photo to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the photo caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional. Pass True, if the caption must be shown above the message media\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the photo\n\n\n\nInlineQueryResultCachedGif\nRepresents a link to an animated GIF file stored on the Telegram servers. By default, this animated GIF file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with specified content instead of the animation.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be gif\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\ngif_file_id\nString\nA valid file identifier for the GIF file\n\n\ntitle\nString\nOptional. Title for the result\n\n\ncaption\nString\nOptional. Caption of the GIF file to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional. Pass True, if the caption must be shown above the message media\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the GIF animation\n\n\n\nInlineQueryResultCachedMpeg4Gif\nRepresents a link to a video animation (H.264/MPEG-4 AVC video without sound) stored on the Telegram servers. By default, this animated MPEG-4 file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the animation.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be mpeg4_gif\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\nmpeg4_file_id\nString\nA valid file identifier for the MPEG4 file\n\n\ntitle\nString\nOptional. Title for the result\n\n\ncaption\nString\nOptional. Caption of the MPEG-4 file to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional. Pass True, if the caption must be shown above the message media\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the video animation\n\n\n\nInlineQueryResultCachedSticker\nRepresents a link to a sticker stored on the Telegram servers. By default, this sticker will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the sticker.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be sticker\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\nsticker_file_id\nString\nA valid file identifier of the sticker\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the sticker\n\n\n\nInlineQueryResultCachedDocument\nRepresents a link to a file stored on the Telegram servers. By default, this file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the file.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be document\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\ntitle\nString\nTitle for the result\n\n\ndocument_file_id\nString\nA valid file identifier for the file\n\n\ndescription\nString\nOptional. Short description of the result\n\n\ncaption\nString\nOptional. Caption of the document to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the document caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the file\n\n\n\nInlineQueryResultCachedVideo\nRepresents a link to a video file stored on the Telegram servers. By default, this video file will be sent by the user with an optional caption. Alternatively, you can use input_message_content to send a message with the specified content instead of the video.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be video\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\nvideo_file_id\nString\nA valid file identifier for the video file\n\n\ntitle\nString\nTitle for the result\n\n\ndescription\nString\nOptional. Short description of the result\n\n\ncaption\nString\nOptional. Caption of the video to be sent, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the video caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nshow_caption_above_media\nBoolean\nOptional. Pass True, if the caption must be shown above the message media\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the video\n\n\n\nInlineQueryResultCachedVoice\nRepresents a link to a voice message stored on the Telegram servers. By default, this voice message will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the voice message.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be voice\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\nvoice_file_id\nString\nA valid file identifier for the voice message\n\n\ntitle\nString\nVoice message title\n\n\ncaption\nString\nOptional. Caption, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the voice message caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the voice message\n\n\n\nInlineQueryResultCachedAudio\nRepresents a link to an MP3 audio file stored on the Telegram servers. By default, this audio file will be sent by the user. Alternatively, you can use input_message_content to send a message with the specified content instead of the audio.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the result, must be audio\n\n\nid\nString\nUnique identifier for this result, 1-64 bytes\n\n\naudio_file_id\nString\nA valid file identifier for the audio file\n\n\ncaption\nString\nOptional. Caption, 0-1024 characters after entities parsing\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the audio caption. See formatting options for more details.\n\n\ncaption_entities\nArray of MessageEntity\nOptional. List of special entities that appear in the caption, which can be specified instead of parse_mode\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional. Inline keyboard attached to the message\n\n\ninput_message_content\nInputMessageContent\nOptional. Content of the message to be sent instead of the audio\n\n\n\nInputMessageContent\nThis object represents the content of a message to be sent as a result of an inline query. Telegram clients currently support the following 5 types:\n\nInputTextMessageContent\nInputLocationMessageContent\nInputVenueMessageContent\nInputContactMessageContent\nInputInvoiceMessageContent\n\nInputTextMessageContent\nRepresents the content of a text message to be sent as the result of an inline query.\n\n\n\nField\nType\nDescription\n\n\n\n\nmessage_text\nString\nText of the message to be sent, 1-4096 characters\n\n\nparse_mode\nString\nOptional. Mode for parsing entities in the message text. See formatting options for more details.\n\n\nentities\nArray of MessageEntity\nOptional. List of special entities that appear in message text, which can be specified instead of parse_mode\n\n\nlink_preview_options\nLinkPreviewOptions\nOptional. Link preview generation options for the message\n\n\n\nInputLocationMessageContent\nRepresents the content of a location message to be sent as the result of an inline query.\n\n\n\nField\nType\nDescription\n\n\n\n\nlatitude\nFloat\nLatitude of the location in degrees\n\n\nlongitude\nFloat\nLongitude of the location in degrees\n\n\nhorizontal_accuracy\nFloat\nOptional. The radius of uncertainty for the location, measured in meters; 0-1500\n\n\nlive_period\nInteger\nOptional. Period in seconds during which the location can be updated, should be between 60 and 86400, or 0x7FFFFFFF for live locations that can be edited indefinitely.\n\n\nheading\nInteger\nOptional. For live locations, a direction in which the user is moving, in degrees. Must be between 1 and 360 if specified.\n\n\nproximity_alert_radius\nInteger\nOptional. For live locations, a maximum distance for proximity alerts about approaching another chat member, in meters. Must be between 1 and 100000 if specified.\n\n\n\nInputVenueMessageContent\nRepresents the content of a venue message to be sent as the result of an inline query.\n\n\n\nField\nType\nDescription\n\n\n\n\nlatitude\nFloat\nLatitude of the venue in degrees\n\n\nlongitude\nFloat\nLongitude of the venue in degrees\n\n\ntitle\nString\nName of the venue\n\n\naddress\nString\nAddress of the venue\n\n\nfoursquare_id\nString\nOptional. Foursquare identifier of the venue, if known\n\n\nfoursquare_type\nString\nOptional. Foursquare type of the venue, if known. (For example, âarts_entertainment/defaultâ, âarts_entertainment/aquariumâ or âfood/icecreamâ.)\n\n\ngoogle_place_id\nString\nOptional. Google Places identifier of the venue\n\n\ngoogle_place_type\nString\nOptional. Google Places type of the venue. (See supported types.)\n\n\n\nInputContactMessageContent\nRepresents the content of a contact message to be sent as the result of an inline query.\n\n\n\nField\nType\nDescription\n\n\n\n\nphone_number\nString\nContact's phone number\n\n\nfirst_name\nString\nContact's first name\n\n\nlast_name\nString\nOptional. Contact's last name\n\n\nvcard\nString\nOptional. Additional data about the contact in the form of a vCard, 0-2048 bytes\n\n\n\nInputInvoiceMessageContent\nRepresents the content of an invoice message to be sent as the result of an inline query.\n\n\n\nField\nType\nDescription\n\n\n\n\ntitle\nString\nProduct name, 1-32 characters\n\n\ndescription\nString\nProduct description, 1-255 characters\n\n\npayload\nString\nBot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use it for your internal processes.\n\n\nprovider_token\nString\nOptional. Payment provider token, obtained via @BotFather. Pass an empty string for payments in Telegram Stars.\n\n\ncurrency\nString\nThree-letter ISO 4217 currency code, see more on currencies. Pass âXTRâ for payments in Telegram Stars.\n\n\nprices\nArray of LabeledPrice\nPrice breakdown, a JSON-serialized list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.). Must contain exactly one item for payments in Telegram Stars.\n\n\nmax_tip_amount\nInteger\nOptional. The maximum accepted amount for tips in the smallest units of the currency (integer, not float/double). For example, for a maximum tip of US$ 1.45 pass max_tip_amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies). Defaults to 0. Not supported for payments in Telegram Stars.\n\n\nsuggested_tip_amounts\nArray of Integer\nOptional. A JSON-serialized array of suggested amounts of tip in the smallest units of the currency (integer, not float/double). At most 4 suggested tip amounts can be specified. The suggested tip amounts must be positive, passed in a strictly increased order and must not exceed max_tip_amount.\n\n\nprovider_data\nString\nOptional. A JSON-serialized object for data about the invoice, which will be shared with the payment provider. A detailed description of the required fields should be provided by the payment provider.\n\n\nphoto_url\nString\nOptional. URL of the product photo for the invoice. Can be a photo of the goods or a marketing image for a service.\n\n\nphoto_size\nInteger\nOptional. Photo size in bytes\n\n\nphoto_width\nInteger\nOptional. Photo width\n\n\nphoto_height\nInteger\nOptional. Photo height\n\n\nneed_name\nBoolean\nOptional. Pass True if you require the user's full name to complete the order. Ignored for payments in Telegram Stars.\n\n\nneed_phone_number\nBoolean\nOptional. Pass True if you require the user's phone number to complete the order. Ignored for payments in Telegram Stars.\n\n\nneed_email\nBoolean\nOptional. Pass True if you require the user's email address to complete the order. Ignored for payments in Telegram Stars.\n\n\nneed_shipping_address\nBoolean\nOptional. Pass True if you require the user's shipping address to complete the order. Ignored for payments in Telegram Stars.\n\n\nsend_phone_number_to_provider\nBoolean\nOptional. Pass True if the user's phone number should be sent to the provider. Ignored for payments in Telegram Stars.\n\n\nsend_email_to_provider\nBoolean\nOptional. Pass True if the user's email address should be sent to the provider. Ignored for payments in Telegram Stars.\n\n\nis_flexible\nBoolean\nOptional. Pass True if the final price depends on the shipping method. Ignored for payments in Telegram Stars.\n\n\n\nChosenInlineResult\nRepresents a result of an inline query that was chosen by the user and sent to their chat partner.\n\n\n\nField\nType\nDescription\n\n\n\n\nresult_id\nString\nThe unique identifier for the result that was chosen\n\n\nfrom\nUser\nThe user that chose the result\n\n\nlocation\nLocation\nOptional. Sender location, only for bots that require user location\n\n\ninline_message_id\nString\nOptional. Identifier of the sent inline message. Available only if there is an inline keyboard attached to the message. Will be also received in callback queries and can be used to edit the message.\n\n\nquery\nString\nThe query that was used to obtain the result\n\n\n\nNote: It is necessary to enable inline feedback via @BotFather in order to receive these objects in updates.\nanswerWebAppQuery\nUse this method to set the result of an interaction with a Web App and send a corresponding message on behalf of the user to the chat from which the query originated. On success, a SentWebAppMessage object is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nweb_app_query_id\nString\nYes\nUnique identifier for the query to be answered\n\n\nresult\nInlineQueryResult\nYes\nA JSON-serialized object describing the message to be sent\n\n\n\nSentWebAppMessage\nDescribes an inline message sent by a Web App on behalf of a user.\n\n\n\nField\nType\nDescription\n\n\n\n\ninline_message_id\nString\nOptional. Identifier of the sent inline message. Available only if there is an inline keyboard attached to the message.\n\n\n\nsavePreparedInlineMessage\nStores a message that can be sent by a user of a Mini App. Returns a PreparedInlineMessage object.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nUnique identifier of the target user that can use the prepared message\n\n\nresult\nInlineQueryResult\nYes\nA JSON-serialized object describing the message to be sent\n\n\nallow_user_chats\nBoolean\nOptional\nPass True if the message can be sent to private chats with users\n\n\nallow_bot_chats\nBoolean\nOptional\nPass True if the message can be sent to private chats with bots\n\n\nallow_group_chats\nBoolean\nOptional\nPass True if the message can be sent to group and supergroup chats\n\n\nallow_channel_chats\nBoolean\nOptional\nPass True if the message can be sent to channel chats\n\n\n\nPreparedInlineMessage\nDescribes an inline message to be sent by a user of a Mini App.\n\n\n\nField\nType\nDescription\n\n\n\n\nid\nString\nUnique identifier of the prepared message\n\n\nexpiration_date\nInteger\nExpiration date of the prepared message, in Unix time. Expired prepared messages can no longer be used\n\n\n\nPayments\nYour bot can accept payments from Telegram users. Please see the introduction to payments for more details on the process and how to set up payments for your bot.\nsendInvoice\nUse this method to send invoices. On success, the sent Message is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nchat_id\nInteger or String\nYes\nUnique identifier for the target chat or username of the target channel (in the format @channelusername)\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\ntitle\nString\nYes\nProduct name, 1-32 characters\n\n\ndescription\nString\nYes\nProduct description, 1-255 characters\n\n\npayload\nString\nYes\nBot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use it for your internal processes.\n\n\nprovider_token\nString\nOptional\nPayment provider token, obtained via @BotFather. Pass an empty string for payments in Telegram Stars.\n\n\ncurrency\nString\nYes\nThree-letter ISO 4217 currency code, see more on currencies. Pass âXTRâ for payments in Telegram Stars.\n\n\nprices\nArray of LabeledPrice\nYes\nPrice breakdown, a JSON-serialized list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.). Must contain exactly one item for payments in Telegram Stars.\n\n\nmax_tip_amount\nInteger\nOptional\nThe maximum accepted amount for tips in the smallest units of the currency (integer, not float/double). For example, for a maximum tip of US$ 1.45 pass max_tip_amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies). Defaults to 0. Not supported for payments in Telegram Stars.\n\n\nsuggested_tip_amounts\nArray of Integer\nOptional\nA JSON-serialized array of suggested amounts of tips in the smallest units of the currency (integer, not float/double). At most 4 suggested tip amounts can be specified. The suggested tip amounts must be positive, passed in a strictly increased order and must not exceed max_tip_amount.\n\n\nstart_parameter\nString\nOptional\nUnique deep-linking parameter. If left empty, forwarded copies of the sent message will have a Pay button, allowing multiple users to pay directly from the forwarded message, using the same invoice. If non-empty, forwarded copies of the sent message will have a URL button with a deep link to the bot (instead of a Pay button), with the value used as the start parameter\n\n\nprovider_data\nString\nOptional\nJSON-serialized data about the invoice, which will be shared with the payment provider. A detailed description of required fields should be provided by the payment provider.\n\n\nphoto_url\nString\nOptional\nURL of the product photo for the invoice. Can be a photo of the goods or a marketing image for a service. People like it better when they see what they are paying for.\n\n\nphoto_size\nInteger\nOptional\nPhoto size in bytes\n\n\nphoto_width\nInteger\nOptional\nPhoto width\n\n\nphoto_height\nInteger\nOptional\nPhoto height\n\n\nneed_name\nBoolean\nOptional\nPass True if you require the user's full name to complete the order. Ignored for payments in Telegram Stars.\n\n\nneed_phone_number\nBoolean\nOptional\nPass True if you require the user's phone number to complete the order. Ignored for payments in Telegram Stars.\n\n\nneed_email\nBoolean\nOptional\nPass True if you require the user's email address to complete the order. Ignored for payments in Telegram Stars.\n\n\nneed_shipping_address\nBoolean\nOptional\nPass True if you require the user's shipping address to complete the order. Ignored for payments in Telegram Stars.\n\n\nsend_phone_number_to_provider\nBoolean\nOptional\nPass True if the user's phone number should be sent to the provider. Ignored for payments in Telegram Stars.\n\n\nsend_email_to_provider\nBoolean\nOptional\nPass True if the user's email address should be sent to the provider. Ignored for payments in Telegram Stars.\n\n\nis_flexible\nBoolean\nOptional\nPass True if the final price depends on the shipping method. Ignored for payments in Telegram Stars.\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional\nA JSON-serialized object for an inline keyboard. If empty, one 'Pay total price' button will be shown. If not empty, the first button must be a Pay button.\n\n\n\ncreateInvoiceLink\nUse this method to create a link for an invoice. Returns the created invoice link as String on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the link will be created. For payments in Telegram Stars only.\n\n\ntitle\nString\nYes\nProduct name, 1-32 characters\n\n\ndescription\nString\nYes\nProduct description, 1-255 characters\n\n\npayload\nString\nYes\nBot-defined invoice payload, 1-128 bytes. This will not be displayed to the user, use it for your internal processes.\n\n\nprovider_token\nString\nOptional\nPayment provider token, obtained via @BotFather. Pass an empty string for payments in Telegram Stars.\n\n\ncurrency\nString\nYes\nThree-letter ISO 4217 currency code, see more on currencies. Pass âXTRâ for payments in Telegram Stars.\n\n\nprices\nArray of LabeledPrice\nYes\nPrice breakdown, a JSON-serialized list of components (e.g. product price, tax, discount, delivery cost, delivery tax, bonus, etc.). Must contain exactly one item for payments in Telegram Stars.\n\n\nsubscription_period\nInteger\nOptional\nThe number of seconds the subscription will be active for before the next payment. The currency must be set to âXTRâ (Telegram Stars) if the parameter is used. Currently, it must always be 2592000 (30 days) if specified. Any number of subscriptions can be active for a given bot at the same time, including multiple concurrent subscriptions from the same user. Subscription price must no exceed 2500 Telegram Stars.\n\n\nmax_tip_amount\nInteger\nOptional\nThe maximum accepted amount for tips in the smallest units of the currency (integer, not float/double). For example, for a maximum tip of US$ 1.45 pass max_tip_amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies). Defaults to 0. Not supported for payments in Telegram Stars.\n\n\nsuggested_tip_amounts\nArray of Integer\nOptional\nA JSON-serialized array of suggested amounts of tips in the smallest units of the currency (integer, not float/double). At most 4 suggested tip amounts can be specified. The suggested tip amounts must be positive, passed in a strictly increased order and must not exceed max_tip_amount.\n\n\nprovider_data\nString\nOptional\nJSON-serialized data about the invoice, which will be shared with the payment provider. A detailed description of required fields should be provided by the payment provider.\n\n\nphoto_url\nString\nOptional\nURL of the product photo for the invoice. Can be a photo of the goods or a marketing image for a service.\n\n\nphoto_size\nInteger\nOptional\nPhoto size in bytes\n\n\nphoto_width\nInteger\nOptional\nPhoto width\n\n\nphoto_height\nInteger\nOptional\nPhoto height\n\n\nneed_name\nBoolean\nOptional\nPass True if you require the user's full name to complete the order. Ignored for payments in Telegram Stars.\n\n\nneed_phone_number\nBoolean\nOptional\nPass True if you require the user's phone number to complete the order. Ignored for payments in Telegram Stars.\n\n\nneed_email\nBoolean\nOptional\nPass True if you require the user's email address to complete the order. Ignored for payments in Telegram Stars.\n\n\nneed_shipping_address\nBoolean\nOptional\nPass True if you require the user's shipping address to complete the order. Ignored for payments in Telegram Stars.\n\n\nsend_phone_number_to_provider\nBoolean\nOptional\nPass True if the user's phone number should be sent to the provider. Ignored for payments in Telegram Stars.\n\n\nsend_email_to_provider\nBoolean\nOptional\nPass True if the user's email address should be sent to the provider. Ignored for payments in Telegram Stars.\n\n\nis_flexible\nBoolean\nOptional\nPass True if the final price depends on the shipping method. Ignored for payments in Telegram Stars.\n\n\n\nanswerShippingQuery\nIf you sent an invoice requesting a shipping address and the parameter is_flexible was specified, the Bot API will send an Update with a shipping_query field to the bot. Use this method to reply to shipping queries. On success, True is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nshipping_query_id\nString\nYes\nUnique identifier for the query to be answered\n\n\nok\nBoolean\nYes\nPass True if delivery to the specified address is possible and False if there are any problems (for example, if delivery to the specified address is not possible)\n\n\nshipping_options\nArray of ShippingOption\nOptional\nRequired if ok is True. A JSON-serialized array of available shipping options.\n\n\nerror_message\nString\nOptional\nRequired if ok is False. Error message in human readable form that explains why it is impossible to complete the order (e.g. âSorry, delivery to your desired address is unavailableâ). Telegram will display this message to the user.\n\n\n\nanswerPreCheckoutQuery\nOnce the user has confirmed their payment and shipping details, the Bot API sends the final confirmation in the form of an Update with the field pre_checkout_query. Use this method to respond to such pre-checkout queries. On success, True is returned. Note: The Bot API must receive an answer within 10 seconds after the pre-checkout query was sent.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\npre_checkout_query_id\nString\nYes\nUnique identifier for the query to be answered\n\n\nok\nBoolean\nYes\nSpecify True if everything is alright (goods are available, etc.) and the bot is ready to proceed with the order. Use False if there are any problems.\n\n\nerror_message\nString\nOptional\nRequired if ok is False. Error message in human readable form that explains the reason for failure to proceed with the checkout (e.g. \"Sorry, somebody just bought the last of our amazing black T-shirts while you were busy filling out your payment details. Please choose a different color or garment!\"). Telegram will display this message to the user.\n\n\n\ngetStarTransactions\nReturns the bot's Telegram Star transactions in chronological order. On success, returns a StarTransactions object.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\noffset\nInteger\nOptional\nNumber of transactions to skip in the response\n\n\nlimit\nInteger\nOptional\nThe maximum number of transactions to be retrieved. Values between 1-100 are accepted. Defaults to 100.\n\n\n\nrefundStarPayment\nRefunds a successful payment in Telegram Stars. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nIdentifier of the user whose payment will be refunded\n\n\ntelegram_payment_charge_id\nString\nYes\nTelegram payment identifier\n\n\n\neditUserStarSubscription\nAllows the bot to cancel or re-enable extension of a subscription paid in Telegram Stars. Returns True on success.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nIdentifier of the user whose subscription will be edited\n\n\ntelegram_payment_charge_id\nString\nYes\nTelegram payment identifier for the subscription\n\n\nis_canceled\nBoolean\nYes\nPass True to cancel extension of the user subscription; the subscription must be active up to the end of the current subscription period. Pass False to allow the user to re-enable a subscription that was previously canceled by the bot.\n\n\n\nLabeledPrice\nThis object represents a portion of the price for goods or services.\n\n\n\nField\nType\nDescription\n\n\n\n\nlabel\nString\nPortion label\n\n\namount\nInteger\nPrice of the product in the smallest units of the currency (integer, not float/double). For example, for a price of US$ 1.45 pass amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).\n\n\n\nInvoice\nThis object contains basic information about an invoice.\n\n\n\nField\nType\nDescription\n\n\n\n\ntitle\nString\nProduct name\n\n\ndescription\nString\nProduct description\n\n\nstart_parameter\nString\nUnique bot deep-linking parameter that can be used to generate this invoice\n\n\ncurrency\nString\nThree-letter ISO 4217 currency code, or âXTRâ for payments in Telegram Stars\n\n\ntotal_amount\nInteger\nTotal price in the smallest units of the currency (integer, not float/double). For example, for a price of US$ 1.45 pass amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).\n\n\n\nShippingAddress\nThis object represents a shipping address.\n\n\n\nField\nType\nDescription\n\n\n\n\ncountry_code\nString\nTwo-letter ISO 3166-1 alpha-2 country code\n\n\nstate\nString\nState, if applicable\n\n\ncity\nString\nCity\n\n\nstreet_line1\nString\nFirst line for the address\n\n\nstreet_line2\nString\nSecond line for the address\n\n\npost_code\nString\nAddress post code\n\n\n\nOrderInfo\nThis object represents information about an order.\n\n\n\nField\nType\nDescription\n\n\n\n\nname\nString\nOptional. User name\n\n\nphone_number\nString\nOptional. User's phone number\n\n\nemail\nString\nOptional. User email\n\n\nshipping_address\nShippingAddress\nOptional. User shipping address\n\n\n\nShippingOption\nThis object represents one shipping option.\n\n\n\nField\nType\nDescription\n\n\n\n\nid\nString\nShipping option identifier\n\n\ntitle\nString\nOption title\n\n\nprices\nArray of LabeledPrice\nList of price portions\n\n\n\nSuccessfulPayment\nThis object contains basic information about a successful payment. Note that if the buyer initiates a chargeback with the relevant payment provider following this transaction, the funds may be debited from your balance. This is outside of Telegram's control.\n\n\n\nField\nType\nDescription\n\n\n\n\ncurrency\nString\nThree-letter ISO 4217 currency code, or âXTRâ for payments in Telegram Stars\n\n\ntotal_amount\nInteger\nTotal price in the smallest units of the currency (integer, not float/double). For example, for a price of US$ 1.45 pass amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).\n\n\ninvoice_payload\nString\nBot-specified invoice payload\n\n\nsubscription_expiration_date\nInteger\nOptional. Expiration date of the subscription, in Unix time; for recurring payments only\n\n\nis_recurring\nTrue\nOptional. True, if the payment is a recurring payment for a subscription\n\n\nis_first_recurring\nTrue\nOptional. True, if the payment is the first payment for a subscription\n\n\nshipping_option_id\nString\nOptional. Identifier of the shipping option chosen by the user\n\n\norder_info\nOrderInfo\nOptional. Order information provided by the user\n\n\ntelegram_payment_charge_id\nString\nTelegram payment identifier\n\n\nprovider_payment_charge_id\nString\nProvider payment identifier\n\n\n\nRefundedPayment\nThis object contains basic information about a refunded payment.\n\n\n\nField\nType\nDescription\n\n\n\n\ncurrency\nString\nThree-letter ISO 4217 currency code, or âXTRâ for payments in Telegram Stars. Currently, always âXTRâ\n\n\ntotal_amount\nInteger\nTotal refunded price in the smallest units of the currency (integer, not float/double). For example, for a price of US$ 1.45, total_amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).\n\n\ninvoice_payload\nString\nBot-specified invoice payload\n\n\ntelegram_payment_charge_id\nString\nTelegram payment identifier\n\n\nprovider_payment_charge_id\nString\nOptional. Provider payment identifier\n\n\n\nShippingQuery\nThis object contains information about an incoming shipping query.\n\n\n\nField\nType\nDescription\n\n\n\n\nid\nString\nUnique query identifier\n\n\nfrom\nUser\nUser who sent the query\n\n\ninvoice_payload\nString\nBot-specified invoice payload\n\n\nshipping_address\nShippingAddress\nUser specified shipping address\n\n\n\nPreCheckoutQuery\nThis object contains information about an incoming pre-checkout query.\n\n\n\nField\nType\nDescription\n\n\n\n\nid\nString\nUnique query identifier\n\n\nfrom\nUser\nUser who sent the query\n\n\ncurrency\nString\nThree-letter ISO 4217 currency code, or âXTRâ for payments in Telegram Stars\n\n\ntotal_amount\nInteger\nTotal price in the smallest units of the currency (integer, not float/double). For example, for a price of US$ 1.45 pass amount = 145. See the exp parameter in currencies.json, it shows the number of digits past the decimal point for each currency (2 for the majority of currencies).\n\n\ninvoice_payload\nString\nBot-specified invoice payload\n\n\nshipping_option_id\nString\nOptional. Identifier of the shipping option chosen by the user\n\n\norder_info\nOrderInfo\nOptional. Order information provided by the user\n\n\n\nPaidMediaPurchased\nThis object contains information about a paid media purchase.\n\n\n\nField\nType\nDescription\n\n\n\n\nfrom\nUser\nUser who purchased the media\n\n\npaid_media_payload\nString\nBot-specified paid media payload\n\n\n\nRevenueWithdrawalState\nThis object describes the state of a revenue withdrawal operation. Currently, it can be one of\n\nRevenueWithdrawalStatePending\nRevenueWithdrawalStateSucceeded\nRevenueWithdrawalStateFailed\n\nRevenueWithdrawalStatePending\nThe withdrawal is in progress.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the state, always âpendingâ\n\n\n\nRevenueWithdrawalStateSucceeded\nThe withdrawal succeeded.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the state, always âsucceededâ\n\n\ndate\nInteger\nDate the withdrawal was completed in Unix time\n\n\nurl\nString\nAn HTTPS URL that can be used to see transaction details\n\n\n\nRevenueWithdrawalStateFailed\nThe withdrawal failed and the transaction was refunded.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the state, always âfailedâ\n\n\n\nAffiliateInfo\nContains information about the affiliate that received a commission via this transaction.\n\n\n\nField\nType\nDescription\n\n\n\n\naffiliate_user\nUser\nOptional. The bot or the user that received an affiliate commission if it was received by a bot or a user\n\n\naffiliate_chat\nChat\nOptional. The chat that received an affiliate commission if it was received by a chat\n\n\ncommission_per_mille\nInteger\nThe number of Telegram Stars received by the affiliate for each 1000 Telegram Stars received by the bot from referred users\n\n\namount\nInteger\nInteger amount of Telegram Stars received by the affiliate from the transaction, rounded to 0; can be negative for refunds\n\n\nnanostar_amount\nInteger\nOptional. The number of 1/1000000000 shares of Telegram Stars received by the affiliate; from -999999999 to 999999999; can be negative for refunds\n\n\n\nTransactionPartner\nThis object describes the source of a transaction, or its recipient for outgoing transactions. Currently, it can be one of\n\nTransactionPartnerUser\nTransactionPartnerAffiliateProgram\nTransactionPartnerFragment\nTransactionPartnerTelegramAds\nTransactionPartnerTelegramApi\nTransactionPartnerOther\n\nTransactionPartnerUser\nDescribes a transaction with a user.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the transaction partner, always âuserâ\n\n\nuser\nUser\nInformation about the user\n\n\naffiliate\nAffiliateInfo\nOptional. Information about the affiliate that received a commission via this transaction\n\n\ninvoice_payload\nString\nOptional. Bot-specified invoice payload\n\n\nsubscription_period\nInteger\nOptional. The duration of the paid subscription\n\n\npaid_media\nArray of PaidMedia\nOptional. Information about the paid media bought by the user\n\n\npaid_media_payload\nString\nOptional. Bot-specified paid media payload\n\n\ngift\nGift\nOptional. The gift sent to the user by the bot\n\n\n\nTransactionPartnerAffiliateProgram\nDescribes the affiliate program that issued the affiliate commission received via this transaction.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the transaction partner, always âaffiliate_programâ\n\n\nsponsor_user\nUser\nOptional. Information about the bot that sponsored the affiliate program\n\n\ncommission_per_mille\nInteger\nThe number of Telegram Stars received by the bot for each 1000 Telegram Stars received by the affiliate program sponsor from referred users\n\n\n\nTransactionPartnerFragment\nDescribes a withdrawal transaction with Fragment.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the transaction partner, always âfragmentâ\n\n\nwithdrawal_state\nRevenueWithdrawalState\nOptional. State of the transaction if the transaction is outgoing\n\n\n\nTransactionPartnerTelegramAds\nDescribes a withdrawal transaction to the Telegram Ads platform.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the transaction partner, always âtelegram_adsâ\n\n\n\nTransactionPartnerTelegramApi\nDescribes a transaction with payment for paid broadcasting.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the transaction partner, always âtelegram_apiâ\n\n\nrequest_count\nInteger\nThe number of successful requests that exceeded regular limits and were therefore billed\n\n\n\nTransactionPartnerOther\nDescribes a transaction with an unknown source or recipient.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nType of the transaction partner, always âotherâ\n\n\n\nStarTransaction\nDescribes a Telegram Star transaction. Note that if the buyer initiates a chargeback with the payment provider from whom they acquired Stars (e.g., Apple, Google) following this transaction, the refunded Stars will be deducted from the bot's balance. This is outside of Telegram's control.\n\n\n\nField\nType\nDescription\n\n\n\n\nid\nString\nUnique identifier of the transaction. Coincides with the identifier of the original transaction for refund transactions. Coincides with SuccessfulPayment.telegram_payment_charge_id for successful incoming payments from users.\n\n\namount\nInteger\nInteger amount of Telegram Stars transferred by the transaction\n\n\nnanostar_amount\nInteger\nOptional. The number of 1/1000000000 shares of Telegram Stars transferred by the transaction; from 0 to 999999999\n\n\ndate\nInteger\nDate the transaction was created in Unix time\n\n\nsource\nTransactionPartner\nOptional. Source of an incoming transaction (e.g., a user purchasing goods or services, Fragment refunding a failed withdrawal). Only for incoming transactions\n\n\nreceiver\nTransactionPartner\nOptional. Receiver of an outgoing transaction (e.g., a user for a purchase refund, Fragment for a withdrawal). Only for outgoing transactions\n\n\n\nStarTransactions\nContains a list of Telegram Star transactions.\n\n\n\nField\nType\nDescription\n\n\n\n\ntransactions\nArray of StarTransaction\nThe list of transactions\n\n\n\nTelegram Passport\nTelegram Passport is a unified authorization method for services that require personal identification. Users can upload their documents once, then instantly share their data with services that require real-world ID (finance, ICOs, etc.). Please see the manual for details.\nPassportData\nDescribes Telegram Passport data shared with the bot by the user.\n\n\n\nField\nType\nDescription\n\n\n\n\ndata\nArray of EncryptedPassportElement\nArray with information about documents and other Telegram Passport elements that was shared with the bot\n\n\ncredentials\nEncryptedCredentials\nEncrypted credentials required to decrypt the data\n\n\n\nPassportFile\nThis object represents a file uploaded to Telegram Passport. Currently all Telegram Passport files are in JPEG format when decrypted and don't exceed 10MB.\n\n\n\nField\nType\nDescription\n\n\n\n\nfile_id\nString\nIdentifier for this file, which can be used to download or reuse the file\n\n\nfile_unique_id\nString\nUnique identifier for this file, which is supposed to be the same over time and for different bots. Can't be used to download or reuse the file.\n\n\nfile_size\nInteger\nFile size in bytes\n\n\nfile_date\nInteger\nUnix time when the file was uploaded\n\n\n\nEncryptedPassportElement\nDescribes documents or other Telegram Passport elements shared with the bot by the user.\n\n\n\nField\nType\nDescription\n\n\n\n\ntype\nString\nElement type. One of âpersonal_detailsâ, âpassportâ, âdriver_licenseâ, âidentity_cardâ, âinternal_passportâ, âaddressâ, âutility_billâ, âbank_statementâ, ârental_agreementâ, âpassport_registrationâ, âtemporary_registrationâ, âphone_numberâ, âemailâ.\n\n\ndata\nString\nOptional. Base64-encoded encrypted Telegram Passport element data provided by the user; available only for âpersonal_detailsâ, âpassportâ, âdriver_licenseâ, âidentity_cardâ, âinternal_passportâ and âaddressâ types. Can be decrypted and verified using the accompanying EncryptedCredentials.\n\n\nphone_number\nString\nOptional. User's verified phone number; available only for âphone_numberâ type\n\n\nemail\nString\nOptional. User's verified email address; available only for âemailâ type\n\n\nfiles\nArray of PassportFile\nOptional. Array of encrypted files with documents provided by the user; available only for âutility_billâ, âbank_statementâ, ârental_agreementâ, âpassport_registrationâ and âtemporary_registrationâ types. Files can be decrypted and verified using the accompanying EncryptedCredentials.\n\n\nfront_side\nPassportFile\nOptional. Encrypted file with the front side of the document, provided by the user; available only for âpassportâ, âdriver_licenseâ, âidentity_cardâ and âinternal_passportâ. The file can be decrypted and verified using the accompanying EncryptedCredentials.\n\n\nreverse_side\nPassportFile\nOptional. Encrypted file with the reverse side of the document, provided by the user; available only for âdriver_licenseâ and âidentity_cardâ. The file can be decrypted and verified using the accompanying EncryptedCredentials.\n\n\nselfie\nPassportFile\nOptional. Encrypted file with the selfie of the user holding a document, provided by the user; available if requested for âpassportâ, âdriver_licenseâ, âidentity_cardâ and âinternal_passportâ. The file can be decrypted and verified using the accompanying EncryptedCredentials.\n\n\ntranslation\nArray of PassportFile\nOptional. Array of encrypted files with translated versions of documents provided by the user; available if requested for âpassportâ, âdriver_licenseâ, âidentity_cardâ, âinternal_passportâ, âutility_billâ, âbank_statementâ, ârental_agreementâ, âpassport_registrationâ and âtemporary_registrationâ types. Files can be decrypted and verified using the accompanying EncryptedCredentials.\n\n\nhash\nString\nBase64-encoded element hash for using in PassportElementErrorUnspecified\n\n\n\nEncryptedCredentials\nDescribes data required for decrypting and authenticating EncryptedPassportElement. See the Telegram Passport Documentation for a complete description of the data decryption and authentication processes.\n\n\n\nField\nType\nDescription\n\n\n\n\ndata\nString\nBase64-encoded encrypted JSON-serialized data with unique user's payload, data hashes and secrets required for EncryptedPassportElement decryption and authentication\n\n\nhash\nString\nBase64-encoded data hash for data authentication\n\n\nsecret\nString\nBase64-encoded secret, encrypted with the bot's public RSA key, required for data decryption\n\n\n\nsetPassportDataErrors\nInforms a user that some of the Telegram Passport elements they provided contains errors. The user will not be able to re-submit their Passport to you until the errors are fixed (the contents of the field for which you returned the error must change). Returns True on success.\nUse this if the data submitted by the user doesn't satisfy the standards your service requires for any reason. For example, if a birthday date seems invalid, a submitted document is blurry, a scan shows evidence of tampering, etc. Supply some details in the error message to make sure the user knows how to correct the issues.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nUser identifier\n\n\nerrors\nArray of PassportElementError\nYes\nA JSON-serialized array describing the errors\n\n\n\nPassportElementError\nThis object represents an error in the Telegram Passport element which was submitted that should be resolved by the user. It should be one of:\n\nPassportElementErrorDataField\nPassportElementErrorFrontSide\nPassportElementErrorReverseSide\nPassportElementErrorSelfie\nPassportElementErrorFile\nPassportElementErrorFiles\nPassportElementErrorTranslationFile\nPassportElementErrorTranslationFiles\nPassportElementErrorUnspecified\n\nPassportElementErrorDataField\nRepresents an issue in one of the data fields that was provided by the user. The error is considered resolved when the field's value changes.\n\n\n\nField\nType\nDescription\n\n\n\n\nsource\nString\nError source, must be data\n\n\ntype\nString\nThe section of the user's Telegram Passport which has the error, one of âpersonal_detailsâ, âpassportâ, âdriver_licenseâ, âidentity_cardâ, âinternal_passportâ, âaddressâ\n\n\nfield_name\nString\nName of the data field which has the error\n\n\ndata_hash\nString\nBase64-encoded data hash\n\n\nmessage\nString\nError message\n\n\n\nPassportElementErrorFrontSide\nRepresents an issue with the front side of a document. The error is considered resolved when the file with the front side of the document changes.\n\n\n\nField\nType\nDescription\n\n\n\n\nsource\nString\nError source, must be front_side\n\n\ntype\nString\nThe section of the user's Telegram Passport which has the issue, one of âpassportâ, âdriver_licenseâ, âidentity_cardâ, âinternal_passportâ\n\n\nfile_hash\nString\nBase64-encoded hash of the file with the front side of the document\n\n\nmessage\nString\nError message\n\n\n\nPassportElementErrorReverseSide\nRepresents an issue with the reverse side of a document. The error is considered resolved when the file with reverse side of the document changes.\n\n\n\nField\nType\nDescription\n\n\n\n\nsource\nString\nError source, must be reverse_side\n\n\ntype\nString\nThe section of the user's Telegram Passport which has the issue, one of âdriver_licenseâ, âidentity_cardâ\n\n\nfile_hash\nString\nBase64-encoded hash of the file with the reverse side of the document\n\n\nmessage\nString\nError message\n\n\n\nPassportElementErrorSelfie\nRepresents an issue with the selfie with a document. The error is considered resolved when the file with the selfie changes.\n\n\n\nField\nType\nDescription\n\n\n\n\nsource\nString\nError source, must be selfie\n\n\ntype\nString\nThe section of the user's Telegram Passport which has the issue, one of âpassportâ, âdriver_licenseâ, âidentity_cardâ, âinternal_passportâ\n\n\nfile_hash\nString\nBase64-encoded hash of the file with the selfie\n\n\nmessage\nString\nError message\n\n\n\nPassportElementErrorFile\nRepresents an issue with a document scan. The error is considered resolved when the file with the document scan changes.\n\n\n\nField\nType\nDescription\n\n\n\n\nsource\nString\nError source, must be file\n\n\ntype\nString\nThe section of the user's Telegram Passport which has the issue, one of âutility_billâ, âbank_statementâ, ârental_agreementâ, âpassport_registrationâ, âtemporary_registrationâ\n\n\nfile_hash\nString\nBase64-encoded file hash\n\n\nmessage\nString\nError message\n\n\n\nPassportElementErrorFiles\nRepresents an issue with a list of scans. The error is considered resolved when the list of files containing the scans changes.\n\n\n\nField\nType\nDescription\n\n\n\n\nsource\nString\nError source, must be files\n\n\ntype\nString\nThe section of the user's Telegram Passport which has the issue, one of âutility_billâ, âbank_statementâ, ârental_agreementâ, âpassport_registrationâ, âtemporary_registrationâ\n\n\nfile_hashes\nArray of String\nList of base64-encoded file hashes\n\n\nmessage\nString\nError message\n\n\n\nPassportElementErrorTranslationFile\nRepresents an issue with one of the files that constitute the translation of a document. The error is considered resolved when the file changes.\n\n\n\nField\nType\nDescription\n\n\n\n\nsource\nString\nError source, must be translation_file\n\n\ntype\nString\nType of element of the user's Telegram Passport which has the issue, one of âpassportâ, âdriver_licenseâ, âidentity_cardâ, âinternal_passportâ, âutility_billâ, âbank_statementâ, ârental_agreementâ, âpassport_registrationâ, âtemporary_registrationâ\n\n\nfile_hash\nString\nBase64-encoded file hash\n\n\nmessage\nString\nError message\n\n\n\nPassportElementErrorTranslationFiles\nRepresents an issue with the translated version of a document. The error is considered resolved when a file with the document translation change.\n\n\n\nField\nType\nDescription\n\n\n\n\nsource\nString\nError source, must be translation_files\n\n\ntype\nString\nType of element of the user's Telegram Passport which has the issue, one of âpassportâ, âdriver_licenseâ, âidentity_cardâ, âinternal_passportâ, âutility_billâ, âbank_statementâ, ârental_agreementâ, âpassport_registrationâ, âtemporary_registrationâ\n\n\nfile_hashes\nArray of String\nList of base64-encoded file hashes\n\n\nmessage\nString\nError message\n\n\n\nPassportElementErrorUnspecified\nRepresents an issue in an unspecified place. The error is considered resolved when new data is added.\n\n\n\nField\nType\nDescription\n\n\n\n\nsource\nString\nError source, must be unspecified\n\n\ntype\nString\nType of element of the user's Telegram Passport which has the issue\n\n\nelement_hash\nString\nBase64-encoded element hash\n\n\nmessage\nString\nError message\n\n\n\nGames\nYour bot can offer users HTML5 games to play solo or to compete against each other in groups and one-on-one chats. Create games via @BotFather using the /newgame command. Please note that this kind of power requires responsibility: you will need to accept the terms for each game that your bots will be offering.\n\nGames are a new type of content on Telegram, represented by the Game and InlineQueryResultGame objects.\nOnce you've created a game via BotFather, you can send games to chats as regular messages using the sendGame method, or use inline mode with InlineQueryResultGame.\nIf you send the game message without any buttons, it will automatically have a 'Play GameName' button. When this button is pressed, your bot gets a CallbackQuery with the game_short_name of the requested game. You provide the correct URL for this particular user and the app opens the game in the in-app browser.\nYou can manually add multiple buttons to your game message. Please note that the first button in the first row must always launch the game, using the field callback_game in InlineKeyboardButton. You can add extra buttons according to taste: e.g., for a description of the rules, or to open the game's official community.\nTo make your game more attractive, you can upload a GIF animation that demonstrates the game to the users via BotFather (see Lumberjack for example).\nA game message will also display high scores for the current chat. Use setGameScore to post high scores to the chat with the game, add the disable_edit_message parameter to disable automatic update of the message with the current scoreboard.\nUse getGameHighScores to get data for in-game high score tables.\nYou can also add an extra sharing button for users to share their best score to different chats.\nFor examples of what can be done using this new stuff, check the @gamebot and @gamee bots.\n\nsendGame\nUse this method to send a game. On success, the sent Message is returned.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nbusiness_connection_id\nString\nOptional\nUnique identifier of the business connection on behalf of which the message will be sent\n\n\nchat_id\nInteger\nYes\nUnique identifier for the target chat\n\n\nmessage_thread_id\nInteger\nOptional\nUnique identifier for the target message thread (topic) of the forum; for forum supergroups only\n\n\ngame_short_name\nString\nYes\nShort name of the game, serves as the unique identifier for the game. Set up your games via @BotFather.\n\n\ndisable_notification\nBoolean\nOptional\nSends the message silently. Users will receive a notification with no sound.\n\n\nprotect_content\nBoolean\nOptional\nProtects the contents of the sent message from forwarding and saving\n\n\nallow_paid_broadcast\nBoolean\nOptional\nPass True to allow up to 1000 messages per second, ignoring broadcasting limits for a fee of 0.1 Telegram Stars per message. The relevant Stars will be withdrawn from the bot's balance\n\n\nmessage_effect_id\nString\nOptional\nUnique identifier of the message effect to be added to the message; for private chats only\n\n\nreply_parameters\nReplyParameters\nOptional\nDescription of the message to reply to\n\n\nreply_markup\nInlineKeyboardMarkup\nOptional\nA JSON-serialized object for an inline keyboard. If empty, one 'Play game_title' button will be shown. If not empty, the first button must launch the game.\n\n\n\nGame\nThis object represents a game. Use BotFather to create and edit games, their short names will act as unique identifiers.\n\n\n\nField\nType\nDescription\n\n\n\n\ntitle\nString\nTitle of the game\n\n\ndescription\nString\nDescription of the game\n\n\nphoto\nArray of PhotoSize\nPhoto that will be displayed in the game message in chats.\n\n\ntext\nString\nOptional. Brief description of the game or high scores included in the game message. Can be automatically edited to include current high scores for the game when the bot calls setGameScore, or manually edited using editMessageText. 0-4096 characters.\n\n\ntext_entities\nArray of MessageEntity\nOptional. Special entities that appear in text, such as usernames, URLs, bot commands, etc.\n\n\nanimation\nAnimation\nOptional. Animation that will be displayed in the game message in chats. Upload via BotFather\n\n\n\nCallbackGame\nA placeholder, currently holds no information. Use BotFather to set up your game.\nsetGameScore\nUse this method to set the score of the specified user in a game message. On success, if the message is not an inline message, the Message is returned, otherwise True is returned. Returns an error, if the new score is not greater than the user's current score in the chat and force is False.\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nUser identifier\n\n\nscore\nInteger\nYes\nNew score, must be non-negative\n\n\nforce\nBoolean\nOptional\nPass True if the high score is allowed to decrease. This can be useful when fixing mistakes or banning cheaters\n\n\ndisable_edit_message\nBoolean\nOptional\nPass True if the game message should not be automatically edited to include the current scoreboard\n\n\nchat_id\nInteger\nOptional\nRequired if inline_message_id is not specified. Unique identifier for the target chat\n\n\nmessage_id\nInteger\nOptional\nRequired if inline_message_id is not specified. Identifier of the sent message\n\n\ninline_message_id\nString\nOptional\nRequired if chat_id and message_id are not specified. Identifier of the inline message\n\n\n\ngetGameHighScores\nUse this method to get data for high score tables. Will return the score of the specified user and several of their neighbors in a game. Returns an Array of GameHighScore objects.\n\nThis method will currently return scores for the target user, plus two of their closest neighbors on each side. Will also return the top three users if the user and their neighbors are not among them. Please note that this behavior is subject to change.\n\n\n\n\nParameter\nType\nRequired\nDescription\n\n\n\n\nuser_id\nInteger\nYes\nTarget user id\n\n\nchat_id\nInteger\nOptional\nRequired if inline_message_id is not specified. Unique identifier for the target chat\n\n\nmessage_id\nInteger\nOptional\nRequired if inline_message_id is not specified. Identifier of the sent message\n\n\ninline_message_id\nString\nOptional\nRequired if chat_id and message_id are not specified. Identifier of the inline message\n\n\n\nGameHighScore\nThis object represents one row of the high scores table for a game.\n\n\n\nField\nType\nDescription\n\n\n\n\nposition\nInteger\nPosition in high score table for the game\n\n\nuser\nUser\nUser\n\n\nscore\nInteger\nScore\n\n\n\n\nAnd that's about all we've got for now.If you've got any questions, please check out our Bot FAQ Â»\n\n  \n\n          \n        \n      \n      \n  \n    \n      Telegram\n      \n      Telegram is a cloud-based mobile and desktop messaging app with a focus on security and speed.\n    \n\n    \n      About\n      \n        FAQ\n        Privacy\n        Press\n      \n    \n    \n      Mobile Apps\n      \n        iPhone/iPad\n        Android\n        Mobile Web\n      \n    \n    \n      Desktop Apps\n      \n        PC/Mac/Linux\n        macOS\n        Web-browser\n      \n    \n    \n      Platform\n      \n        API\n        Translations\n        Instant View\n      \n    \n  \n  \n    \n      About\n    \n    \n      Blog\n    \n    \n      Press\n    \n    \n      Moderation\n    \n  \n\n    \n    \n    \n\n\n    window.initDevPageNav&&initDevPageNav();\nbackToTopInit(\"Go up\");\nremovePreloadInit();"
}